import{Q as e}from"./15.329399bd.js";import"./index.a2391391.js";(function(){try{var t=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},r=new Error().stack;r&&(t._sentryDebugIds=t._sentryDebugIds||{},t._sentryDebugIds[r]="c934325a-ec2b-4857-9539-14a42e8154d2",t._sentryDebugIdIdentifier="sentry-dbid-c934325a-ec2b-4857-9539-14a42e8154d2")}catch{}})();const l={title:"TypeScript Simple Types Quiz",description:"Test your knowledge of TypeScript simple types.",questionnaire:{questions:[{title:"What is the TypeScript type for representing a string?",name:"q1",points:1,order:1,question_type:e[0],options:[{label:"str",is_correct:!1},{label:"string",is_correct:!0},{label:"text",is_correct:!1}]},{title:"Which keyword is used to declare a constant in TypeScript?",name:"q2",points:1,order:2,question_type:e[0],options:[{label:"let",is_correct:!1},{label:"const",is_correct:!0},{label:"var",is_correct:!1}]},{title:"What is the TypeScript type for representing a boolean value?",name:"q3",points:1,order:3,question_type:e[0],options:[{label:"bool",is_correct:!1},{label:"boolean",is_correct:!0},{label:"truefalse",is_correct:!1}]},{title:"Which TypeScript type can hold multiple values, such as a list of numbers?",name:"q4",points:1,order:4,question_type:e[0],options:[{label:"array",is_correct:!1},{label:"number[]",is_correct:!0},{label:"list",is_correct:!1}]},{title:"What is the TypeScript type for representing a function?",name:"q5",points:1,order:5,question_type:e[0],options:[{label:"function",is_correct:!1},{label:"func",is_correct:!1},{label:"() => void",is_correct:!0}]},{title:"Which TypeScript type represents a value that can be either a number or a string?",name:"q6",points:1,order:6,question_type:e[0],options:[{label:"number|string",is_correct:!0},{label:"mixed",is_correct:!1},{label:"any",is_correct:!1}]},{title:"In TypeScript, how do you declare a variable without specifying its type?",name:"q7",points:1,order:7,question_type:e[0],options:[{label:"Using the `var` keyword",is_correct:!1},{label:"Using the `let` keyword",is_correct:!1},{label:"Using the `const` keyword",is_correct:!1},{label:"Using the `any` keyword",is_correct:!0}]},{title:"Which TypeScript type represents a value that can be null or undefined?",name:"q8",points:1,order:8,question_type:e[0],options:[{label:"null",is_correct:!1},{label:"undefined",is_correct:!1},{label:"null|undefined",is_correct:!0}]},{title:"What is the TypeScript type for representing an object with specific properties?",name:"q9",points:1,order:9,question_type:e[0],options:[{label:"object",is_correct:!1},{label:"Record<string, any>",is_correct:!1},{label:"Custom interface/type",is_correct:!0}]},{title:"Which TypeScript type can be used to represent a value that is not available yet or an error?",name:"q10",points:1,order:10,question_type:e[0],options:[{label:"unknown",is_correct:!0},{label:"undefined",is_correct:!1},{label:"null",is_correct:!1}]}]}};export{l as default};
//# sourceMappingURL=001_ts_simpleTypes.02256af8.js.map
