{"version":3,"file":"003_node_fileSystem.75644fd6.js","sources":["../../../../../../src/lib/mocks/node/003_node_fileSystem.ts"],"sourcesContent":["import { QuestionTypes } from '../utils';\n\nimport type { ExerciseTemplate } from '$lib/utils/types';\n\nconst template: ExerciseTemplate = {\n  title: 'Node.js File System Quiz',\n  description: 'Test your knowledge of Node.js File System module from W3Schools',\n  questionnaire: {\n    questions: [\n      {\n        title: 'What is the primary use of the Node.js File System module?',\n        name: 'q1',\n        points: 1,\n        order: 1,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'Handling file operations', is_correct: true },\n          { label: 'Database operations', is_correct: false },\n          { label: 'Network communication', is_correct: false }\n        ]\n      },\n      {\n        title: 'Which method is used to read the contents of a file in Node.js?',\n        name: 'q2',\n        points: 1,\n        order: 2,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'fs.read()', is_correct: false },\n          { label: 'fs.readFile()', is_correct: true },\n          { label: 'fs.write()', is_correct: false }\n        ]\n      },\n      {\n        title: 'What is the purpose of the \"fs.promises\" API in Node.js File System?',\n        name: 'q3',\n        points: 1,\n        order: 3,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'Handling synchronous file operations', is_correct: false },\n          { label: 'Handling asynchronous file operations with promises', is_correct: true },\n          { label: 'Handling network requests', is_correct: false }\n        ]\n      },\n      {\n        title:\n          'Which of the following is a valid way to create a new file using the File System module?',\n        name: 'q4',\n        points: 1,\n        order: 4,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          { label: 'fs.createFile()', is_correct: true },\n          { label: 'fs.writeFile()', is_correct: true },\n          { label: 'fs.newFile()', is_correct: false },\n          { label: 'fs.appendFile()', is_correct: false }\n        ]\n      },\n      {\n        title:\n          'Explain the difference between synchronous and asynchronous file operations in Node.js.',\n        name: 'q5',\n        points: 2,\n        order: 5,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'How can you check if a file exists using the File System module in Node.js?',\n        name: 'q6',\n        points: 2,\n        order: 6,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'fs.exists()', is_correct: false },\n          { label: 'fs.access()', is_correct: true },\n          { label: 'fs.checkFile()', is_correct: false }\n        ]\n      },\n      {\n        title: 'Which method is used to delete a file in Node.js using the File System module?',\n        name: 'q7',\n        points: 2,\n        order: 7,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'fs.remove()', is_correct: false },\n          { label: 'fs.deleteFile()', is_correct: false },\n          { label: 'fs.unlink()', is_correct: true }\n        ]\n      },\n      {\n        title: 'What is the purpose of the \"fs.createReadStream()\" method in Node.js?',\n        name: 'q8',\n        points: 2,\n        order: 8,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'Which of the following is a valid use case for the File System module in Node.js?',\n        name: 'q9',\n        points: 2,\n        order: 9,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          { label: 'Reading and writing configuration files', is_correct: true },\n          { label: 'Creating a web server', is_correct: false },\n          { label: 'Sending emails', is_correct: false },\n          { label: 'Database operations', is_correct: false }\n        ]\n      },\n      {\n        title: 'Explain the difference between \"fs.readFile()\" and \"fs.readFileSync()\" in Node.js.',\n        name: 'q10',\n        points: 2,\n        order: 10,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      }\n    ]\n  }\n};\n\nexport default template;\n"],"names":["template","QuestionTypes"],"mappings":"wXAIA,MAAAA,EAAA,CAAA,MAAA,2BACA,YAAA,mEACA,cAAA,CACA,UAAA,CACA,CACA,MAAA,6DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAC,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,2BAAA,WAAA,EAAA,EACA,CAAA,MAAA,sBAAA,WAAA,EAAA,EACA,CAAA,MAAA,wBAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,kEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,YAAA,WAAA,EAAA,EACA,CAAA,MAAA,gBAAA,WAAA,EAAA,EACA,CAAA,MAAA,aAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,uEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,uCAAA,WAAA,EAAA,EACA,CAAA,MAAA,sDAAA,WAAA,EAAA,EACA,CAAA,MAAA,4BAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,2FAEA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,kBAAA,WAAA,EAAA,EACA,CAAA,MAAA,iBAAA,WAAA,EAAA,EACA,CAAA,MAAA,eAAA,WAAA,EAAA,EACA,CAAA,MAAA,kBAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,0FAEA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,8EACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,cAAA,WAAA,EAAA,EACA,CAAA,MAAA,cAAA,WAAA,EAAA,EACA,CAAA,MAAA,iBAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,iFACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,cAAA,WAAA,EAAA,EACA,CAAA,MAAA,kBAAA,WAAA,EAAA,EACA,CAAA,MAAA,cAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,wEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,oFACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,0CAAA,WAAA,EAAA,EACA,CAAA,MAAA,wBAAA,WAAA,EAAA,EACA,CAAA,MAAA,iBAAA,WAAA,EAAA,EACA,CAAA,MAAA,sBAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,qFACA,KAAA,MACA,OAAA,EACA,MAAA,GACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,CACA,CACA,CAEA"}