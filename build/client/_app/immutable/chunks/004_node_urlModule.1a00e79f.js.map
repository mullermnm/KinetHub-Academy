{"version":3,"file":"004_node_urlModule.1a00e79f.js","sources":["../../../../../../src/lib/mocks/node/004_node_urlModule.ts"],"sourcesContent":["import { QuestionTypes } from '../utils';\n\nimport type { ExerciseTemplate } from '$lib/utils/types';\n\nconst template: ExerciseTemplate = {\n  title: 'Node.js URL Handling Quiz',\n  description: 'Test your knowledge of Node.js URL handling.',\n  questionnaire: {\n    questions: [\n      {\n        title: 'What is the primary purpose of the \"url\" module in Node.js?',\n        name: 'question1',\n        points: 2,\n        order: 0,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'To parse and manipulate URLs.',\n            is_correct: true\n          },\n          {\n            label: 'To make HTTP requests.',\n            is_correct: false\n          },\n          {\n            label: 'To create dynamic web pages.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'Which method is used to parse a URL string in Node.js?',\n        name: 'question2',\n        points: 1,\n        order: 1,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'parseURL()',\n            is_correct: false\n          },\n          {\n            label: 'url.parse()',\n            is_correct: true\n          },\n          {\n            label: 'decodeURI()',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What information can you extract from a parsed URL object in Node.js?',\n        name: 'question3',\n        points: 1,\n        order: 2,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          {\n            label: 'Host and port',\n            is_correct: true\n          },\n          {\n            label: 'Query parameters',\n            is_correct: true\n          },\n          {\n            label: 'HTTP request method',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'Explain the difference between \"pathname\" and \"path\" in a URL object.',\n        name: 'question4',\n        points: 2,\n        order: 3,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'How can you create a URL object in Node.js?',\n        name: 'question5',\n        points: 1,\n        order: 4,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'Using the \"url.create()\" method.',\n            is_correct: false\n          },\n          {\n            label: 'By directly instantiating the URL class.',\n            is_correct: false\n          },\n          {\n            label: 'Using the \"url.parse()\" method.',\n            is_correct: false\n          },\n          {\n            label: 'By importing it from the \"url\" module.',\n            is_correct: true\n          }\n        ]\n      },\n      {\n        title: 'What is the purpose of the \"querystring\" module in Node.js URL handling?',\n        name: 'question6',\n        points: 2,\n        order: 5,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'To parse and manipulate query strings in URLs.',\n            is_correct: true\n          },\n          {\n            label: 'To create new URLs from scratch.',\n            is_correct: false\n          },\n          {\n            label: 'To perform HTTP requests.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title:\n          'How can you extract query parameters from a URL in Node.js using the \"querystring\" module?',\n        name: 'question7',\n        points: 1,\n        order: 6,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          {\n            label: 'Using the \"parse()\" method of the \"querystring\" module.',\n            is_correct: true\n          },\n          {\n            label: 'Accessing the \"query\" property of the URL object.',\n            is_correct: false\n          },\n          {\n            label: 'By splitting the URL string using a delimiter.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What does the \"format()\" method of the URL object in Node.js do?',\n        name: 'question8',\n        points: 2,\n        order: 7,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'It serializes a URL object back to a URL string.',\n            is_correct: true\n          },\n          {\n            label: 'It decodes a URL string.',\n            is_correct: false\n          },\n          {\n            label: 'It parses a query string into an object.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'In Node.js, which module is commonly used for making HTTP requests?',\n        name: 'question9',\n        points: 1,\n        order: 8,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'fs',\n            is_correct: false\n          },\n          {\n            label: 'http',\n            is_correct: true\n          },\n          {\n            label: 'url',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'How can you include the \"http\" module in your Node.js application?',\n        name: 'question10',\n        points: 2,\n        order: 9,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      }\n    ]\n  }\n};\n\nexport default template;\n"],"names":["template","QuestionTypes"],"mappings":"wXAIA,MAAAA,EAAA,CAAA,MAAA,4BACA,YAAA,+CACA,cAAA,CACA,UAAA,CACA,CACA,MAAA,8DACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAC,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,gCACA,WAAA,EACA,EACA,CACA,MAAA,yBACA,WAAA,EACA,EACA,CACA,MAAA,+BACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,yDACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,aACA,WAAA,EACA,EACA,CACA,MAAA,cACA,WAAA,EACA,EACA,CACA,MAAA,cACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,wEACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,gBACA,WAAA,EACA,EACA,CACA,MAAA,mBACA,WAAA,EACA,EACA,CACA,MAAA,sBACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,wEACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,8CACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,mCACA,WAAA,EACA,EACA,CACA,MAAA,2CACA,WAAA,EACA,EACA,CACA,MAAA,kCACA,WAAA,EACA,EACA,CACA,MAAA,yCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,2EACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,iDACA,WAAA,EACA,EACA,CACA,MAAA,mCACA,WAAA,EACA,EACA,CACA,MAAA,4BACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,6FAEA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,0DACA,WAAA,EACA,EACA,CACA,MAAA,oDACA,WAAA,EACA,EACA,CACA,MAAA,iDACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,mEACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,mDACA,WAAA,EACA,EACA,CACA,MAAA,2BACA,WAAA,EACA,EACA,CACA,MAAA,2CACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,sEACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,KACA,WAAA,EACA,EACA,CACA,MAAA,OACA,WAAA,EACA,EACA,CACA,MAAA,MACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,qEACA,KAAA,aACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,CACA,CACA,CAEA"}