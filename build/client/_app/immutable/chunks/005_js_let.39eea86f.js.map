{"version":3,"file":"005_js_let.39eea86f.js","sources":["../../../../../../src/lib/mocks/js/005_js_let.ts"],"sourcesContent":["import { QuestionTypes } from '../utils';\n\nimport type { ExerciseTemplate } from '$lib/utils/types';\n\nconst template: ExerciseTemplate = {\n  title: 'JavaScript \"let\" Quiz',\n  description: 'Test your knowledge of the \"let\" keyword in JavaScript.',\n  questionnaire: {\n    questions: [\n      {\n        title: 'What is the purpose of the \"let\" keyword in JavaScript?',\n        name: 'q1',\n        points: 1,\n        order: 1,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'To declare block-scoped variables',\n            is_correct: true\n          },\n          {\n            label: 'To declare global variables',\n            is_correct: false\n          },\n          {\n            label: 'To declare constant variables',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'Can you redeclare a variable declared with \"let\" in the same scope?',\n        name: 'q2',\n        points: 1,\n        order: 2,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'No, redeclaration is not allowed',\n            is_correct: true\n          },\n          {\n            label: 'Yes, redeclaration is allowed',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the scope of a variable declared with \"let\"?',\n        name: 'q3',\n        points: 1,\n        order: 3,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'Block scope',\n            is_correct: true\n          },\n          {\n            label: 'Global scope',\n            is_correct: false\n          },\n          {\n            label: 'Function scope',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'Which of the following statements is true about \"let\" variables?',\n        name: 'q4',\n        points: 1,\n        order: 4,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'They are hoisted to the top of the block',\n            is_correct: false\n          },\n          {\n            label: 'They are hoisted to the top of the function',\n            is_correct: false\n          },\n          {\n            label: 'They are not hoisted',\n            is_correct: true\n          }\n        ]\n      },\n      {\n        title: 'What is the initial value of a variable declared with \"let\"?',\n        name: 'q5',\n        points: 1,\n        order: 5,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'Undefined',\n            is_correct: true\n          },\n          {\n            label: '0',\n            is_correct: false\n          },\n          {\n            label: 'null',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'Can you use a \"let\" variable before declaring it?',\n        name: 'q6',\n        points: 1,\n        order: 6,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'No, it will result in a ReferenceError',\n            is_correct: true\n          },\n          {\n            label: 'Yes, it will have an initial value of undefined',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'Which statement is used to declare a constant variable in JavaScript?',\n        name: 'q7',\n        points: 1,\n        order: 7,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'const',\n            is_correct: true\n          },\n          {\n            label: 'var',\n            is_correct: false\n          },\n          {\n            label: 'let',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What happens if you try to reassign a constant variable?',\n        name: 'q8',\n        points: 1,\n        order: 8,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'It will result in a TypeError',\n            is_correct: true\n          },\n          {\n            label: 'It will reassign the variable without an error',\n            is_correct: false\n          },\n          {\n            label: 'It will throw a ReferenceError',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'How do you declare a variable with block scope using \"let\"?',\n        name: 'q9',\n        points: 1,\n        order: 9,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'Enclose it in curly braces',\n            is_correct: true\n          },\n          {\n            label: 'Use the \"block\" keyword',\n            is_correct: false\n          },\n          {\n            label: 'Use the \"scope\" keyword',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'In which ECMAScript version was \"let\" introduced?',\n        name: 'q10',\n        points: 1,\n        order: 10,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'ES6 (ECMAScript 2015)',\n            is_correct: true\n          },\n          {\n            label: 'ES5 (ECMAScript 2009)',\n            is_correct: false\n          },\n          {\n            label: 'ES7 (ECMAScript 2016)',\n            is_correct: false\n          }\n        ]\n      }\n    ]\n  }\n};\n\nexport default template;\n"],"names":["template","QuestionTypes"],"mappings":"wXAIA,MAAAA,EAAA,CAAA,MAAA,wBACA,YAAA,0DACA,cAAA,CACA,UAAA,CACA,CACA,MAAA,0DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAC,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,oCACA,WAAA,EACA,EACA,CACA,MAAA,8BACA,WAAA,EACA,EACA,CACA,MAAA,gCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,sEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,mCACA,WAAA,EACA,EACA,CACA,MAAA,gCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,uDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,cACA,WAAA,EACA,EACA,CACA,MAAA,eACA,WAAA,EACA,EACA,CACA,MAAA,iBACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,mEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,2CACA,WAAA,EACA,EACA,CACA,MAAA,8CACA,WAAA,EACA,EACA,CACA,MAAA,uBACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,+DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,YACA,WAAA,EACA,EACA,CACA,MAAA,IACA,WAAA,EACA,EACA,CACA,MAAA,OACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,oDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,yCACA,WAAA,EACA,EACA,CACA,MAAA,kDACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,wEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,QACA,WAAA,EACA,EACA,CACA,MAAA,MACA,WAAA,EACA,EACA,CACA,MAAA,MACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,2DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,gCACA,WAAA,EACA,EACA,CACA,MAAA,iDACA,WAAA,EACA,EACA,CACA,MAAA,iCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,8DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,6BACA,WAAA,EACA,EACA,CACA,MAAA,0BACA,WAAA,EACA,EACA,CACA,MAAA,0BACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,oDACA,KAAA,MACA,OAAA,EACA,MAAA,GACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,wBACA,WAAA,EACA,EACA,CACA,MAAA,wBACA,WAAA,EACA,EACA,CACA,MAAA,wBACA,WAAA,EACA,CACA,CACA,CACA,CACA,CAEA"}