{"version":3,"file":"006_js_const.1020ad53.js","sources":["../../../../../../src/lib/mocks/js/006_js_const.ts"],"sourcesContent":["import { QuestionTypes } from '../utils';\n\nimport type { ExerciseTemplate } from '$lib/utils/types';\n\nconst template: ExerciseTemplate = {\n  title: 'JavaScript \"const\" Quiz',\n  description: 'Test your knowledge of the \"const\" keyword in JavaScript.',\n  questionnaire: {\n    questions: [\n      {\n        title: 'What is the purpose of the \"const\" keyword in JavaScript?',\n        name: 'q1',\n        points: 1,\n        order: 1,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'To declare constants with block scope',\n            is_correct: false\n          },\n          {\n            label: 'To declare constants with function scope',\n            is_correct: false\n          },\n          {\n            label: 'To declare constants with block scope that cannot be reassigned',\n            is_correct: true\n          }\n        ]\n      },\n      {\n        title: 'Can you reassign a variable declared with \"const\"?',\n        name: 'q2',\n        points: 1,\n        order: 2,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'Yes, you can reassign it',\n            is_correct: false\n          },\n          {\n            label: 'No, it cannot be reassigned',\n            is_correct: true\n          }\n        ]\n      },\n      {\n        title: 'What happens if you try to reassign a \"const\" variable?',\n        name: 'q3',\n        points: 1,\n        order: 3,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'It will result in a ReferenceError',\n            is_correct: true\n          },\n          {\n            label: 'It will reassign the variable without an error',\n            is_correct: false\n          },\n          {\n            label: 'It will throw a TypeError',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'When should you use the \"const\" keyword in JavaScript?',\n        name: 'q4',\n        points: 1,\n        order: 4,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'For variables that will be reassigned frequently',\n            is_correct: false\n          },\n          {\n            label: 'For variables that should not be reassigned',\n            is_correct: true\n          },\n          {\n            label: 'For all variables in your code',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'Which of the following is true about \"const\" variables?',\n        name: 'q5',\n        points: 1,\n        order: 5,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'They have block scope',\n            is_correct: false\n          },\n          {\n            label: 'They have function scope',\n            is_correct: false\n          },\n          {\n            label: 'They have block scope and cannot be reassigned',\n            is_correct: true\n          }\n        ]\n      },\n      {\n        title: 'Can you declare a \"const\" variable without initializing it?',\n        name: 'q6',\n        points: 1,\n        order: 6,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'No, you must initialize it when declaring',\n            is_correct: true\n          },\n          {\n            label: 'Yes, it will have an initial value of undefined',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the initial value of a \"const\" variable?',\n        name: 'q7',\n        points: 1,\n        order: 7,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'Undefined',\n            is_correct: false\n          },\n          {\n            label: '0',\n            is_correct: false\n          },\n          {\n            label: 'null',\n            is_correct: false\n          },\n          {\n            label: 'It must be initialized with a value',\n            is_correct: true\n          }\n        ]\n      },\n      {\n        title: 'In which ECMAScript version was \"const\" introduced?',\n        name: 'q8',\n        points: 1,\n        order: 8,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'ES6 (ECMAScript 2015)',\n            is_correct: true\n          },\n          {\n            label: 'ES5 (ECMAScript 2009)',\n            is_correct: false\n          },\n          {\n            label: 'ES7 (ECMAScript 2016)',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the scoping behavior of \"const\" variables?',\n        name: 'q9',\n        points: 1,\n        order: 9,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'They have block scope',\n            is_correct: true\n          },\n          {\n            label: 'They have global scope',\n            is_correct: false\n          },\n          {\n            label: 'They have function scope',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'Which of the following is NOT a valid way to declare a \"const\" variable?',\n        name: 'q10',\n        points: 1,\n        order: 10,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'const myVar = 10;',\n            is_correct: false\n          },\n          {\n            label: 'const myVar;',\n            is_correct: true\n          },\n          {\n            label: 'const myVar = \"Hello\";',\n            is_correct: false\n          }\n        ]\n      }\n    ]\n  }\n};\n\nexport default template;\n"],"names":["template","QuestionTypes"],"mappings":"wXAIA,MAAAA,EAAA,CAAA,MAAA,0BACA,YAAA,4DACA,cAAA,CACA,UAAA,CACA,CACA,MAAA,4DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAC,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,wCACA,WAAA,EACA,EACA,CACA,MAAA,2CACA,WAAA,EACA,EACA,CACA,MAAA,kEACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,qDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,2BACA,WAAA,EACA,EACA,CACA,MAAA,8BACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,0DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,qCACA,WAAA,EACA,EACA,CACA,MAAA,iDACA,WAAA,EACA,EACA,CACA,MAAA,4BACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,yDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,mDACA,WAAA,EACA,EACA,CACA,MAAA,8CACA,WAAA,EACA,EACA,CACA,MAAA,iCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,0DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,wBACA,WAAA,EACA,EACA,CACA,MAAA,2BACA,WAAA,EACA,EACA,CACA,MAAA,iDACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,8DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,4CACA,WAAA,EACA,EACA,CACA,MAAA,kDACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,mDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,YACA,WAAA,EACA,EACA,CACA,MAAA,IACA,WAAA,EACA,EACA,CACA,MAAA,OACA,WAAA,EACA,EACA,CACA,MAAA,sCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,sDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,wBACA,WAAA,EACA,EACA,CACA,MAAA,wBACA,WAAA,EACA,EACA,CACA,MAAA,wBACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,qDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,wBACA,WAAA,EACA,EACA,CACA,MAAA,yBACA,WAAA,EACA,EACA,CACA,MAAA,2BACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,2EACA,KAAA,MACA,OAAA,EACA,MAAA,GACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,oBACA,WAAA,EACA,EACA,CACA,MAAA,eACA,WAAA,EACA,EACA,CACA,MAAA,yBACA,WAAA,EACA,CACA,CACA,CACA,CACA,CAEA"}