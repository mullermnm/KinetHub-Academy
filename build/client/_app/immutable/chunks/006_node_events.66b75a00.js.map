{"version":3,"file":"006_node_events.66b75a00.js","sources":["../../../../../../src/lib/mocks/node/006_node_events.ts"],"sourcesContent":["import { QuestionTypes } from '../utils';\n\nimport type { ExerciseTemplate } from '$lib/utils/types';\n\nconst template: ExerciseTemplate = {\n  title: 'Node.js Events Quiz',\n  description: 'Test your knowledge of Node.js events and event handling.',\n  questionnaire: {\n    questions: [\n      {\n        title: 'What are events in Node.js?',\n        name: 'question1',\n        points: 2,\n        order: 0,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'Functions that are triggered when an HTTP request is received.',\n            is_correct: false\n          },\n          {\n            label: 'Actions or occurrences that can be detected and responded to in Node.js.',\n            is_correct: true\n          },\n          {\n            label: 'External JavaScript libraries for handling animations.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'How do you create a custom event emitter in Node.js?',\n        name: 'question2',\n        points: 1,\n        order: 1,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'By instantiating the \"EventEmitter\" class.',\n            is_correct: true\n          },\n          {\n            label: 'By using the \"event.create()\" function.',\n            is_correct: false\n          },\n          {\n            label: 'By defining a new function.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the purpose of the \"on\" method in the EventEmitter class?',\n        name: 'question3',\n        points: 1,\n        order: 2,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          {\n            label: 'To add a listener for a specific event.',\n            is_correct: true\n          },\n          {\n            label: 'To emit an event.',\n            is_correct: false\n          },\n          {\n            label: 'To remove a listener for an event.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title:\n          'Explain the difference between \"addListener\" and \"on\" methods in the EventEmitter class.',\n        name: 'question4',\n        points: 2,\n        order: 3,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'How can you remove an event listener in Node.js?',\n        name: 'question5',\n        points: 2,\n        order: 4,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'Using the \"removeListener\" method.',\n            is_correct: true\n          },\n          {\n            label: 'By setting the listener to \"null\".',\n            is_correct: false\n          },\n          {\n            label: 'By calling the \"off\" method.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the purpose of the \"once\" method in the EventEmitter class?',\n        name: 'question6',\n        points: 1,\n        order: 5,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'To add a one-time listener for an event.',\n            is_correct: true\n          },\n          {\n            label: 'To emit an event multiple times.',\n            is_correct: false\n          },\n          {\n            label: 'To remove a listener for an event.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'How do you emit an event in Node.js?',\n        name: 'question7',\n        points: 1,\n        order: 6,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          {\n            label: 'Using the \"event.emit()\" method.',\n            is_correct: true\n          },\n          {\n            label: 'By calling the event as a function.',\n            is_correct: false\n          },\n          {\n            label: 'Using the \"event.trigger()\" method.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the purpose of the \"removeAllListeners\" method?',\n        name: 'question8',\n        points: 1,\n        order: 7,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          {\n            label: 'To remove all listeners for a specific event.',\n            is_correct: true\n          },\n          {\n            label: 'To remove all listeners for all events.',\n            is_correct: true\n          },\n          {\n            label: 'To add listeners for all events.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title:\n          'How can you use the \"EventEmitter\" class to implement a custom event in your Node.js application?',\n        name: 'question9',\n        points: 2,\n        order: 8,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'By importing the \"event\" module.',\n            is_correct: false\n          },\n          {\n            label: 'By extending the \"EventEmitter\" class.',\n            is_correct: true\n          },\n          {\n            label: 'By using the \"EventEmitter.create()\" method.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the purpose of the \"error\" event in Node.js?',\n        name: 'question10',\n        points: 2,\n        order: 9,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'To handle errors that occur in asynchronous operations.',\n            is_correct: true\n          },\n          {\n            label: 'To emit errors in the application.',\n            is_correct: false\n          },\n          {\n            label: 'To trigger HTTP requests.',\n            is_correct: false\n          }\n        ]\n      }\n    ]\n  }\n};\n\nexport default template;\n"],"names":["template","QuestionTypes"],"mappings":"wXAIA,MAAAA,EAAA,CAAA,MAAA,sBACA,YAAA,4DACA,cAAA,CACA,UAAA,CACA,CACA,MAAA,8BACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAC,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,iEACA,WAAA,EACA,EACA,CACA,MAAA,2EACA,WAAA,EACA,EACA,CACA,MAAA,yDACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,uDACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,6CACA,WAAA,EACA,EACA,CACA,MAAA,0CACA,WAAA,EACA,EACA,CACA,MAAA,8BACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,oEACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,0CACA,WAAA,EACA,EACA,CACA,MAAA,oBACA,WAAA,EACA,EACA,CACA,MAAA,qCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,2FAEA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,mDACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,qCACA,WAAA,EACA,EACA,CACA,MAAA,qCACA,WAAA,EACA,EACA,CACA,MAAA,+BACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,sEACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,2CACA,WAAA,EACA,EACA,CACA,MAAA,mCACA,WAAA,EACA,EACA,CACA,MAAA,qCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,uCACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,mCACA,WAAA,EACA,EACA,CACA,MAAA,sCACA,WAAA,EACA,EACA,CACA,MAAA,sCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,0DACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,gDACA,WAAA,EACA,EACA,CACA,MAAA,0CACA,WAAA,EACA,EACA,CACA,MAAA,mCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,oGAEA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,mCACA,WAAA,EACA,EACA,CACA,MAAA,yCACA,WAAA,EACA,EACA,CACA,MAAA,+CACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,uDACA,KAAA,aACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,0DACA,WAAA,EACA,EACA,CACA,MAAA,qCACA,WAAA,EACA,EACA,CACA,MAAA,4BACA,WAAA,EACA,CACA,CACA,CACA,CACA,CAEA"}