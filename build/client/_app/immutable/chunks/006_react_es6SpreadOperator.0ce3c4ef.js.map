{"version":3,"file":"006_react_es6SpreadOperator.0ce3c4ef.js","sources":["../../../../../../src/lib/mocks/react/006_react_es6SpreadOperator.ts"],"sourcesContent":["import { QuestionTypes } from '../utils';\n\nimport type { ExerciseTemplate } from '$lib/utils/types';\n\nconst template: ExerciseTemplate = {\n  title: 'React ES6 Spread Operator Quiz',\n  description: 'Test your knowledge of the React ES6 spread operator.',\n  questionnaire: {\n    questions: [\n      {\n        title: 'What is the purpose of the spread operator (...) in JavaScript?',\n        name: 'q1',\n        points: 1,\n        order: 0,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'To concatenate arrays', is_correct: false },\n          { label: 'To clone an object or array', is_correct: true },\n          { label: 'To create a new function', is_correct: false }\n        ]\n      },\n      {\n        title: 'How do you use the spread operator to copy an array in JavaScript?',\n        name: 'q2',\n        points: 1,\n        order: 1,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'array.copy()', is_correct: false },\n          { label: 'array.clone()', is_correct: false },\n          { label: '[...array]', is_correct: true }\n        ]\n      },\n      {\n        title: 'Which of the following is a valid use case for the spread operator in JavaScript?',\n        name: 'q3',\n        points: 1,\n        order: 2,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'Merging two arrays', is_correct: true },\n          { label: 'Creating a new object', is_correct: false },\n          { label: 'Defining a function', is_correct: false }\n        ]\n      },\n      {\n        title: 'What is the output of the following code: `const arr = [1, 2, ...[3, 4], 5];`?',\n        name: 'q4',\n        points: 1,\n        order: 3,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: '[1, 2, [3, 4], 5]', is_correct: false },\n          { label: '[1, 2, 3, 4, 5]', is_correct: true },\n          { label: '[1, 2, ...[3, 4], ...5]', is_correct: false }\n        ]\n      },\n      {\n        title: 'Select all valid use cases for the spread operator in JavaScript.',\n        name: 'q5',\n        points: 1,\n        order: 4,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          { label: 'Cloning an array', is_correct: true },\n          { label: 'Concatenating arrays', is_correct: true },\n          { label: 'Merging objects', is_correct: true },\n          { label: 'Defining a new function', is_correct: false }\n        ]\n      },\n      {\n        title: 'Write an example of using the spread operator to merge two objects in JavaScript.',\n        name: 'q6',\n        points: 1,\n        order: 5,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'Explain the concept of shallow copying using the spread operator in JavaScript.',\n        name: 'q7',\n        points: 1,\n        order: 6,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'What are the advantages of using the spread operator in JavaScript?',\n        name: 'q8',\n        points: 1,\n        order: 7,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'List some common use cases for the spread operator in JavaScript.',\n        name: 'q9',\n        points: 1,\n        order: 8,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'What happens if you use the spread operator on a non-iterable value in JavaScript?',\n        name: 'q10',\n        points: 1,\n        order: 9,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      }\n    ]\n  }\n};\n\nexport default template;\n"],"names":["template","QuestionTypes"],"mappings":"wXAIA,MAAAA,EAAA,CAAA,MAAA,iCACA,YAAA,wDACA,cAAA,CACA,UAAA,CACA,CACA,MAAA,kEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAC,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,wBAAA,WAAA,EAAA,EACA,CAAA,MAAA,8BAAA,WAAA,EAAA,EACA,CAAA,MAAA,2BAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,qEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,eAAA,WAAA,EAAA,EACA,CAAA,MAAA,gBAAA,WAAA,EAAA,EACA,CAAA,MAAA,aAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,oFACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,qBAAA,WAAA,EAAA,EACA,CAAA,MAAA,wBAAA,WAAA,EAAA,EACA,CAAA,MAAA,sBAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,iFACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,oBAAA,WAAA,EAAA,EACA,CAAA,MAAA,kBAAA,WAAA,EAAA,EACA,CAAA,MAAA,0BAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,oEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,mBAAA,WAAA,EAAA,EACA,CAAA,MAAA,uBAAA,WAAA,EAAA,EACA,CAAA,MAAA,kBAAA,WAAA,EAAA,EACA,CAAA,MAAA,0BAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,oFACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,kFACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,sEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,oEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,qFACA,KAAA,MACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,CACA,CACA,CAEA"}