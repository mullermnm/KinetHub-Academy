{"version":3,"file":"006_ts_enums.6eeaecc5.js","sources":["../../../../../../src/lib/mocks/typescript/006_ts_enums.ts"],"sourcesContent":["import { QuestionTypes } from '../utils';\n\nimport type { ExerciseTemplate } from '$lib/utils/types';\n\nconst template: ExerciseTemplate = {\n  title: 'TypeScript Enums Quiz',\n  description: 'Test your knowledge of TypeScript enums.',\n  questionnaire: {\n    questions: [\n      {\n        title: 'What is an enum in TypeScript?',\n        name: 'q1',\n        points: 1,\n        order: 1,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'A keyword used to declare variables in TypeScript.',\n            is_correct: false\n          },\n          {\n            label: 'A way to define a collection of related named constant values.',\n            is_correct: true\n          },\n          {\n            label: 'A type of function in TypeScript.',\n            is_correct: false\n          },\n          {\n            label: 'A type of loop in TypeScript.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'Which keyword is used to define an enum in TypeScript?',\n        name: 'q2',\n        points: 1,\n        order: 2,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'enum',\n            is_correct: true\n          },\n          {\n            label: 'class',\n            is_correct: false\n          },\n          {\n            label: 'interface',\n            is_correct: false\n          },\n          {\n            label: 'type',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the default value of the first enum member if not explicitly assigned?',\n        name: 'q3',\n        points: 1,\n        order: 3,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: '0',\n            is_correct: true\n          },\n          {\n            label: '1',\n            is_correct: false\n          },\n          {\n            label: 'undefined',\n            is_correct: false\n          },\n          {\n            label: 'null',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'How do you access enum members in TypeScript?',\n        name: 'q4',\n        points: 1,\n        order: 4,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'By using dot notation (e.g., `EnumName.MemberName`).',\n            is_correct: true\n          },\n          {\n            label: 'By using square brackets (e.g., `EnumName[\"MemberName\"]`).',\n            is_correct: false\n          },\n          {\n            label: 'By using parentheses (e.g., `EnumName(\"MemberName\")`).',\n            is_correct: false\n          },\n          {\n            label: 'By using the `get` method (e.g., `EnumName.get(\"MemberName\")`).',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'In TypeScript, can enums have string values as members?',\n        name: 'q5',\n        points: 1,\n        order: 5,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'Yes, enums can only have string values as members.',\n            is_correct: false\n          },\n          {\n            label: 'Yes, enums can have both numeric and string values as members.',\n            is_correct: true\n          },\n          {\n            label: 'No, enums can only have numeric values as members.',\n            is_correct: false\n          },\n          {\n            label: 'No, enums cannot have values assigned to their members.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the purpose of using enums in TypeScript?',\n        name: 'q6',\n        points: 1,\n        order: 6,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'To define classes in TypeScript.',\n            is_correct: false\n          },\n          {\n            label: 'To define named constants representing a set of related values.',\n            is_correct: true\n          },\n          {\n            label: 'To define functions in TypeScript.',\n            is_correct: false\n          },\n          {\n            label: 'To define interfaces in TypeScript.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the benefit of using enums over plain objects in TypeScript?',\n        name: 'q7',\n        points: 1,\n        order: 7,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'Enums provide better performance and memory management.',\n            is_correct: false\n          },\n          {\n            label: 'Enums are easier to use when working with a fixed set of values.',\n            is_correct: true\n          },\n          {\n            label: 'Enums are not recommended over plain objects in TypeScript.',\n            is_correct: false\n          },\n          {\n            label: 'Enums can be used to create instances of objects.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'Can enum members have the same name within the same enum?',\n        name: 'q8',\n        points: 1,\n        order: 8,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'Yes, enum members can have the same name within the same enum.',\n            is_correct: false\n          },\n          {\n            label: 'No, enum members must have unique names within the same enum.',\n            is_correct: true\n          },\n          {\n            label: 'Enum members are not allowed in TypeScript.',\n            is_correct: false\n          },\n          {\n            label: 'The naming of enum members does not matter.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title:\n          'In TypeScript, can you assign a value to an enum member that is not part of the enum?',\n        name: 'q9',\n        points: 1,\n        order: 9,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'Yes, you can assign any value to an enum member in TypeScript.',\n            is_correct: true\n          },\n          {\n            label: 'No, enum members must have values that are part of the enum.',\n            is_correct: false\n          },\n          {\n            label: 'Enum members do not have values in TypeScript.',\n            is_correct: false\n          },\n          {\n            label: 'The assignment of enum values is determined by the compiler.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the benefit of using numeric values for enum members?',\n        name: 'q10',\n        points: 1,\n        order: 10,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'Numeric values allow for better type checking and inference in TypeScript.',\n            is_correct: true\n          },\n          {\n            label: 'Numeric values make enums harder to use and understand.',\n            is_correct: false\n          },\n          {\n            label: 'Numeric values are not recommended for enum members.',\n            is_correct: false\n          },\n          {\n            label: 'Numeric values are required for all enum members in TypeScript.',\n            is_correct: false\n          }\n        ]\n      }\n    ]\n  }\n};\n\nexport default template;\n"],"names":["template","QuestionTypes"],"mappings":"wXAIA,MAAAA,EAAA,CAAA,MAAA,wBACA,YAAA,2CACA,cAAA,CACA,UAAA,CACA,CACA,MAAA,iCACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAC,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,qDACA,WAAA,EACA,EACA,CACA,MAAA,iEACA,WAAA,EACA,EACA,CACA,MAAA,oCACA,WAAA,EACA,EACA,CACA,MAAA,gCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,yDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,OACA,WAAA,EACA,EACA,CACA,MAAA,QACA,WAAA,EACA,EACA,CACA,MAAA,YACA,WAAA,EACA,EACA,CACA,MAAA,OACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,iFACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,IACA,WAAA,EACA,EACA,CACA,MAAA,IACA,WAAA,EACA,EACA,CACA,MAAA,YACA,WAAA,EACA,EACA,CACA,MAAA,OACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,gDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,uDACA,WAAA,EACA,EACA,CACA,MAAA,6DACA,WAAA,EACA,EACA,CACA,MAAA,yDACA,WAAA,EACA,EACA,CACA,MAAA,kEACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,0DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,qDACA,WAAA,EACA,EACA,CACA,MAAA,iEACA,WAAA,EACA,EACA,CACA,MAAA,qDACA,WAAA,EACA,EACA,CACA,MAAA,0DACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,oDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,mCACA,WAAA,EACA,EACA,CACA,MAAA,kEACA,WAAA,EACA,EACA,CACA,MAAA,qCACA,WAAA,EACA,EACA,CACA,MAAA,sCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,uEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,0DACA,WAAA,EACA,EACA,CACA,MAAA,mEACA,WAAA,EACA,EACA,CACA,MAAA,8DACA,WAAA,EACA,EACA,CACA,MAAA,oDACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,4DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,iEACA,WAAA,EACA,EACA,CACA,MAAA,gEACA,WAAA,EACA,EACA,CACA,MAAA,8CACA,WAAA,EACA,EACA,CACA,MAAA,8CACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,wFAEA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,iEACA,WAAA,EACA,EACA,CACA,MAAA,+DACA,WAAA,EACA,EACA,CACA,MAAA,iDACA,WAAA,EACA,EACA,CACA,MAAA,+DACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,gEACA,KAAA,MACA,OAAA,EACA,MAAA,GACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,6EACA,WAAA,EACA,EACA,CACA,MAAA,0DACA,WAAA,EACA,EACA,CACA,MAAA,uDACA,WAAA,EACA,EACA,CACA,MAAA,kEACA,WAAA,EACA,CACA,CACA,CACA,CACA,CAEA"}