import{Q as e}from"./15.329399bd.js";import"./index.a2391391.js";(function(){try{var t=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},o=new Error().stack;o&&(t._sentryDebugIds=t._sentryDebugIds||{},t._sentryDebugIds[o]="f765a988-0c70-431e-8ada-8eca77198a63",t._sentryDebugIdIdentifier="sentry-dbid-f765a988-0c70-431e-8ada-8eca77198a63")}catch{}})();const l={title:"Node.js File Upload Quiz",description:"Test your knowledge of uploading files in Node.js.",questionnaire:{questions:[{title:"What is the purpose of file uploading in Node.js applications?",name:"question1",points:2,order:0,question_type:e[0],options:[{label:"To download files from the internet.",is_correct:!1},{label:"To allow users to upload files to the server.",is_correct:!0},{label:"To generate random files on the server.",is_correct:!1}]},{title:"Which module in Node.js is commonly used for handling file uploads?",name:"question2",points:1,order:1,question_type:e[0],options:[{label:"fs",is_correct:!1},{label:"http",is_correct:!1},{label:"express",is_correct:!0}]},{title:'What is the purpose of the "multer" middleware in Express.js?',name:"question3",points:1,order:2,question_type:e[1],options:[{label:"To handle file uploads in a convenient way.",is_correct:!0},{label:"To serve static files from a directory.",is_correct:!1},{label:"To create and manipulate files on the server.",is_correct:!1}]},{title:"Explain the difference between synchronous and asynchronous file uploads.",name:"question4",points:2,order:3,question_type:e[2],options:[]},{title:"How can you restrict the types of files that users can upload in an Express.js application?",name:"question5",points:2,order:4,question_type:e[0],options:[{label:'By using the "fileType" option in Multer.',is_correct:!0},{label:"By disabling file uploads altogether.",is_correct:!1},{label:"By configuring the Express.js routes.",is_correct:!1}]},{title:'What is the purpose of the "single" method in Multer?',name:"question6",points:1,order:5,question_type:e[0],options:[{label:"To handle multiple file uploads at once.",is_correct:!1},{label:"To handle a single file upload.",is_correct:!0},{label:"To handle text input fields.",is_correct:!1}]},{title:"How do you access the uploaded file in your Express.js route handler?",name:"question7",points:1,order:6,question_type:e[1],options:[{label:'By using the "req.files" object provided by Multer.',is_correct:!0},{label:'By using the "req.body" object.',is_correct:!1},{label:"By sending a separate HTTP request to retrieve it.",is_correct:!1}]},{title:'What is the purpose of the "destination" option in Multer?',name:"question8",points:1,order:7,question_type:e[1],options:[{label:"To specify the folder where uploaded files will be saved.",is_correct:!0},{label:"To limit the maximum file size of uploads.",is_correct:!1},{label:"To define custom validation rules for uploaded files.",is_correct:!1}]},{title:"How can you handle errors during file uploads in an Express.js route?",name:"question9",points:2,order:8,question_type:e[0],options:[{label:"By using try-catch blocks.",is_correct:!1},{label:"By passing an error-handling middleware to the route.",is_correct:!0},{label:"By ignoring errors and continuing the upload process.",is_correct:!1}]},{title:'What is the purpose of the "file.fieldname" property in the uploaded file object?',name:"question10",points:2,order:9,question_type:e[0],options:[{label:"To identify the original field name of the file input.",is_correct:!0},{label:"To store the binary content of the uploaded file.",is_correct:!1},{label:"To specify the destination folder for file storage.",is_correct:!1}]}]}};export{l as default};
//# sourceMappingURL=007_node_uploadFiles.868dc691.js.map
