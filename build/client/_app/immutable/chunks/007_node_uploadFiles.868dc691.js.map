{"version":3,"file":"007_node_uploadFiles.868dc691.js","sources":["../../../../../../src/lib/mocks/node/007_node_uploadFiles.ts"],"sourcesContent":["import { QuestionTypes } from '../utils';\n\nimport type { ExerciseTemplate } from '$lib/utils/types';\n\nconst template: ExerciseTemplate = {\n  title: 'Node.js File Upload Quiz',\n  description: 'Test your knowledge of uploading files in Node.js.',\n  questionnaire: {\n    questions: [\n      {\n        title: 'What is the purpose of file uploading in Node.js applications?',\n        name: 'question1',\n        points: 2,\n        order: 0,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'To download files from the internet.',\n            is_correct: false\n          },\n          {\n            label: 'To allow users to upload files to the server.',\n            is_correct: true\n          },\n          {\n            label: 'To generate random files on the server.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'Which module in Node.js is commonly used for handling file uploads?',\n        name: 'question2',\n        points: 1,\n        order: 1,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'fs',\n            is_correct: false\n          },\n          {\n            label: 'http',\n            is_correct: false\n          },\n          {\n            label: 'express',\n            is_correct: true\n          }\n        ]\n      },\n      {\n        title: 'What is the purpose of the \"multer\" middleware in Express.js?',\n        name: 'question3',\n        points: 1,\n        order: 2,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          {\n            label: 'To handle file uploads in a convenient way.',\n            is_correct: true\n          },\n          {\n            label: 'To serve static files from a directory.',\n            is_correct: false\n          },\n          {\n            label: 'To create and manipulate files on the server.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'Explain the difference between synchronous and asynchronous file uploads.',\n        name: 'question4',\n        points: 2,\n        order: 3,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title:\n          'How can you restrict the types of files that users can upload in an Express.js application?',\n        name: 'question5',\n        points: 2,\n        order: 4,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'By using the \"fileType\" option in Multer.',\n            is_correct: true\n          },\n          {\n            label: 'By disabling file uploads altogether.',\n            is_correct: false\n          },\n          {\n            label: 'By configuring the Express.js routes.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the purpose of the \"single\" method in Multer?',\n        name: 'question6',\n        points: 1,\n        order: 5,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'To handle multiple file uploads at once.',\n            is_correct: false\n          },\n          {\n            label: 'To handle a single file upload.',\n            is_correct: true\n          },\n          {\n            label: 'To handle text input fields.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'How do you access the uploaded file in your Express.js route handler?',\n        name: 'question7',\n        points: 1,\n        order: 6,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          {\n            label: 'By using the \"req.files\" object provided by Multer.',\n            is_correct: true\n          },\n          {\n            label: 'By using the \"req.body\" object.',\n            is_correct: false\n          },\n          {\n            label: 'By sending a separate HTTP request to retrieve it.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the purpose of the \"destination\" option in Multer?',\n        name: 'question8',\n        points: 1,\n        order: 7,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          {\n            label: 'To specify the folder where uploaded files will be saved.',\n            is_correct: true\n          },\n          {\n            label: 'To limit the maximum file size of uploads.',\n            is_correct: false\n          },\n          {\n            label: 'To define custom validation rules for uploaded files.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'How can you handle errors during file uploads in an Express.js route?',\n        name: 'question9',\n        points: 2,\n        order: 8,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'By using try-catch blocks.',\n            is_correct: false\n          },\n          {\n            label: 'By passing an error-handling middleware to the route.',\n            is_correct: true\n          },\n          {\n            label: 'By ignoring errors and continuing the upload process.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the purpose of the \"file.fieldname\" property in the uploaded file object?',\n        name: 'question10',\n        points: 2,\n        order: 9,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'To identify the original field name of the file input.',\n            is_correct: true\n          },\n          {\n            label: 'To store the binary content of the uploaded file.',\n            is_correct: false\n          },\n          {\n            label: 'To specify the destination folder for file storage.',\n            is_correct: false\n          }\n        ]\n      }\n    ]\n  }\n};\n\nexport default template;\n"],"names":["template","QuestionTypes"],"mappings":"wXAIA,MAAAA,EAAA,CAAA,MAAA,2BACA,YAAA,qDACA,cAAA,CACA,UAAA,CACA,CACA,MAAA,iEACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAC,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,uCACA,WAAA,EACA,EACA,CACA,MAAA,gDACA,WAAA,EACA,EACA,CACA,MAAA,0CACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,sEACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,KACA,WAAA,EACA,EACA,CACA,MAAA,OACA,WAAA,EACA,EACA,CACA,MAAA,UACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,gEACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,8CACA,WAAA,EACA,EACA,CACA,MAAA,0CACA,WAAA,EACA,EACA,CACA,MAAA,gDACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,4EACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,8FAEA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,4CACA,WAAA,EACA,EACA,CACA,MAAA,wCACA,WAAA,EACA,EACA,CACA,MAAA,wCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,wDACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,2CACA,WAAA,EACA,EACA,CACA,MAAA,kCACA,WAAA,EACA,EACA,CACA,MAAA,+BACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,wEACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,sDACA,WAAA,EACA,EACA,CACA,MAAA,kCACA,WAAA,EACA,EACA,CACA,MAAA,qDACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,6DACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,4DACA,WAAA,EACA,EACA,CACA,MAAA,6CACA,WAAA,EACA,EACA,CACA,MAAA,wDACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,wEACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,6BACA,WAAA,EACA,EACA,CACA,MAAA,wDACA,WAAA,EACA,EACA,CACA,MAAA,wDACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,oFACA,KAAA,aACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,yDACA,WAAA,EACA,EACA,CACA,MAAA,oDACA,WAAA,EACA,EACA,CACA,MAAA,sDACA,WAAA,EACA,CACA,CACA,CACA,CACA,CAEA"}