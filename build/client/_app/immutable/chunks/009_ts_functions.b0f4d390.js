import{Q as e}from"./15.329399bd.js";import"./index.a2391391.js";(function(){try{var t=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},n=new Error().stack;n&&(t._sentryDebugIds=t._sentryDebugIds||{},t._sentryDebugIds[n]="d9531ddb-f227-4e76-a6e1-fc9437ee3f1d",t._sentryDebugIdIdentifier="sentry-dbid-d9531ddb-f227-4e76-a6e1-fc9437ee3f1d")}catch{}})();const a={title:"TypeScript Functions Quiz",description:"Test your knowledge of TypeScript functions.",questionnaire:{questions:[{title:"What is a function in TypeScript?",name:"q1",points:1,order:1,question_type:e[0],options:[{label:"A function is a variable in TypeScript.",is_correct:!1},{label:"A function is a block of code that can be executed and reused.",is_correct:!0},{label:"A function is a type of loop in TypeScript.",is_correct:!1},{label:"A function is a reserved keyword in TypeScript.",is_correct:!1}]},{title:"What is the syntax for defining a function in TypeScript?",name:"q2",points:1,order:2,question_type:e[1],options:[{label:"function functionName() { }",is_correct:!0},{label:"func functionName() { }",is_correct:!1},{label:"const functionName = () => { }",is_correct:!0},{label:"def functionName() { }",is_correct:!1}]},{title:"What is a parameter in a function?",name:"q3",points:1,order:3,question_type:e[0],options:[{label:"A parameter is a variable declared inside a function.",is_correct:!0},{label:"A parameter is a function that takes another function as an argument.",is_correct:!1},{label:"A parameter is the return value of a function.",is_correct:!1},{label:"A parameter is a built-in keyword in TypeScript.",is_correct:!1}]},{title:"What is the purpose of the `return` statement in a function?",name:"q4",points:1,order:4,question_type:e[0],options:[{label:"The `return` statement defines a new function.",is_correct:!1},{label:"The `return` statement is used to exit a loop.",is_correct:!1},{label:"The `return` statement specifies the value that the function will return.",is_correct:!0},{label:"The `return` statement is not used in functions.",is_correct:!1}]},{title:"What is a TypeScript arrow function?",name:"q5",points:1,order:5,question_type:e[0],options:[{label:"An arrow function is a function with a circular shape.",is_correct:!1},{label:"An arrow function is a concise way to write function expressions in TypeScript.",is_correct:!0},{label:"An arrow function is a type of function that uses arrows instead of parentheses.",is_correct:!1},{label:"An arrow function is a deprecated feature in TypeScript.",is_correct:!1}]},{title:"What is the purpose of the `this` keyword in a function?",name:"q6",points:1,order:6,question_type:e[0],options:[{label:"The `this` keyword refers to the function itself.",is_correct:!1},{label:"The `this` keyword refers to the global object.",is_correct:!1},{label:"The `this` keyword refers to the current instance of an object.",is_correct:!0},{label:"The `this` keyword is not used in functions.",is_correct:!1}]},{title:"What is a TypeScript generator function?",name:"q7",points:1,order:7,question_type:e[0],options:[{label:"A generator function is a function that generates random values.",is_correct:!1},{label:"A generator function is a special type of function that can pause and resume its execution.",is_correct:!0},{label:"A generator function is a function that generates HTML code.",is_correct:!1},{label:"A generator function is not a valid TypeScript feature.",is_correct:!1}]},{title:"What is the purpose of the `yield` keyword in a generator function?",name:"q8",points:1,order:8,question_type:e[0],options:[{label:"The `yield` keyword is used to yield control back to the caller of the generator function.",is_correct:!0},{label:"The `yield` keyword is used to terminate the generator function.",is_correct:!1},{label:"The `yield` keyword has no specific purpose in generator functions.",is_correct:!1},{label:"The `yield` keyword is used to specify the return value of the generator function.",is_correct:!1}]},{title:"Can a TypeScript function have multiple return statements?",name:"q9",points:1,order:9,question_type:e[1],options:[{label:"Yes, a function can have multiple return statements.",is_correct:!0},{label:"No, a function can only have one return statement.",is_correct:!1},{label:"It depends on the type of function.",is_correct:!1},{label:"Multiple return statements are only allowed in arrow functions.",is_correct:!1}]},{title:"What is function overloading in TypeScript?",name:"q10",points:1,order:10,question_type:e[2],options:[]}]}};export{a as default};
//# sourceMappingURL=009_ts_functions.b0f4d390.js.map
