{"version":3,"file":"011_git_branchPush.753e303f.js","sources":["../../../../../../src/lib/mocks/git/011_git_branchPush.ts"],"sourcesContent":["import { QuestionTypes } from '../utils';\n\nimport type { ExerciseTemplate } from '$lib/utils/types';\n\nconst template: ExerciseTemplate = {\n  title: 'Git Branch Push to Remote Quiz',\n  description: 'Test your knowledge of Git branch pushing to remote repositories.',\n  questionnaire: {\n    questions: [\n      {\n        title: 'How do you push a new branch to a remote repository in Git?',\n        name: 'q1',\n        points: 2,\n        order: 1,\n        question_type: QuestionTypes[0],\n        options: [\n          {\n            label: 'git push origin new-branch',\n            is_correct: true\n          },\n          {\n            label: 'git branch -b new-branch',\n            is_correct: false\n          },\n          {\n            label: 'git pull origin new-branch',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What does \"git push --force\" do?',\n        name: 'q2',\n        points: 2,\n        order: 2,\n        question_type: QuestionTypes[1],\n        options: [\n          {\n            label: 'Force pushes all local branches',\n            is_correct: false\n          },\n          {\n            label: 'Force pushes the current branch to remote',\n            is_correct: true\n          },\n          {\n            label: 'Deletes the remote repository',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the purpose of \"origin\" in \"git push origin\"?',\n        name: 'q3',\n        points: 2,\n        order: 3,\n        question_type: QuestionTypes[2],\n        options: [\n          {\n            label: 'It specifies the local branch',\n            is_correct: false\n          },\n          {\n            label: 'It refers to the remote repository',\n            is_correct: true\n          },\n          {\n            label: 'It is not required in \"git push\"',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'How do you check the status of your Git repository?',\n        name: 'q1',\n        points: 1,\n        order: 0,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'git status',\n            is_correct: true\n          },\n          {\n            label: 'git log',\n            is_correct: false\n          },\n          {\n            label: 'git commit',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What command is used to create a new branch in Git?',\n        name: 'q2',\n        points: 1,\n        order: 1,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'git branch <branch_name>',\n            is_correct: true\n          },\n          {\n            label: 'git checkout -b <branch_name>',\n            is_correct: false\n          },\n          {\n            label: 'git create <branch_name>',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'How do you stage changes for a commit in Git?',\n        name: 'q3',\n        points: 1,\n        order: 2,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'git add <file>',\n            is_correct: true\n          },\n          {\n            label: 'git commit -m \"Message\"',\n            is_correct: false\n          },\n          {\n            label: 'git push',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'Which command is used to remove a file from the staging area in Git?',\n        name: 'q4',\n        points: 1,\n        order: 3,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          {\n            label: 'git reset',\n            is_correct: true\n          },\n          {\n            label: 'git rm',\n            is_correct: true\n          },\n          {\n            label: 'git commit',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'How do you create a Git tag for a specific commit?',\n        name: 'q6',\n        points: 1,\n        order: 5,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'git tag -a <tag_name> <commit_sha>',\n            is_correct: true\n          },\n          {\n            label: 'git branch -t <tag_name> <commit_sha>',\n            is_correct: false\n          },\n          {\n            label: 'git commit -m \"Tag: <tag_name>\"',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'How do you discard changes in your working directory in Git?',\n        name: 'q8',\n        points: 1,\n        order: 7,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          {\n            label: 'git reset --hard',\n            is_correct: true\n          },\n          {\n            label: 'git checkout -- <file>',\n            is_correct: true\n          },\n          {\n            label: 'git commit -m \"Discard changes\"',\n            is_correct: false\n          }\n        ]\n      },\n\n      {\n        title: 'Explain the difference between \"git merge\" and \"git rebase\".',\n        name: 'q10',\n        points: 2,\n        order: 9,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      }\n    ]\n  }\n};\n\nexport default template;\n"],"names":["template","QuestionTypes"],"mappings":"wXAIA,MAAAA,EAAA,CAAA,MAAA,iCACA,YAAA,oEACA,cAAA,CACA,UAAA,CACA,CACA,MAAA,8DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAC,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,6BACA,WAAA,EACA,EACA,CACA,MAAA,2BACA,WAAA,EACA,EACA,CACA,MAAA,6BACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,mCACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,kCACA,WAAA,EACA,EACA,CACA,MAAA,4CACA,WAAA,EACA,EACA,CACA,MAAA,gCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,wDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,gCACA,WAAA,EACA,EACA,CACA,MAAA,qCACA,WAAA,EACA,EACA,CACA,MAAA,mCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,sDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,aACA,WAAA,EACA,EACA,CACA,MAAA,UACA,WAAA,EACA,EACA,CACA,MAAA,aACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,sDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,2BACA,WAAA,EACA,EACA,CACA,MAAA,gCACA,WAAA,EACA,EACA,CACA,MAAA,2BACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,gDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,iBACA,WAAA,EACA,EACA,CACA,MAAA,0BACA,WAAA,EACA,EACA,CACA,MAAA,WACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,uEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,YACA,WAAA,EACA,EACA,CACA,MAAA,SACA,WAAA,EACA,EACA,CACA,MAAA,aACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,qDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,qCACA,WAAA,EACA,EACA,CACA,MAAA,wCACA,WAAA,EACA,EACA,CACA,MAAA,kCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,+DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,mBACA,WAAA,EACA,EACA,CACA,MAAA,yBACA,WAAA,EACA,EACA,CACA,MAAA,kCACA,WAAA,EACA,CACA,CACA,EACA,CAEA,MAAA,+DACA,KAAA,MACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,CACA,CACA,CAEA"}