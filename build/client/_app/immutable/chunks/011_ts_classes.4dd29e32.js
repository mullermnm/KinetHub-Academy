import{Q as e}from"./15.329399bd.js";import"./index.a2391391.js";(function(){try{var t=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},s=new Error().stack;s&&(t._sentryDebugIds=t._sentryDebugIds||{},t._sentryDebugIds[s]="a1e8734c-2384-4695-9232-9e0251282935",t._sentryDebugIdIdentifier="sentry-dbid-a1e8734c-2384-4695-9232-9e0251282935")}catch{}})();const c={title:"TypeScript Classes Quiz",description:"Test your knowledge of TypeScript classes!",questionnaire:{questions:[{title:"What is a class in TypeScript?",name:"q1",points:2,order:1,question_type:e[0],options:[{label:"A data structure",is_correct:!1},{label:"A blueprint for creating objects",is_correct:!0},{label:"A function",is_correct:!1}]},{title:"How do you define a class in TypeScript?",name:"q2",points:2,order:2,question_type:e[0],options:[{label:"class MyClass {}",is_correct:!0},{label:"interface MyClass {}",is_correct:!1},{label:"type MyClass = {};",is_correct:!1}]},{title:"What is the keyword used to create an instance of a class in TypeScript?",name:"q3",points:2,order:3,question_type:e[0],options:[{label:"new",is_correct:!0},{label:"instance",is_correct:!1},{label:"create",is_correct:!1}]},{title:"How do you define a constructor in a TypeScript class?",name:"q4",points:2,order:4,question_type:e[0],options:[{label:"constructor()",is_correct:!0},{label:"init()",is_correct:!1},{label:"create()",is_correct:!1}]},{title:"In TypeScript, can a class inherit from multiple classes?",name:"q5",points:2,order:5,question_type:e[0],options:[{label:"Yes",is_correct:!0},{label:"No",is_correct:!1}]},{title:'What is the purpose of the "super" keyword in a subclass constructor?',name:"q6",points:2,order:6,question_type:e[1],options:[{label:"To call the constructor of the superclass",is_correct:!0},{label:"To create a new instance of the superclass",is_correct:!1},{label:"To access static methods of the superclass",is_correct:!1}]},{title:"How do you mark a class property as private in TypeScript?",name:"q7",points:2,order:7,question_type:e[0],options:[{label:"private property;",is_correct:!1},{label:"public property;",is_correct:!1},{label:"private property: type;",is_correct:!0}]},{title:'What is the purpose of the "protected" keyword for class members?',name:"q8",points:2,order:8,question_type:e[1],options:[{label:"To make members accessible only within the class",is_correct:!1},{label:"To make members accessible within subclasses",is_correct:!0},{label:"To make members accessible globally",is_correct:!1}]},{title:"What is the difference between an abstract class and a regular class in TypeScript?",name:"q9",points:2,order:9,question_type:e[0],options:[{label:"Abstract classes cannot have constructors",is_correct:!1},{label:"Abstract classes cannot be instantiated directly",is_correct:!0},{label:"Regular classes cannot have methods",is_correct:!1}]},{title:"How do you define an abstract method in a TypeScript abstract class?",name:"q10",points:2,order:10,question_type:e[0],options:[{label:"abstract method();",is_correct:!0},{label:"virtual method();",is_correct:!1},{label:"function method();",is_correct:!1}]}]}};export{c as default};
//# sourceMappingURL=011_ts_classes.4dd29e32.js.map
