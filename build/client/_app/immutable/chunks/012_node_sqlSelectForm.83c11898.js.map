{"version":3,"file":"012_node_sqlSelectForm.83c11898.js","sources":["../../../../../../src/lib/mocks/node/012_node_sqlSelectForm.ts"],"sourcesContent":["import { QuestionTypes } from '../utils';\n\nimport type { ExerciseTemplate } from '$lib/utils/types';\n\nconst template: ExerciseTemplate = {\n  title: 'Node.js MySQL Data Selection Quiz',\n  description: 'Test your knowledge of selecting data from MySQL databases in Node.js.',\n  questionnaire: {\n    questions: [\n      {\n        title:\n          'What is the purpose of selecting data from a MySQL database in a Node.js application?',\n        name: 'question1',\n        points: 2,\n        order: 0,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'To update existing records in the database.',\n            is_correct: false\n          },\n          {\n            label: 'To retrieve and display data from the database.',\n            is_correct: true\n          },\n          {\n            label: 'To create new tables in the database.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'Which SQL statement is used to select data from a MySQL table?',\n        name: 'question2',\n        points: 1,\n        order: 1,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'INSERT',\n            is_correct: false\n          },\n          {\n            label: 'SELECT',\n            is_correct: true\n          },\n          {\n            label: 'DELETE',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the purpose of the \"WHERE\" clause in a SQL SELECT statement?',\n        name: 'question3',\n        points: 1,\n        order: 2,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          {\n            label: 'To specify which columns to select from the table.',\n            is_correct: false\n          },\n          {\n            label: 'To filter rows based on a specified condition.',\n            is_correct: true\n          },\n          {\n            label: 'To order the selected rows in ascending order.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'Explain the purpose of the \"LIMIT\" clause in a SQL SELECT statement.',\n        name: 'question4',\n        points: 2,\n        order: 3,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'How can you perform a join operation between two MySQL tables in Node.js?',\n        name: 'question5',\n        points: 2,\n        order: 4,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'By using the \"JOIN\" clause in the SQL SELECT statement.',\n            is_correct: true\n          },\n          {\n            label: 'By creating a new table that combines the data from both tables.',\n            is_correct: false\n          },\n          {\n            label: 'By using the \"DELETE\" statement to merge data.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the purpose of the \"GROUP BY\" clause in a SQL SELECT statement?',\n        name: 'question6',\n        points: 1,\n        order: 5,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'To select all columns in the table.',\n            is_correct: false\n          },\n          {\n            label: 'To group rows with the same values in specified columns.',\n            is_correct: true\n          },\n          {\n            label: 'To order rows in descending order.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title:\n          'How do you handle asynchronous data retrieval when selecting data from a MySQL database in Node.js?',\n        name: 'question7',\n        points: 1,\n        order: 6,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          {\n            label: 'By using synchronous functions.',\n            is_correct: false\n          },\n          {\n            label: 'By using callbacks or promises.',\n            is_correct: true\n          },\n          {\n            label: 'By executing SQL statements in a loop.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the purpose of the \"ORDER BY\" clause in a SQL SELECT statement?',\n        name: 'question8',\n        points: 1,\n        order: 7,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          {\n            label: 'To filter rows based on a specified condition.',\n            is_correct: false\n          },\n          {\n            label: 'To order the selected rows based on one or more columns.',\n            is_correct: true\n          },\n          {\n            label: 'To limit the number of rows returned by the query.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'How can you select distinct values from a column in a SQL SELECT statement?',\n        name: 'question9',\n        points: 2,\n        order: 8,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'By using the \"DISTINCT\" keyword.',\n            is_correct: true\n          },\n          {\n            label: 'By using the \"WHERE\" clause.',\n            is_correct: false\n          },\n          {\n            label: 'By using the \"LIMIT\" clause.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the purpose of the \"HAVING\" clause in a SQL SELECT statement?',\n        name: 'question10',\n        points: 2,\n        order: 9,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'To specify the columns to select from the table.',\n            is_correct: false\n          },\n          {\n            label: 'To filter groups of rows based on a condition.',\n            is_correct: true\n          },\n          {\n            label: 'To order rows in ascending order.',\n            is_correct: false\n          }\n        ]\n      }\n    ]\n  }\n};\n\nexport default template;\n"],"names":["template","QuestionTypes"],"mappings":"wXAIA,MAAAA,EAAA,CAAA,MAAA,oCACA,YAAA,yEACA,cAAA,CACA,UAAA,CACA,CACA,MAAA,wFAEA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAC,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,8CACA,WAAA,EACA,EACA,CACA,MAAA,kDACA,WAAA,EACA,EACA,CACA,MAAA,wCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,iEACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,SACA,WAAA,EACA,EACA,CACA,MAAA,SACA,WAAA,EACA,EACA,CACA,MAAA,SACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,uEACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,qDACA,WAAA,EACA,EACA,CACA,MAAA,iDACA,WAAA,EACA,EACA,CACA,MAAA,iDACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,uEACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,4EACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,0DACA,WAAA,EACA,EACA,CACA,MAAA,mEACA,WAAA,EACA,EACA,CACA,MAAA,iDACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,0EACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,sCACA,WAAA,EACA,EACA,CACA,MAAA,2DACA,WAAA,EACA,EACA,CACA,MAAA,qCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,sGAEA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,kCACA,WAAA,EACA,EACA,CACA,MAAA,kCACA,WAAA,EACA,EACA,CACA,MAAA,yCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,0EACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,iDACA,WAAA,EACA,EACA,CACA,MAAA,2DACA,WAAA,EACA,EACA,CACA,MAAA,qDACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,8EACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,mCACA,WAAA,EACA,EACA,CACA,MAAA,+BACA,WAAA,EACA,EACA,CACA,MAAA,+BACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,wEACA,KAAA,aACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,mDACA,WAAA,EACA,EACA,CACA,MAAA,iDACA,WAAA,EACA,EACA,CACA,MAAA,oCACA,WAAA,EACA,CACA,CACA,CACA,CACA,CAEA"}