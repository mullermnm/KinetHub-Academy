{"version":3,"file":"012_react_props.17b0b1f0.js","sources":["../../../../../../src/lib/mocks/react/012_react_props.ts"],"sourcesContent":["import { QuestionTypes } from '../utils';\n\nimport type { ExerciseTemplate } from '$lib/utils/types';\n\nconst template: ExerciseTemplate = {\n  title: 'React Props Quiz',\n  description: 'Test your knowledge of React props.',\n  questionnaire: {\n    questions: [\n      {\n        title: 'What are props in React?',\n        name: 'q1',\n        points: 1,\n        order: 0,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'A method to define component styles', is_correct: false },\n          {\n            label: 'Data that is passed from a parent component to a child component',\n            is_correct: true\n          },\n          { label: 'A way to define component state', is_correct: false }\n        ]\n      },\n      {\n        title: 'How do you pass props to a child component in React?',\n        name: 'q2',\n        points: 1,\n        order: 1,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'Using the `state` property', is_correct: false },\n          { label: \"Using the `props` attribute in the child component's JSX\", is_correct: true },\n          { label: \"By directly modifying the child component's state\", is_correct: false }\n        ]\n      },\n      {\n        title: 'Can props be modified within a child component in React?',\n        name: 'q3',\n        points: 1,\n        order: 2,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'Yes, props can be modified within a child component', is_correct: false },\n          { label: 'No, props are immutable within a child component', is_correct: true },\n          { label: 'Props can only be modified within a parent component', is_correct: false }\n        ]\n      },\n      {\n        title: 'Select all valid ways to define and use props in a React component.',\n        name: 'q4',\n        points: 1,\n        order: 3,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          { label: 'Define props using the `props` attribute', is_correct: false },\n          { label: 'Define props using a JavaScript object', is_correct: true },\n          { label: 'Access props within a component using `this.props`', is_correct: true },\n          { label: 'Access props directly as function parameters', is_correct: false }\n        ]\n      },\n      {\n        title: 'Write an example of passing and using props in a React component.',\n        name: 'q5',\n        points: 1,\n        order: 4,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'Explain the concept of \"prop drilling\" in React.',\n        name: 'q6',\n        points: 1,\n        order: 5,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'What is the significance of default props in React?',\n        name: 'q7',\n        points: 1,\n        order: 6,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'List some benefits of using props for component communication in React.',\n        name: 'q8',\n        points: 1,\n        order: 7,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'How can you handle missing props in a React component?',\n        name: 'q9',\n        points: 1,\n        order: 8,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'Can you pass non-primitive data types (e.g., objects, arrays) as props in React?',\n        name: 'q10',\n        points: 1,\n        order: 9,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'Yes, you can pass non-primitive data types as props', is_correct: true },\n          { label: 'No, only primitive data types can be passed as props', is_correct: false },\n          { label: 'Non-primitive data types can only be passed as state', is_correct: false }\n        ]\n      }\n    ]\n  }\n};\n\nexport default template;\n"],"names":["template","QuestionTypes"],"mappings":"wXAIA,MAAAA,EAAA,CAAA,MAAA,mBACA,YAAA,sCACA,cAAA,CACA,UAAA,CACA,CACA,MAAA,2BACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAC,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,sCAAA,WAAA,EAAA,EACA,CACA,MAAA,mEACA,WAAA,EACA,EACA,CAAA,MAAA,kCAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,uDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,6BAAA,WAAA,EAAA,EACA,CAAA,MAAA,2DAAA,WAAA,EAAA,EACA,CAAA,MAAA,oDAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,2DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,sDAAA,WAAA,EAAA,EACA,CAAA,MAAA,mDAAA,WAAA,EAAA,EACA,CAAA,MAAA,uDAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,sEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,2CAAA,WAAA,EAAA,EACA,CAAA,MAAA,yCAAA,WAAA,EAAA,EACA,CAAA,MAAA,qDAAA,WAAA,EAAA,EACA,CAAA,MAAA,+CAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,oEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,mDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,sDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,0EACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,yDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,mFACA,KAAA,MACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,sDAAA,WAAA,EAAA,EACA,CAAA,MAAA,uDAAA,WAAA,EAAA,EACA,CAAA,MAAA,uDAAA,WAAA,EAAA,CACA,CACA,CACA,CACA,CAEA"}