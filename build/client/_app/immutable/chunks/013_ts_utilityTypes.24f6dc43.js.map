{"version":3,"file":"013_ts_utilityTypes.24f6dc43.js","sources":["../../../../../../src/lib/mocks/typescript/013_ts_utilityTypes.ts"],"sourcesContent":["import { QuestionTypes } from '../utils';\n\nimport type { ExerciseTemplate } from '$lib/utils/types';\n\nconst template: ExerciseTemplate = {\n  title: 'TypeScript Utility Types Quiz',\n  description: 'Test your knowledge of TypeScript utility types!',\n  questionnaire: {\n    questions: [\n      {\n        title: 'What are TypeScript utility types?',\n        name: 'q1',\n        points: 2,\n        order: 1,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'Built-in TypeScript types', is_correct: true },\n          { label: 'JavaScript utility functions', is_correct: false },\n          { label: 'Custom types defined by developers', is_correct: false }\n        ]\n      },\n      {\n        title:\n          'Which TypeScript utility type is used to create a new type that is a subset of an existing type?',\n        name: 'q2',\n        points: 2,\n        order: 2,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'Partial', is_correct: false },\n          { label: 'Pick', is_correct: false },\n          { label: 'Omit', is_correct: false },\n          { label: 'Subset', is_correct: true }\n        ]\n      },\n      {\n        title: 'What does the TypeScript utility type \"Partial\" do?',\n        name: 'q3',\n        points: 2,\n        order: 3,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'Makes a type required', is_correct: false },\n          { label: 'Makes a type optional', is_correct: true },\n          { label: 'Creates a union type', is_correct: false }\n        ]\n      },\n      {\n        title:\n          'Which TypeScript utility type allows you to pick specific properties from an object type?',\n        name: 'q4',\n        points: 2,\n        order: 4,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'Partial', is_correct: false },\n          { label: 'Pick', is_correct: true },\n          { label: 'Omit', is_correct: false }\n        ]\n      },\n      {\n        title: 'How do you use the TypeScript utility type \"Record\" to define a dictionary type?',\n        name: 'q5',\n        points: 2,\n        order: 5,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'Record<string, T>', is_correct: true },\n          { label: 'Record<T, string>', is_correct: false },\n          { label: 'Record<key, value>', is_correct: false }\n        ]\n      },\n      {\n        title: 'Which TypeScript utility type removes specific properties from an object type?',\n        name: 'q6',\n        points: 2,\n        order: 6,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'Partial', is_correct: false },\n          { label: 'Pick', is_correct: false },\n          { label: 'Omit', is_correct: true }\n        ]\n      },\n      {\n        title: 'What is the purpose of the TypeScript utility type \"Required\"?',\n        name: 'q7',\n        points: 2,\n        order: 7,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          { label: 'Makes all properties in a type required', is_correct: true },\n          { label: 'Makes all properties in a type optional', is_correct: false },\n          { label: 'Creates a new type with some required properties', is_correct: false }\n        ]\n      },\n      {\n        title:\n          'Which TypeScript utility type is used to create a new type that is the opposite of the specified type?',\n        name: 'q8',\n        points: 2,\n        order: 8,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'Partial', is_correct: false },\n          { label: 'Required', is_correct: false },\n          { label: 'Exclude', is_correct: true },\n          { label: 'Extract', is_correct: false }\n        ]\n      },\n      {\n        title: 'What is the purpose of the TypeScript utility type \"Exclude\"?',\n        name: 'q9',\n        points: 2,\n        order: 9,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'Includes specific properties in a type', is_correct: false },\n          { label: 'Excludes specific properties from a type', is_correct: true },\n          { label: 'Creates a union type', is_correct: false }\n        ]\n      },\n      {\n        title:\n          'Which TypeScript utility type is used to create a new type that is the intersection of the specified types?',\n        name: 'q10',\n        points: 2,\n        order: 10,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'Partial', is_correct: false },\n          { label: 'Required', is_correct: false },\n          { label: 'Exclude', is_correct: false },\n          { label: 'Extract', is_correct: true }\n        ]\n      }\n    ]\n  }\n};\n\nexport default template;\n"],"names":["template","QuestionTypes"],"mappings":"wXAIA,MAAAA,EAAA,CAAA,MAAA,gCACA,YAAA,mDACA,cAAA,CACA,UAAA,CACA,CACA,MAAA,qCACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAC,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,4BAAA,WAAA,EAAA,EACA,CAAA,MAAA,+BAAA,WAAA,EAAA,EACA,CAAA,MAAA,qCAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,mGAEA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,UAAA,WAAA,EAAA,EACA,CAAA,MAAA,OAAA,WAAA,EAAA,EACA,CAAA,MAAA,OAAA,WAAA,EAAA,EACA,CAAA,MAAA,SAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,sDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,wBAAA,WAAA,EAAA,EACA,CAAA,MAAA,wBAAA,WAAA,EAAA,EACA,CAAA,MAAA,uBAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,4FAEA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,UAAA,WAAA,EAAA,EACA,CAAA,MAAA,OAAA,WAAA,EAAA,EACA,CAAA,MAAA,OAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,mFACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,oBAAA,WAAA,EAAA,EACA,CAAA,MAAA,oBAAA,WAAA,EAAA,EACA,CAAA,MAAA,qBAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,iFACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,UAAA,WAAA,EAAA,EACA,CAAA,MAAA,OAAA,WAAA,EAAA,EACA,CAAA,MAAA,OAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,iEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,0CAAA,WAAA,EAAA,EACA,CAAA,MAAA,0CAAA,WAAA,EAAA,EACA,CAAA,MAAA,mDAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,yGAEA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,UAAA,WAAA,EAAA,EACA,CAAA,MAAA,WAAA,WAAA,EAAA,EACA,CAAA,MAAA,UAAA,WAAA,EAAA,EACA,CAAA,MAAA,UAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,gEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,yCAAA,WAAA,EAAA,EACA,CAAA,MAAA,2CAAA,WAAA,EAAA,EACA,CAAA,MAAA,uBAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,8GAEA,KAAA,MACA,OAAA,EACA,MAAA,GACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,UAAA,WAAA,EAAA,EACA,CAAA,MAAA,WAAA,WAAA,EAAA,EACA,CAAA,MAAA,UAAA,WAAA,EAAA,EACA,CAAA,MAAA,UAAA,WAAA,EAAA,CACA,CACA,CACA,CACA,CAEA"}