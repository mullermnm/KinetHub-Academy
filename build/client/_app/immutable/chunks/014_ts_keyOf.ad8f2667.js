import{Q as e}from"./15.329399bd.js";import"./index.a2391391.js";(function(){try{var t=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},o=new Error().stack;o&&(t._sentryDebugIds=t._sentryDebugIds||{},t._sentryDebugIds[o]="cf6e0b9d-e992-49fb-91ea-89f88e25077a",t._sentryDebugIdIdentifier="sentry-dbid-cf6e0b9d-e992-49fb-91ea-89f88e25077a")}catch{}})();const n={title:"TypeScript keyof Quiz",description:"Test your knowledge of TypeScript keyof!",questionnaire:{questions:[{title:'What does the "keyof" keyword do in TypeScript?',name:"q1",points:2,order:1,question_type:e[0],options:[{label:"Creates a new key in an object",is_correct:!1},{label:"Returns an array of keys from an object",is_correct:!1},{label:"Returns a union of keys from an object",is_correct:!0}]},{title:'How do you use the "keyof" keyword to access the keys of an object type?',name:"q2",points:2,order:2,question_type:e[0],options:[{label:"keyof object",is_correct:!0},{label:"object.keys",is_correct:!1},{label:"object.keys()",is_correct:!1}]},{title:'What is the type of a variable declared using the "keyof" keyword?',name:"q3",points:2,order:3,question_type:e[0],options:[{label:"string",is_correct:!0},{label:"number",is_correct:!1},{label:"boolean",is_correct:!1}]},{title:'In TypeScript, can you use "keyof" with object instances?',name:"q4",points:2,order:4,question_type:e[0],options:[{label:'Yes, "keyof" works with both object types and instances',is_correct:!1},{label:'No, "keyof" only works with object types',is_correct:!0}]},{title:'What is the purpose of using "keyof" with mapped types in TypeScript?',name:"q5",points:2,order:5,question_type:e[1],options:[{label:"To create new keys in an object",is_correct:!1},{label:"To create a union of keys from multiple objects",is_correct:!0},{label:"To filter out specific keys from an object",is_correct:!1}]},{title:'How do you use "keyof" with generic types in TypeScript?',name:"q6",points:2,order:6,question_type:e[0],options:[{label:"keyof T",is_correct:!0},{label:"keyof<T>",is_correct:!1},{label:"keyof(T)",is_correct:!1}]},{title:'Which of the following is a valid use case for "keyof" in TypeScript?',name:"q7",points:2,order:7,question_type:e[1],options:[{label:"Creating new object keys",is_correct:!1},{label:"Accessing the values of an object",is_correct:!1},{label:"Accessing object keys as string literals",is_correct:!0}]},{title:'What is the return type of the "keyof" keyword in TypeScript?',name:"q8",points:2,order:8,question_type:e[0],options:[{label:"string",is_correct:!0},{label:"number",is_correct:!1},{label:"boolean",is_correct:!1}]},{title:'In TypeScript, is "keyof" limited to object types, or can it also be used with other types?',name:"q9",points:2,order:9,question_type:e[0],options:[{label:"It can only be used with object types",is_correct:!1},{label:"It can be used with any type",is_correct:!0}]},{title:'What is the purpose of "keyof" in TypeScript when working with type constraints?',name:"q10",points:2,order:10,question_type:e[0],options:[{label:"To limit the type of keys that can be accessed",is_correct:!1},{label:"To specify which keys are required in an object",is_correct:!1},{label:"To ensure that a key exists in a given type",is_correct:!0}]}]}};export{n as default};
//# sourceMappingURL=014_ts_keyOf.ad8f2667.js.map
