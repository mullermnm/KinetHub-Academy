{"version":3,"file":"015_git_clone.c39d641d.js","sources":["../../../../../../src/lib/mocks/git/015_git_clone.ts"],"sourcesContent":["import { QuestionTypes } from '../utils';\n\nimport type { ExerciseTemplate } from '$lib/utils/types';\n\nconst template: ExerciseTemplate = {\n  title: 'Git Clone Quiz',\n  description: 'Test your knowledge of Git Clone with practical questions.',\n  questionnaire: {\n    questions: [\n      {\n        title: 'What is the purpose of the \"git clone\" command?',\n        name: 'q1',\n        points: 2,\n        order: 0,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'To create a copy of a remote repository on your local machine',\n            is_correct: true\n          },\n          {\n            label: 'To delete a Git repository',\n            is_correct: false\n          },\n          {\n            label: 'To merge branches',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'How do you clone a Git repository from a specific branch?',\n        name: 'q2',\n        points: 1,\n        order: 1,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'git clone -b <branch_name> <repository_url>',\n            is_correct: true\n          },\n          {\n            label: 'git branch -t <branch_name> <repository_url>',\n            is_correct: false\n          },\n          {\n            label: 'git pull origin <branch_name>',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title:\n          'What is the default name of the directory where \"git clone\" creates a local copy of the repository?',\n        name: 'q3',\n        points: 1,\n        order: 2,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'The same as the repository name',\n            is_correct: true\n          },\n          {\n            label: 'LocalGitRepo',\n            is_correct: false\n          },\n          {\n            label: 'CloneRepo',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'Explain the concept of a \"bare\" Git repository.',\n        name: 'q4',\n        points: 3,\n        order: 3,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'What is the purpose of the \"git clone --depth\" option?',\n        name: 'q5',\n        points: 2,\n        order: 4,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'To limit the clone to a specified number of commits deep',\n            is_correct: true\n          },\n          {\n            label: 'To create a shallow clone of a repository',\n            is_correct: false\n          },\n          {\n            label: 'To clone only the latest commit',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'How can you clone a Git repository without downloading the commit history?',\n        name: 'q6',\n        points: 1,\n        order: 5,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'Using the \"git clone --depth 1\" command',\n            is_correct: true\n          },\n          {\n            label: 'It is not possible to clone without history',\n            is_correct: false\n          },\n          {\n            label: 'Using the \"git clone --shallow\" command',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the purpose of the \"git clone --recurse-submodules\" option?',\n        name: 'q7',\n        points: 2,\n        order: 6,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'To clone and initialize submodules within the repository',\n            is_correct: true\n          },\n          {\n            label: 'To create a shallow clone of submodules',\n            is_correct: false\n          },\n          {\n            label: 'To clone only the parent repository, excluding submodules',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'How can you clone a repository from a specific commit?',\n        name: 'q8',\n        points: 1,\n        order: 7,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'By specifying the commit hash after the repository URL',\n            is_correct: true\n          },\n          {\n            label: 'By using the \"git clone --commit\" command',\n            is_correct: false\n          },\n          {\n            label: 'It is not possible to clone from a specific commit',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'Explain the purpose of the \"git submodule\" command in a Git repository.',\n        name: 'q9',\n        points: 3,\n        order: 8,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'What is the main difference between \"git clone\" and \"git pull\"?',\n        name: 'q10',\n        points: 2,\n        order: 9,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'git clone creates a new copy, while git pull updates an existing copy',\n            is_correct: true\n          },\n          {\n            label:\n              'git clone creates a copy of the entire repository history, while git pull only gets the latest changes',\n            is_correct: false\n          },\n          {\n            label:\n              'git clone is used for cloning remote repositories, while git pull is used for local repositories',\n            is_correct: false\n          }\n        ]\n      }\n    ]\n  }\n};\n\nexport default template;\n"],"names":["template","QuestionTypes"],"mappings":"wXAIA,MAAAA,EAAA,CAAA,MAAA,iBACA,YAAA,6DACA,cAAA,CACA,UAAA,CACA,CACA,MAAA,kDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAC,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,gEACA,WAAA,EACA,EACA,CACA,MAAA,6BACA,WAAA,EACA,EACA,CACA,MAAA,oBACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,4DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,8CACA,WAAA,EACA,EACA,CACA,MAAA,+CACA,WAAA,EACA,EACA,CACA,MAAA,gCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,sGAEA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,kCACA,WAAA,EACA,EACA,CACA,MAAA,eACA,WAAA,EACA,EACA,CACA,MAAA,YACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,kDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,yDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,2DACA,WAAA,EACA,EACA,CACA,MAAA,4CACA,WAAA,EACA,EACA,CACA,MAAA,kCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,6EACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,0CACA,WAAA,EACA,EACA,CACA,MAAA,8CACA,WAAA,EACA,EACA,CACA,MAAA,0CACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,sEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,2DACA,WAAA,EACA,EACA,CACA,MAAA,0CACA,WAAA,EACA,EACA,CACA,MAAA,4DACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,yDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,yDACA,WAAA,EACA,EACA,CACA,MAAA,4CACA,WAAA,EACA,EACA,CACA,MAAA,qDACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,0EACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,kEACA,KAAA,MACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,wEACA,WAAA,EACA,EACA,CACA,MAAA,yGAEA,WAAA,EACA,EACA,CACA,MAAA,mGAEA,WAAA,EACA,CACA,CACA,CACA,CACA,CAEA"}