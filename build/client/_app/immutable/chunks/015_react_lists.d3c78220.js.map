{"version":3,"file":"015_react_lists.d3c78220.js","sources":["../../../../../../src/lib/mocks/react/015_react_lists.ts"],"sourcesContent":["import { QuestionTypes } from '../utils';\n\nimport type { ExerciseTemplate } from '$lib/utils/types';\n\nconst template: ExerciseTemplate = {\n  title: 'React Lists and Keys Quiz',\n  description: 'Test your knowledge of React lists and keys.',\n  questionnaire: {\n    questions: [\n      {\n        title: 'What is a key in React?',\n        name: 'q1',\n        points: 1,\n        order: 0,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'A unique identifier for list items in React', is_correct: true },\n          { label: 'A CSS class name for styling list items', is_correct: false },\n          { label: 'A component used to render lists in React', is_correct: false }\n        ]\n      },\n      {\n        title: 'Why is it important to use keys when rendering lists in React?',\n        name: 'q2',\n        points: 1,\n        order: 1,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'To improve the performance of list rendering', is_correct: false },\n          {\n            label: 'To ensure that React can uniquely identify and update list items',\n            is_correct: true\n          },\n          { label: 'To apply a specific CSS style to list items', is_correct: false }\n        ]\n      },\n      {\n        title: \"What happens if you don't provide keys when rendering lists in React?\",\n        name: 'q3',\n        points: 1,\n        order: 2,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'React generates keys automatically', is_correct: false },\n          { label: 'React throws a warning but still renders the list', is_correct: false },\n          { label: 'React may have difficulty updating the list efficiently', is_correct: true }\n        ]\n      },\n      {\n        title: 'Select all valid data types that can be used as keys in React lists.',\n        name: 'q4',\n        points: 1,\n        order: 3,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          { label: 'Numbers', is_correct: true },\n          { label: 'Strings', is_correct: true },\n          { label: 'Objects', is_correct: true },\n          { label: 'Booleans', is_correct: false }\n        ]\n      },\n      {\n        title:\n          'Write an example of rendering a list of items in React using the `map` method and keys.',\n        name: 'q5',\n        points: 1,\n        order: 4,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'Explain the concept of \"reconciliation\" in React when dealing with keys in lists.',\n        name: 'q6',\n        points: 1,\n        order: 5,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title:\n          'What is the purpose of the `index` argument in the `map` method when rendering lists in React?',\n        name: 'q7',\n        points: 1,\n        order: 6,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'How can you update the order of items in a rendered list in React?',\n        name: 'q8',\n        points: 1,\n        order: 7,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'What is the difference between keys and refs in React?',\n        name: 'q9',\n        points: 1,\n        order: 8,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'Can you use the same key for multiple items in a list in React?',\n        name: 'q10',\n        points: 1,\n        order: 9,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'Yes, as long as the items have different content', is_correct: false },\n          { label: 'No, keys must be unique within a list', is_correct: true },\n          { label: 'Only if the items have the same parent component', is_correct: false }\n        ]\n      }\n    ]\n  }\n};\n\nexport default template;\n"],"names":["template","QuestionTypes"],"mappings":"wXAIA,MAAAA,EAAA,CAAA,MAAA,4BACA,YAAA,+CACA,cAAA,CACA,UAAA,CACA,CACA,MAAA,0BACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAC,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,8CAAA,WAAA,EAAA,EACA,CAAA,MAAA,0CAAA,WAAA,EAAA,EACA,CAAA,MAAA,4CAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,iEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,+CAAA,WAAA,EAAA,EACA,CACA,MAAA,mEACA,WAAA,EACA,EACA,CAAA,MAAA,8CAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,wEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,qCAAA,WAAA,EAAA,EACA,CAAA,MAAA,oDAAA,WAAA,EAAA,EACA,CAAA,MAAA,0DAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,uEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,UAAA,WAAA,EAAA,EACA,CAAA,MAAA,UAAA,WAAA,EAAA,EACA,CAAA,MAAA,UAAA,WAAA,EAAA,EACA,CAAA,MAAA,WAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,0FAEA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,oFACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,iGAEA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,qEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,yDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,kEACA,KAAA,MACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,mDAAA,WAAA,EAAA,EACA,CAAA,MAAA,wCAAA,WAAA,EAAA,EACA,CAAA,MAAA,mDAAA,WAAA,EAAA,CACA,CACA,CACA,CACA,CAEA"}