{"version":3,"file":"016_react_forms.e98145b9.js","sources":["../../../../../../src/lib/mocks/react/016_react_forms.ts"],"sourcesContent":["import { QuestionTypes } from '../utils';\n\nimport type { ExerciseTemplate } from '$lib/utils/types';\n\nconst template: ExerciseTemplate = {\n  title: 'React Forms Quiz',\n  description: 'Test your knowledge of React forms.',\n  questionnaire: {\n    questions: [\n      {\n        title: 'What is the purpose of forms in React?',\n        name: 'q1',\n        points: 1,\n        order: 0,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'To collect user input data', is_correct: true },\n          { label: 'To style web pages', is_correct: false },\n          { label: 'To render lists of items', is_correct: false }\n        ]\n      },\n      {\n        title: 'Which HTML element is commonly used to create forms in React?',\n        name: 'q2',\n        points: 1,\n        order: 1,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: '<form>', is_correct: true },\n          { label: '<div>', is_correct: false },\n          { label: '<input>', is_correct: false }\n        ]\n      },\n      {\n        title: 'What is the purpose of the `onChange` event handler in React forms?',\n        name: 'q3',\n        points: 1,\n        order: 2,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'To submit the form data', is_correct: false },\n          { label: 'To trigger an action when the form input changes', is_correct: true },\n          { label: 'To reset the form', is_correct: false }\n        ]\n      },\n      {\n        title: 'Select all the types of form inputs commonly used in React forms.',\n        name: 'q4',\n        points: 1,\n        order: 3,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          { label: 'Text input', is_correct: true },\n          { label: 'Radio buttons', is_correct: true },\n          { label: 'Dropdown select', is_correct: true },\n          { label: 'Checkbox', is_correct: true }\n        ]\n      },\n      {\n        title: 'Write an example of a controlled form input in React.',\n        name: 'q5',\n        points: 1,\n        order: 4,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'What is the purpose of the `value` attribute in controlled form inputs?',\n        name: 'q6',\n        points: 1,\n        order: 5,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'Explain the concept of form validation in React.',\n        name: 'q7',\n        points: 1,\n        order: 6,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'How can you prevent the default form submission behavior in React?',\n        name: 'q8',\n        points: 1,\n        order: 7,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'What is the purpose of the `onSubmit` event handler in React forms?',\n        name: 'q9',\n        points: 1,\n        order: 8,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title:\n          'Can you use the same form for both controlled and uncontrolled form inputs in React?',\n        name: 'q10',\n        points: 1,\n        order: 9,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: \"Yes, it doesn't matter\", is_correct: false },\n          {\n            label: 'No, each form should use either controlled or uncontrolled inputs',\n            is_correct: true\n          },\n          { label: 'Only if you use a special wrapper component', is_correct: false }\n        ]\n      }\n    ]\n  }\n};\n\nexport default template;\n"],"names":["template","QuestionTypes"],"mappings":"wXAIA,MAAAA,EAAA,CAAA,MAAA,mBACA,YAAA,sCACA,cAAA,CACA,UAAA,CACA,CACA,MAAA,yCACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAC,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,6BAAA,WAAA,EAAA,EACA,CAAA,MAAA,qBAAA,WAAA,EAAA,EACA,CAAA,MAAA,2BAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,gEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,SAAA,WAAA,EAAA,EACA,CAAA,MAAA,QAAA,WAAA,EAAA,EACA,CAAA,MAAA,UAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,sEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,0BAAA,WAAA,EAAA,EACA,CAAA,MAAA,mDAAA,WAAA,EAAA,EACA,CAAA,MAAA,oBAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,oEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,aAAA,WAAA,EAAA,EACA,CAAA,MAAA,gBAAA,WAAA,EAAA,EACA,CAAA,MAAA,kBAAA,WAAA,EAAA,EACA,CAAA,MAAA,WAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,wDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,0EACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,mDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,qEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,sEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,uFAEA,KAAA,MACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,yBAAA,WAAA,EAAA,EACA,CACA,MAAA,oEACA,WAAA,EACA,EACA,CAAA,MAAA,8CAAA,WAAA,EAAA,CACA,CACA,CACA,CACA,CAEA"}