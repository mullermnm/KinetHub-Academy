{"version":3,"file":"017_python_functions.a7881df8.js","sources":["../../../../../../src/lib/mocks/python/017_python_functions.ts"],"sourcesContent":["import { QuestionTypes } from '../utils';\n\nimport type { ExerciseTemplate } from '$lib/utils/types';\n\nconst template: ExerciseTemplate = {\n  title: 'Python Functions Quiz',\n  description: 'Test your knowledge of Python functions',\n  questionnaire: {\n    questions: [\n      {\n        title: 'What is the purpose of a function in Python?',\n        name: 'question1',\n        points: 2,\n        order: 0,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'To define a variable', is_correct: false },\n          { label: 'To execute code repeatedly', is_correct: false },\n          { label: 'To group and reuse code', is_correct: true }\n        ]\n      },\n      {\n        title: 'How do you define a function in Python?',\n        name: 'question2',\n        points: 2,\n        order: 1,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'function myFunction:', is_correct: false },\n          { label: 'define myFunction:', is_correct: false },\n          { label: 'def myFunction():', is_correct: true }\n        ]\n      },\n      {\n        title: 'Which keyword is used to call a function in Python?',\n        name: 'question3',\n        points: 2,\n        order: 2,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'call', is_correct: false },\n          { label: 'invoke', is_correct: false },\n          { label: 'return', is_correct: true }\n        ]\n      },\n      {\n        title: 'Explain the concept of function parameters in Python.',\n        name: 'question4',\n        points: 2,\n        order: 3,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'What is a \"default parameter\" in a Python function?',\n        name: 'question5',\n        points: 2,\n        order: 4,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'A parameter with a default value', is_correct: true },\n          { label: 'A parameter that cannot be changed', is_correct: false },\n          { label: 'A reserved keyword', is_correct: false }\n        ]\n      },\n      {\n        title: 'How do you return a value from a function in Python?',\n        name: 'question6',\n        points: 2,\n        order: 5,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'use return statement', is_correct: true },\n          { label: 'use print statement', is_correct: false },\n          { label: 'use break statement', is_correct: false }\n        ]\n      },\n      {\n        title: 'Explain the concept of \"local variables\" in Python functions.',\n        name: 'question7',\n        points: 2,\n        order: 6,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'How can you make a Python function accept an arbitrary number of arguments?',\n        name: 'question8',\n        points: 2,\n        order: 7,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'Use a for loop', is_correct: false },\n          { label: 'Use the *args parameter', is_correct: true },\n          { label: 'Use the $args parameter', is_correct: false }\n        ]\n      },\n      {\n        title: 'What is a \"lambda function\" in Python?',\n        name: 'question9',\n        points: 2,\n        order: 8,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'A function defined with the lambda keyword', is_correct: true },\n          { label: 'A built-in Python function', is_correct: false },\n          { label: 'A function with a long name', is_correct: false }\n        ]\n      },\n      {\n        title: 'Explain the concept of \"recursion\" in Python functions.',\n        name: 'question10',\n        points: 2,\n        order: 9,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      }\n    ]\n  }\n};\n\nexport default template;\n"],"names":["template","QuestionTypes"],"mappings":"wXAIA,MAAAA,EAAA,CAAA,MAAA,wBACA,YAAA,0CACA,cAAA,CACA,UAAA,CACA,CACA,MAAA,+CACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAC,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,uBAAA,WAAA,EAAA,EACA,CAAA,MAAA,6BAAA,WAAA,EAAA,EACA,CAAA,MAAA,0BAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,0CACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,uBAAA,WAAA,EAAA,EACA,CAAA,MAAA,qBAAA,WAAA,EAAA,EACA,CAAA,MAAA,oBAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,sDACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,OAAA,WAAA,EAAA,EACA,CAAA,MAAA,SAAA,WAAA,EAAA,EACA,CAAA,MAAA,SAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,wDACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,sDACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,mCAAA,WAAA,EAAA,EACA,CAAA,MAAA,qCAAA,WAAA,EAAA,EACA,CAAA,MAAA,qBAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,uDACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,uBAAA,WAAA,EAAA,EACA,CAAA,MAAA,sBAAA,WAAA,EAAA,EACA,CAAA,MAAA,sBAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,gEACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,8EACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,iBAAA,WAAA,EAAA,EACA,CAAA,MAAA,0BAAA,WAAA,EAAA,EACA,CAAA,MAAA,0BAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,yCACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,6CAAA,WAAA,EAAA,EACA,CAAA,MAAA,6BAAA,WAAA,EAAA,EACA,CAAA,MAAA,8BAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,0DACA,KAAA,aACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,CACA,CACA,CAEA"}