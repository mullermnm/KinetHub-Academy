{"version":3,"file":"019_js_bigInt.4ad92c94.js","sources":["../../../../../../src/lib/mocks/js/019_js_bigInt.ts"],"sourcesContent":["import { QuestionTypes } from '../utils';\n\nimport type { ExerciseTemplate } from '$lib/utils/types';\n\nconst template: ExerciseTemplate = {\n  title: 'JavaScript BigInt Quiz',\n  description: 'Test your knowledge of JavaScript BigInt.',\n  questionnaire: {\n    questions: [\n      {\n        title: 'Which of the following is used to create a BigInt in JavaScript?',\n        name: 'q1',\n        points: 1,\n        order: 1,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: '12345n',\n            is_correct: true\n          },\n          {\n            label: '12345',\n            is_correct: false\n          },\n          {\n            label: '\"12345\"',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the primary use of BigInt in JavaScript?',\n        name: 'q2',\n        points: 1,\n        order: 2,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'To represent large integers that exceed the limits of regular numbers',\n            is_correct: true\n          },\n          {\n            label: 'To perform bitwise operations',\n            is_correct: false\n          },\n          {\n            label: 'To store decimal fractions',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'Which of the following operators can be used with BigInt?',\n        name: 'q3',\n        points: 1,\n        order: 3,\n        question_type: QuestionTypes[1], // CHECKBOX type\n        options: [\n          {\n            label: '+',\n            is_correct: true\n          },\n          {\n            label: '-',\n            is_correct: true\n          },\n          {\n            label: '*',\n            is_correct: true\n          },\n          {\n            label: '/',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the result of adding a BigInt and a regular number in JavaScript?',\n        name: 'q4',\n        points: 1,\n        order: 4,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'A BigInt',\n            is_correct: true\n          },\n          {\n            label: 'A regular number',\n            is_correct: false\n          },\n          {\n            label: 'A string',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'How do you convert a BigInt to a regular number in JavaScript?',\n        name: 'q5',\n        points: 1,\n        order: 5,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'By using the `Number()` function',\n            is_correct: false\n          },\n          {\n            label: 'By using the `.valueOf()` method',\n            is_correct: true\n          },\n          {\n            label: 'By using the `parseInt()` function',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the purpose of the `BigInt.asUintN()` method in JavaScript?',\n        name: 'q6',\n        points: 1,\n        order: 6,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'To convert a BigInt to an unsigned integer of a specified bit length',\n            is_correct: true\n          },\n          {\n            label: 'To perform bitwise AND operations on BigInts',\n            is_correct: false\n          },\n          {\n            label: 'To convert a BigInt to a regular number',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the result of the expression `2n ** 53n` in JavaScript?',\n        name: 'q7',\n        points: 1,\n        order: 7,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'A BigInt representing 2 to the power of 53',\n            is_correct: true\n          },\n          {\n            label: 'A regular number',\n            is_correct: false\n          },\n          {\n            label: 'An error',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'How do you create a BigInt from a string in JavaScript?',\n        name: 'q8',\n        points: 1,\n        order: 8,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'By using the `BigInt()` constructor',\n            is_correct: false\n          },\n          {\n            label: 'By appending the letter \"n\" to the end of the string',\n            is_correct: true\n          },\n          {\n            label: 'By using the `parseInt()` function',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the value of `typeof 12345n` in JavaScript?',\n        name: 'q9',\n        points: 1,\n        order: 9,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'bigint',\n            is_correct: true\n          },\n          {\n            label: 'number',\n            is_correct: false\n          },\n          {\n            label: 'string',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'Which of the following statements is true regarding JavaScript BigInt?',\n        name: 'q10',\n        points: 1,\n        order: 10,\n        question_type: QuestionTypes[1], // CHECKBOX type\n        options: [\n          {\n            label: 'It can represent arbitrarily large integers',\n            is_correct: true\n          },\n          {\n            label: 'It is supported in all JavaScript environments without limitations',\n            is_correct: false\n          },\n          {\n            label: 'It is primarily used for representing decimal fractions',\n            is_correct: false\n          },\n          {\n            label: 'It can be used with all arithmetic operators',\n            is_correct: true\n          }\n        ]\n      }\n    ]\n  }\n};\n\nexport default template;\n"],"names":["template","QuestionTypes"],"mappings":"wXAIA,MAAAA,EAAA,CAAA,MAAA,yBACA,YAAA,4CACA,cAAA,CACA,UAAA,CACA,CACA,MAAA,mEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAC,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,SACA,WAAA,EACA,EACA,CACA,MAAA,QACA,WAAA,EACA,EACA,CACA,MAAA,UACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,mDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,wEACA,WAAA,EACA,EACA,CACA,MAAA,gCACA,WAAA,EACA,EACA,CACA,MAAA,6BACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,4DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,IACA,WAAA,EACA,EACA,CACA,MAAA,IACA,WAAA,EACA,EACA,CACA,MAAA,IACA,WAAA,EACA,EACA,CACA,MAAA,IACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,4EACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,WACA,WAAA,EACA,EACA,CACA,MAAA,mBACA,WAAA,EACA,EACA,CACA,MAAA,WACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,iEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,mCACA,WAAA,EACA,EACA,CACA,MAAA,mCACA,WAAA,EACA,EACA,CACA,MAAA,qCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,sEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,uEACA,WAAA,EACA,EACA,CACA,MAAA,+CACA,WAAA,EACA,EACA,CACA,MAAA,0CACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,kEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,6CACA,WAAA,EACA,EACA,CACA,MAAA,mBACA,WAAA,EACA,EACA,CACA,MAAA,WACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,0DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,sCACA,WAAA,EACA,EACA,CACA,MAAA,uDACA,WAAA,EACA,EACA,CACA,MAAA,qCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,sDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,SACA,WAAA,EACA,EACA,CACA,MAAA,SACA,WAAA,EACA,EACA,CACA,MAAA,SACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,yEACA,KAAA,MACA,OAAA,EACA,MAAA,GACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,8CACA,WAAA,EACA,EACA,CACA,MAAA,qEACA,WAAA,EACA,EACA,CACA,MAAA,0DACA,WAAA,EACA,EACA,CACA,MAAA,+CACA,WAAA,EACA,CACA,CACA,CACA,CACA,CAEA"}