{"version":3,"file":"019_node_sqlJoin.1c8673eb.js","sources":["../../../../../../src/lib/mocks/node/019_node_sqlJoin.ts"],"sourcesContent":["import { QuestionTypes } from '../utils';\n\nimport type { ExerciseTemplate } from '$lib/utils/types';\n\nconst template: ExerciseTemplate = {\n  title: 'Node.js MySQL JOIN Quiz',\n  description: 'Test your knowledge of performing JOIN operations in MySQL with Node.js.',\n  questionnaire: {\n    questions: [\n      {\n        title: 'What is the purpose of a JOIN operation in a MySQL query?',\n        name: 'question1',\n        points: 2,\n        order: 0,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'To create a new table.',\n            is_correct: false\n          },\n          {\n            label:\n              'To combine rows from two or more tables based on a related column between them.',\n            is_correct: true\n          },\n          {\n            label: 'To delete data from a table.',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'Which JOIN type returns all rows when there is a match in either table?',\n        name: 'question2',\n        points: 2,\n        order: 1,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          {\n            label: 'INNER JOIN',\n            is_correct: false\n          },\n          {\n            label: 'LEFT JOIN (or LEFT OUTER JOIN)',\n            is_correct: true\n          },\n          {\n            label: 'RIGHT JOIN (or RIGHT OUTER JOIN)',\n            is_correct: true\n          },\n          {\n            label: 'FULL JOIN (or FULL OUTER JOIN)',\n            is_correct: true\n          }\n        ]\n      },\n      {\n        title: 'Which JOIN type returns only the rows that have matching values in both tables?',\n        name: 'question3',\n        points: 2,\n        order: 2,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'INNER JOIN',\n            is_correct: true\n          },\n          {\n            label: 'LEFT JOIN (or LEFT OUTER JOIN)',\n            is_correct: false\n          },\n          {\n            label: 'RIGHT JOIN (or RIGHT OUTER JOIN)',\n            is_correct: false\n          },\n          {\n            label: 'FULL JOIN (or FULL OUTER JOIN)',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the purpose of the \"ON\" clause in a JOIN operation?',\n        name: 'question4',\n        points: 2,\n        order: 3,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title:\n          'Which JOIN type returns all rows from both tables with NULL records where there is no match?',\n        name: 'question5',\n        points: 2,\n        order: 4,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'INNER JOIN',\n            is_correct: false\n          },\n          {\n            label: 'LEFT JOIN (or LEFT OUTER JOIN)',\n            is_correct: false\n          },\n          {\n            label: 'RIGHT JOIN (or RIGHT OUTER JOIN)',\n            is_correct: false\n          },\n          {\n            label: 'FULL JOIN (or FULL OUTER JOIN)',\n            is_correct: true\n          }\n        ]\n      },\n      {\n        title: 'Which SQL statement is used to perform an INNER JOIN in MySQL?',\n        name: 'question6',\n        points: 2,\n        order: 5,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'JOIN',\n            is_correct: true\n          },\n          {\n            label: 'INNER',\n            is_correct: false\n          },\n          {\n            label: 'ON',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title:\n          'Which JOIN type returns all rows from the left table and the matching rows from the right table?',\n        name: 'question7',\n        points: 2,\n        order: 6,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'INNER JOIN',\n            is_correct: false\n          },\n          {\n            label: 'LEFT JOIN (or LEFT OUTER JOIN)',\n            is_correct: true\n          },\n          {\n            label: 'RIGHT JOIN (or RIGHT OUTER JOIN)',\n            is_correct: false\n          },\n          {\n            label: 'FULL JOIN (or FULL OUTER JOIN)',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the difference between INNER JOIN and LEFT JOIN?',\n        name: 'question8',\n        points: 2,\n        order: 7,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'Which SQL statement is used to perform a LEFT JOIN in MySQL?',\n        name: 'question9',\n        points: 2,\n        order: 8,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'JOIN',\n            is_correct: false\n          },\n          {\n            label: 'LEFT JOIN (or LEFT OUTER JOIN)',\n            is_correct: true\n          },\n          {\n            label: 'OUTER JOIN',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What happens if there are duplicate column names in the tables being joined?',\n        name: 'question10',\n        points: 2,\n        order: 9,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      }\n    ]\n  }\n};\n\nexport default template;\n"],"names":["template","QuestionTypes"],"mappings":"wXAIA,MAAAA,EAAA,CAAA,MAAA,0BACA,YAAA,2EACA,cAAA,CACA,UAAA,CACA,CACA,MAAA,4DACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAC,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,yBACA,WAAA,EACA,EACA,CACA,MAAA,kFAEA,WAAA,EACA,EACA,CACA,MAAA,+BACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,0EACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,aACA,WAAA,EACA,EACA,CACA,MAAA,iCACA,WAAA,EACA,EACA,CACA,MAAA,mCACA,WAAA,EACA,EACA,CACA,MAAA,iCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,kFACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,aACA,WAAA,EACA,EACA,CACA,MAAA,iCACA,WAAA,EACA,EACA,CACA,MAAA,mCACA,WAAA,EACA,EACA,CACA,MAAA,iCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,8DACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,+FAEA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,aACA,WAAA,EACA,EACA,CACA,MAAA,iCACA,WAAA,EACA,EACA,CACA,MAAA,mCACA,WAAA,EACA,EACA,CACA,MAAA,iCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,iEACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,OACA,WAAA,EACA,EACA,CACA,MAAA,QACA,WAAA,EACA,EACA,CACA,MAAA,KACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,mGAEA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,aACA,WAAA,EACA,EACA,CACA,MAAA,iCACA,WAAA,EACA,EACA,CACA,MAAA,mCACA,WAAA,EACA,EACA,CACA,MAAA,iCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,2DACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,+DACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,OACA,WAAA,EACA,EACA,CACA,MAAA,iCACA,WAAA,EACA,EACA,CACA,MAAA,aACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,+EACA,KAAA,aACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,CACA,CACA,CAEA"}