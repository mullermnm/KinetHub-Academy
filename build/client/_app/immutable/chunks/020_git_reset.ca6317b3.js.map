{"version":3,"file":"020_git_reset.ca6317b3.js","sources":["../../../../../../src/lib/mocks/git/020_git_reset.ts"],"sourcesContent":["import { QuestionTypes } from '../utils';\n\nimport type { ExerciseTemplate } from '$lib/utils/types';\n\nconst template: ExerciseTemplate = {\n  title: 'Git Reset Quiz',\n  description: 'Test your knowledge of Git reset with practical questions.',\n  questionnaire: {\n    questions: [\n      {\n        title: 'What is the purpose of the \"git reset\" command in Git?',\n        name: 'q1',\n        points: 2,\n        order: 0,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'To create a new branch in the repository',\n            is_correct: false\n          },\n          {\n            label: 'To remove changes from the staging area and uncommit them',\n            is_correct: true\n          },\n          {\n            label: 'To delete a Git repository',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What are the different modes of \"git reset\"?',\n        name: 'q2',\n        points: 1,\n        order: 1,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'How does \"git reset\" differ from \"git revert\"?',\n        name: 'q3',\n        points: 2,\n        order: 2,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'What is the purpose of the \"git reset HEAD\" command?',\n        name: 'q4',\n        points: 3,\n        order: 3,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'What happens to the commit history after a \"git reset\" operation?',\n        name: 'q5',\n        points: 1,\n        order: 4,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label:\n              'The commit history is preserved, but the branch pointer moves to a different commit',\n            is_correct: true\n          },\n          {\n            label: 'The commit history is deleted',\n            is_correct: false\n          },\n          {\n            label: 'A new branch is created',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the purpose of \"git reset --hard\"?',\n        name: 'q6',\n        points: 1,\n        order: 5,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'To reset the branch, staging area, and working directory to a specific commit',\n            is_correct: true\n          },\n          {\n            label: 'To create a new branch',\n            is_correct: false\n          },\n          {\n            label: 'To uncommit changes without affecting the working directory',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'How can you unstage changes from the staging area using \"git reset\"?',\n        name: 'q7',\n        points: 2,\n        order: 6,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'By running \"git reset\" with no additional arguments',\n            is_correct: true\n          },\n          {\n            label: 'By specifying the commit hash with \"git reset\"',\n            is_correct: false\n          },\n          {\n            label: 'It is not possible to unstage changes with \"git reset\"',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What does \"soft,\" \"mixed,\" and \"hard\" mean in the context of \"git reset\"?',\n        name: 'q8',\n        points: 3,\n        order: 7,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'How can you discard all changes in the working directory using \"git reset\"?',\n        name: 'q9',\n        points: 1,\n        order: 8,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'By using \"git reset --hard HEAD\"',\n            is_correct: true\n          },\n          {\n            label: 'By using \"git reset --soft HEAD\"',\n            is_correct: false\n          },\n          {\n            label: 'By using \"git reset HEAD\"',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'Explain the concept of the \"reflog\" in Git.',\n        name: 'q10',\n        points: 2,\n        order: 9,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      }\n    ]\n  }\n};\n\nexport default template;\n"],"names":["template","QuestionTypes"],"mappings":"wXAIA,MAAAA,EAAA,CAAA,MAAA,iBACA,YAAA,6DACA,cAAA,CACA,UAAA,CACA,CACA,MAAA,yDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAC,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,2CACA,WAAA,EACA,EACA,CACA,MAAA,4DACA,WAAA,EACA,EACA,CACA,MAAA,6BACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,+CACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,iDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,uDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,oEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,sFAEA,WAAA,EACA,EACA,CACA,MAAA,gCACA,WAAA,EACA,EACA,CACA,MAAA,0BACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,6CACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,gFACA,WAAA,EACA,EACA,CACA,MAAA,yBACA,WAAA,EACA,EACA,CACA,MAAA,8DACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,uEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,sDACA,WAAA,EACA,EACA,CACA,MAAA,iDACA,WAAA,EACA,EACA,CACA,MAAA,yDACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,4EACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,8EACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,mCACA,WAAA,EACA,EACA,CACA,MAAA,mCACA,WAAA,EACA,EACA,CACA,MAAA,4BACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,8CACA,KAAA,MACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,CACA,CACA,CAEA"}