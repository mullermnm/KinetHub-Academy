{"version":3,"file":"020_js_numberMethods.992a249c.js","sources":["../../../../../../src/lib/mocks/js/020_js_numberMethods.ts"],"sourcesContent":["import { QuestionTypes } from '../utils';\n\nimport type { ExerciseTemplate } from '$lib/utils/types';\n\nconst template: ExerciseTemplate = {\n  title: 'JavaScript Number Methods Quiz',\n  description: 'Test your knowledge of JavaScript Number Methods.',\n  questionnaire: {\n    questions: [\n      {\n        title:\n          'Which JavaScript method returns the smallest integer greater than or equal to a given number?',\n        name: 'q1',\n        points: 1,\n        order: 1,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'Math.floor()',\n            is_correct: false\n          },\n          {\n            label: 'Math.ceil()',\n            is_correct: true\n          },\n          {\n            label: 'Math.round()',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What does the `toFixed()` method do in JavaScript?',\n        name: 'q2',\n        points: 1,\n        order: 2,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'Returns the number as a fixed-point notation string',\n            is_correct: true\n          },\n          {\n            label: 'Returns the number rounded to the nearest integer',\n            is_correct: false\n          },\n          {\n            label: 'Returns the square root of the number',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'Which JavaScript method parses a string and returns a floating-point number?',\n        name: 'q3',\n        points: 1,\n        order: 3,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'parseFloat()',\n            is_correct: true\n          },\n          {\n            label: 'parseInt()',\n            is_correct: false\n          },\n          {\n            label: 'Number()',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What is the result of `Number.isNaN(NaN)` in JavaScript?',\n        name: 'q4',\n        points: 1,\n        order: 4,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'true',\n            is_correct: true\n          },\n          {\n            label: 'false',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'Which JavaScript method converts a number to its exponential notation?',\n        name: 'q5',\n        points: 1,\n        order: 5,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'toExponential()',\n            is_correct: true\n          },\n          {\n            label: 'toFixed()',\n            is_correct: false\n          },\n          {\n            label: 'toPrecision()',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What does the `isFinite()` method check for in JavaScript?',\n        name: 'q6',\n        points: 1,\n        order: 6,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'Checks if a number is finite (not NaN, Infinity, or -Infinity)',\n            is_correct: true\n          },\n          {\n            label: 'Checks if a number is a positive integer',\n            is_correct: false\n          },\n          {\n            label: 'Checks if a number is even',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What does the `toString()` method do for a number in JavaScript?',\n        name: 'q7',\n        points: 1,\n        order: 7,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'Returns the number as a string',\n            is_correct: true\n          },\n          {\n            label: 'Rounds the number to the nearest integer',\n            is_correct: false\n          },\n          {\n            label: 'Returns the square root of the number',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'How do you check if a number is an integer in JavaScript?',\n        name: 'q8',\n        points: 1,\n        order: 8,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'Using the `Number.isInteger()` method',\n            is_correct: true\n          },\n          {\n            label: 'Using the `Math.round()` method',\n            is_correct: false\n          },\n          {\n            label: 'Using the `Math.floor()` method',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title:\n          'Which JavaScript method returns the largest integer less than or equal to a given number?',\n        name: 'q9',\n        points: 1,\n        order: 9,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'Math.floor()',\n            is_correct: true\n          },\n          {\n            label: 'Math.ceil()',\n            is_correct: false\n          },\n          {\n            label: 'Math.round()',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'What does the `Number.toPrecision()` method do in JavaScript?',\n        name: 'q10',\n        points: 1,\n        order: 10,\n        question_type: QuestionTypes[0], // RADIO type\n        options: [\n          {\n            label: 'Returns a string representing a number to a specified precision',\n            is_correct: true\n          },\n          {\n            label: 'Rounds the number to the nearest integer',\n            is_correct: false\n          },\n          {\n            label: 'Returns the square root of the number',\n            is_correct: false\n          }\n        ]\n      }\n    ]\n  }\n};\n\nexport default template;\n"],"names":["template","QuestionTypes"],"mappings":"wXAIA,MAAAA,EAAA,CAAA,MAAA,iCACA,YAAA,oDACA,cAAA,CACA,UAAA,CACA,CACA,MAAA,gGAEA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAC,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,eACA,WAAA,EACA,EACA,CACA,MAAA,cACA,WAAA,EACA,EACA,CACA,MAAA,eACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,qDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,sDACA,WAAA,EACA,EACA,CACA,MAAA,oDACA,WAAA,EACA,EACA,CACA,MAAA,wCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,+EACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,eACA,WAAA,EACA,EACA,CACA,MAAA,aACA,WAAA,EACA,EACA,CACA,MAAA,WACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,2DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,OACA,WAAA,EACA,EACA,CACA,MAAA,QACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,yEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,kBACA,WAAA,EACA,EACA,CACA,MAAA,YACA,WAAA,EACA,EACA,CACA,MAAA,gBACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,6DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,iEACA,WAAA,EACA,EACA,CACA,MAAA,2CACA,WAAA,EACA,EACA,CACA,MAAA,6BACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,mEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,iCACA,WAAA,EACA,EACA,CACA,MAAA,2CACA,WAAA,EACA,EACA,CACA,MAAA,wCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,4DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,wCACA,WAAA,EACA,EACA,CACA,MAAA,kCACA,WAAA,EACA,EACA,CACA,MAAA,kCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,4FAEA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,eACA,WAAA,EACA,EACA,CACA,MAAA,cACA,WAAA,EACA,EACA,CACA,MAAA,eACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,gEACA,KAAA,MACA,OAAA,EACA,MAAA,GACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,kEACA,WAAA,EACA,EACA,CACA,MAAA,2CACA,WAAA,EACA,EACA,CACA,MAAA,wCACA,WAAA,EACA,CACA,CACA,CACA,CACA,CAEA"}