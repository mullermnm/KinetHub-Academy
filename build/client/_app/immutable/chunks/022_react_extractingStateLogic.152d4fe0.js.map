{"version":3,"file":"022_react_extractingStateLogic.152d4fe0.js","sources":["../../../../../../src/lib/mocks/react/022_react_extractingStateLogic.ts"],"sourcesContent":["import { QuestionTypes } from '../utils';\n\nimport type { ExerciseTemplate } from '$lib/utils/types';\n\nconst template: ExerciseTemplate = {\n  title: 'Quiz on Extracting State Logic into a Reducer',\n  description: 'Test your knowledge about extracting state logic into a reducer in React.',\n  questionnaire: {\n    questions: [\n      {\n        title: 'What is a reducer in React used for?',\n        name: 'question1',\n        points: 2,\n        order: 0,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'Managing component state',\n            is_correct: false\n          },\n          {\n            label: 'Handling API requests',\n            is_correct: false\n          },\n          {\n            label: 'Managing application state',\n            is_correct: true\n          }\n        ]\n      },\n      {\n        title: 'When should you use the useReducer hook in React?',\n        name: 'question2',\n        points: 2,\n        order: 1,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'Only for managing form state',\n            is_correct: false\n          },\n          {\n            label: 'For complex state management scenarios',\n            is_correct: true\n          },\n          {\n            label: 'Only for handling API requests',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'Explain the purpose of the useContext hook in React.',\n        name: 'question3',\n        points: 3,\n        order: 2,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      {\n        title: 'In React, what is the primary purpose of the useReducer hook?',\n        name: 'question4',\n        points: 2,\n        order: 3,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'Handling CSS styles',\n            is_correct: false\n          },\n          {\n            label: 'Managing component state',\n            is_correct: true\n          },\n          {\n            label: 'Rendering JSX elements',\n            is_correct: false\n          }\n        ]\n      },\n      // Question 5 - RADIO\n      {\n        title: 'What does the dispatch function do in a reducer?',\n        name: 'question5',\n        points: 2,\n        order: 4,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'It updates the component props.',\n            is_correct: false\n          },\n          {\n            label: 'It triggers a re-render of the component.',\n            is_correct: false\n          },\n          {\n            label: 'It sends an action to update the state.',\n            is_correct: true\n          }\n        ]\n      },\n      // Question 6 - CHECKBOX\n      {\n        title:\n          'Which of the following are valid use cases for using a reducer in React? (Select all that apply)',\n        name: 'question6',\n        points: 3,\n        order: 5,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          {\n            label: 'Managing form input state',\n            is_correct: true\n          },\n          {\n            label: 'Handling API requests',\n            is_correct: true\n          },\n          {\n            label: \"Updating the component's local state\",\n            is_correct: false\n          },\n          {\n            label: 'Managing global application state',\n            is_correct: true\n          }\n        ]\n      },\n      // Question 7 - RADIO\n      {\n        title: 'What is the initial value of state when using useReducer?',\n        name: 'question7',\n        points: 2,\n        order: 6,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'null',\n            is_correct: false\n          },\n          {\n            label: 'undefined',\n            is_correct: false\n          },\n          {\n            label: 'It depends on the initial state parameter.',\n            is_correct: true\n          }\n        ]\n      },\n      // Question 8 - TEXTAREA\n      {\n        title: 'Explain the role of the action object in a reducer function.',\n        name: 'question8',\n        points: 3,\n        order: 7,\n        question_type: QuestionTypes[2], // TEXTAREA\n        options: []\n      },\n      // Question 9 - RADIO\n      {\n        title: 'What is the key difference between useState and useReducer in React?',\n        name: 'question9',\n        points: 2,\n        order: 8,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label:\n              'useState is used for managing complex state logic, while useReducer is for simple state.',\n            is_correct: false\n          },\n          {\n            label:\n              'useState is for managing local component state, while useReducer is for managing global state.',\n            is_correct: true\n          },\n          {\n            label:\n              'useState is used for asynchronous state updates, while useReducer is for synchronous updates.',\n            is_correct: false\n          }\n        ]\n      },\n      // Question 10 - CHECKBOX\n      {\n        title:\n          'Which of the following are common actions you can perform in a reducer? (Select all that apply)',\n        name: 'question10',\n        points: 3,\n        order: 9,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          {\n            label: 'Incrementing a counter',\n            is_correct: true\n          },\n          {\n            label: 'Fetching data from an API',\n            is_correct: true\n          },\n          {\n            label: 'Manipulating the DOM directly',\n            is_correct: false\n          },\n          {\n            label: 'Toggling a boolean flag',\n            is_correct: true\n          }\n        ]\n      }\n    ]\n  }\n};\n\nexport default template;\n"],"names":["template","QuestionTypes"],"mappings":"wXAIA,MAAAA,EAAA,CAAA,MAAA,gDACA,YAAA,4EACA,cAAA,CACA,UAAA,CACA,CACA,MAAA,uCACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAC,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,2BACA,WAAA,EACA,EACA,CACA,MAAA,wBACA,WAAA,EACA,EACA,CACA,MAAA,6BACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,oDACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,+BACA,WAAA,EACA,EACA,CACA,MAAA,yCACA,WAAA,EACA,EACA,CACA,MAAA,iCACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,uDACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CACA,MAAA,gEACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,sBACA,WAAA,EACA,EACA,CACA,MAAA,2BACA,WAAA,EACA,EACA,CACA,MAAA,yBACA,WAAA,EACA,CACA,CACA,EACA,CAEA,MAAA,mDACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,kCACA,WAAA,EACA,EACA,CACA,MAAA,4CACA,WAAA,EACA,EACA,CACA,MAAA,0CACA,WAAA,EACA,CACA,CACA,EACA,CAEA,MAAA,mGAEA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,4BACA,WAAA,EACA,EACA,CACA,MAAA,wBACA,WAAA,EACA,EACA,CACA,MAAA,uCACA,WAAA,EACA,EACA,CACA,MAAA,oCACA,WAAA,EACA,CACA,CACA,EACA,CAEA,MAAA,4DACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,OACA,WAAA,EACA,EACA,CACA,MAAA,YACA,WAAA,EACA,EACA,CACA,MAAA,6CACA,WAAA,EACA,CACA,CACA,EACA,CAEA,MAAA,+DACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CAAA,CACA,EACA,CAEA,MAAA,uEACA,KAAA,YACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,2FAEA,WAAA,EACA,EACA,CACA,MAAA,iGAEA,WAAA,EACA,EACA,CACA,MAAA,gGAEA,WAAA,EACA,CACA,CACA,EACA,CAEA,MAAA,kGAEA,KAAA,aACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,yBACA,WAAA,EACA,EACA,CACA,MAAA,4BACA,WAAA,EACA,EACA,CACA,MAAA,gCACA,WAAA,EACA,EACA,CACA,MAAA,0BACA,WAAA,EACA,CACA,CACA,CACA,CACA,CAEA"}