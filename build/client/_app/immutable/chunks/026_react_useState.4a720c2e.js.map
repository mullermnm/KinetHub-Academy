{"version":3,"file":"026_react_useState.4a720c2e.js","sources":["../../../../../../src/lib/mocks/react/026_react_useState.ts"],"sourcesContent":["import { QuestionTypes } from '../utils';\n\nimport type { ExerciseTemplate } from '$lib/utils/types';\n\nconst template: ExerciseTemplate = {\n  title: 'React useState Hook Quiz',\n  description: 'Test your knowledge about the React useState hook.',\n  questionnaire: {\n    questions: [\n      {\n        title: 'What is the purpose of the useState hook in React?',\n        name: 'q1',\n        points: 1,\n        order: 0,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'To manage state in class components', is_correct: false },\n          { label: 'To manage state in functional components', is_correct: true },\n          { label: 'To handle events in React', is_correct: false }\n        ]\n      },\n      {\n        title: 'How do you import the useState hook in a React component?',\n        name: 'q2',\n        points: 1,\n        order: 1,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'import useState from \"react\";', is_correct: true },\n          { label: 'import { useState } from \"react\";', is_correct: false },\n          { label: 'import React, { useState } from \"react\";', is_correct: false }\n        ]\n      },\n      {\n        title: 'Which of the following is a valid way to use the useState hook?',\n        name: 'q3',\n        points: 1,\n        order: 2,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          { label: 'const [count, setCount] = useState(0);', is_correct: true },\n          { label: 'useState(count);', is_correct: false },\n          { label: 'const count = useState(0);', is_correct: false }\n        ]\n      },\n      {\n        title: 'What is the value returned by the useState hook?',\n        name: 'q4',\n        points: 1,\n        order: 3,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'A function for updating the state', is_correct: false },\n          {\n            label: 'An array containing the current state value and a function to update it',\n            is_correct: true\n          },\n          { label: 'The current state value', is_correct: false }\n        ]\n      },\n      {\n        title: 'In which part of a functional component do you typically call the useState hook?',\n        name: 'q5',\n        points: 1,\n        order: 4,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'Inside a JSX element', is_correct: false },\n          { label: 'Inside the component function body', is_correct: true },\n          { label: 'Inside the component render method', is_correct: false }\n        ]\n      },\n      {\n        title: 'How do you update the state using the useState hook?',\n        name: 'q6',\n        points: 1,\n        order: 5,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'By directly modifying the state variable', is_correct: false },\n          {\n            label: 'By calling the function returned by useState with the new state value',\n            is_correct: true\n          },\n          { label: 'By using setState() method', is_correct: false }\n        ]\n      },\n      {\n        title: 'What is the initial state value in the following code?',\n        name: 'q7',\n        points: 1,\n        order: 6,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: '0', is_correct: false },\n          { label: 'null', is_correct: false },\n          { label: 'The argument passed to useState (0 in this case)', is_correct: true }\n        ]\n      },\n      {\n        title: 'What is the purpose of the state update function returned by useState?',\n        name: 'q8',\n        points: 1,\n        order: 7,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'To retrieve the current state value', is_correct: false },\n          { label: 'To set the initial state value', is_correct: false },\n          { label: 'To update the state with a new value', is_correct: true }\n        ]\n      },\n      {\n        title: 'What is the recommended way to update the state based on the previous state value?',\n        name: 'q9',\n        points: 1,\n        order: 8,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'By using a class component', is_correct: false },\n          { label: 'By using the setState method', is_correct: false },\n          { label: 'By passing a function to the state update function', is_correct: true }\n        ]\n      },\n      {\n        title: 'How can you access the current state value inside a functional component?',\n        name: 'q10',\n        points: 1,\n        order: 9,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'By using this.state', is_correct: false },\n          { label: 'By passing props to the component', is_correct: false },\n          { label: 'By using the state variable returned by useState', is_correct: true }\n        ]\n      }\n    ]\n  }\n};\n\nexport default template;\n"],"names":["template","QuestionTypes"],"mappings":"wXAIA,MAAAA,EAAA,CAAA,MAAA,2BACA,YAAA,qDACA,cAAA,CACA,UAAA,CACA,CACA,MAAA,qDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAC,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,sCAAA,WAAA,EAAA,EACA,CAAA,MAAA,2CAAA,WAAA,EAAA,EACA,CAAA,MAAA,4BAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,4DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,gCAAA,WAAA,EAAA,EACA,CAAA,MAAA,oCAAA,WAAA,EAAA,EACA,CAAA,MAAA,2CAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,kEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,yCAAA,WAAA,EAAA,EACA,CAAA,MAAA,mBAAA,WAAA,EAAA,EACA,CAAA,MAAA,6BAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,mDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,oCAAA,WAAA,EAAA,EACA,CACA,MAAA,0EACA,WAAA,EACA,EACA,CAAA,MAAA,0BAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,mFACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,uBAAA,WAAA,EAAA,EACA,CAAA,MAAA,qCAAA,WAAA,EAAA,EACA,CAAA,MAAA,qCAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,uDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,2CAAA,WAAA,EAAA,EACA,CACA,MAAA,wEACA,WAAA,EACA,EACA,CAAA,MAAA,6BAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,yDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,IAAA,WAAA,EAAA,EACA,CAAA,MAAA,OAAA,WAAA,EAAA,EACA,CAAA,MAAA,mDAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,yEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,sCAAA,WAAA,EAAA,EACA,CAAA,MAAA,iCAAA,WAAA,EAAA,EACA,CAAA,MAAA,uCAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,qFACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,6BAAA,WAAA,EAAA,EACA,CAAA,MAAA,+BAAA,WAAA,EAAA,EACA,CAAA,MAAA,qDAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,4EACA,KAAA,MACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,sBAAA,WAAA,EAAA,EACA,CAAA,MAAA,oCAAA,WAAA,EAAA,EACA,CAAA,MAAA,mDAAA,WAAA,EAAA,CACA,CACA,CACA,CACA,CAEA"}