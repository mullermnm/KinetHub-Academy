import{Q as e}from"./15.329399bd.js";import"./index.a2391391.js";(function(){try{var t=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},o=new Error().stack;o&&(t._sentryDebugIds=t._sentryDebugIds||{},t._sentryDebugIds[o]="c46e02b8-e9e0-4564-b72c-442c1e2674c4",t._sentryDebugIdIdentifier="sentry-dbid-c46e02b8-e9e0-4564-b72c-442c1e2674c4")}catch{}})();const i={title:"React useContext Hook Quiz",description:"Test your knowledge about the React useContext hook.",questionnaire:{questions:[{title:"What is the purpose of the useContext hook in React?",name:"q1",points:1,order:0,question_type:e[0],options:[{label:"To create functional components",is_correct:!1},{label:"To consume context values in functional components",is_correct:!0},{label:"To manage state in class components",is_correct:!1}]},{title:"How do you import the useContext hook in a React component?",name:"q2",points:1,order:1,question_type:e[0],options:[{label:'import useContext from "react";',is_correct:!1},{label:'import { useContext } from "react";',is_correct:!0},{label:'import React, { useContext } from "react";',is_correct:!1}]},{title:"Which function is used to access context values in useContext?",name:"q3",points:1,order:2,question_type:e[0],options:[{label:"useContextValue",is_correct:!1},{label:"getContext",is_correct:!1},{label:"The function returned by useContext",is_correct:!0}]},{title:"What is the return value of useContext?",name:"q4",points:1,order:3,question_type:e[0],options:[{label:"The context itself",is_correct:!1},{label:"The context provider",is_correct:!1},{label:"The current context value",is_correct:!0}]},{title:"How do you wrap your components with a context provider?",name:"q5",points:1,order:4,question_type:e[0],options:[{label:"<Context.Provider value={...}>",is_correct:!0},{label:"<Context.Provider>",is_correct:!1},{label:"<Context.Consumer>",is_correct:!1}]},{title:"What happens if a component attempts to consume context outside a context provider?",name:"q6",points:1,order:5,question_type:e[0],options:[{label:"It throws an error",is_correct:!0},{label:"It works normally",is_correct:!1},{label:"It logs a warning",is_correct:!1}]},{title:"How can you provide a default value for context?",name:"q7",points:1,order:6,question_type:e[0],options:[{label:"By specifying a default prop",is_correct:!1},{label:'By using the "defaultValue" property in createContext',is_correct:!0},{label:'By using the "default" keyword',is_correct:!1}]},{title:"How do you consume multiple contexts in a component?",name:"q8",points:1,order:7,question_type:e[0],options:[{label:"By nesting context providers",is_correct:!0},{label:"By using a single useContext call",is_correct:!1},{label:'By using the "multiple" option in useContext',is_correct:!1}]},{title:"What happens if two context providers with the same context are nested?",name:"q9",points:1,order:8,question_type:e[0],options:[{label:"The inner provider overrides the outer provider",is_correct:!0},{label:"An error is thrown",is_correct:!1},{label:"Both providers are used independently",is_correct:!1}]},{title:"What is the primary use case for useContext?",name:"q10",points:1,order:9,question_type:e[0],options:[{label:"To create class components",is_correct:!1},{label:"To consume context values in functional components",is_correct:!0},{label:"To manage state in functional components",is_correct:!1}]}]}};export{i as default};
//# sourceMappingURL=027_react_useContext.60412475.js.map
