{"version":3,"file":"030_react_useRef.26735e13.js","sources":["../../../../../../src/lib/mocks/react/030_react_useRef.ts"],"sourcesContent":["import { QuestionTypes } from '../utils';\n\nimport type { ExerciseTemplate } from '$lib/utils/types';\n\nconst template: ExerciseTemplate = {\n  title: 'React useRef Hook Quiz',\n  description: 'Test your knowledge about the React useRef hook.',\n  questionnaire: {\n    questions: [\n      {\n        title: 'What is the primary use case for the useRef hook in React?',\n        name: 'q1',\n        points: 1,\n        order: 0,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'To manage component state', is_correct: false },\n          { label: 'To create functional components', is_correct: false },\n          { label: 'To access and interact with DOM elements', is_correct: true }\n        ]\n      },\n      {\n        title: 'How do you import the useRef hook in a React component?',\n        name: 'q2',\n        points: 1,\n        order: 1,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'import useRef from \"react\";', is_correct: false },\n          { label: 'import { useRef } from \"react\";', is_correct: true },\n          { label: 'import React, { useRef } from \"react\";', is_correct: false }\n        ]\n      },\n      {\n        title: 'What is the return value of the useRef hook?',\n        name: 'q3',\n        points: 1,\n        order: 2,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'The current component state', is_correct: false },\n          { label: 'A ref object', is_correct: true },\n          { label: 'The component instance', is_correct: false }\n        ]\n      },\n      {\n        title: 'How do you create a ref using the useRef hook?',\n        name: 'q4',\n        points: 1,\n        order: 3,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'const ref = useRef();', is_correct: true },\n          { label: 'const ref = useRef(null);', is_correct: true },\n          { label: 'const ref = useRef(undefined);', is_correct: false }\n        ]\n      },\n      {\n        title: 'What is a common use case for refs in React?',\n        name: 'q5',\n        points: 1,\n        order: 4,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'Accessing and interacting with DOM elements', is_correct: true },\n          { label: 'Managing component state', is_correct: false },\n          { label: 'Creating custom hooks', is_correct: false }\n        ]\n      },\n      {\n        title: 'How can you access the current value of a ref?',\n        name: 'q6',\n        points: 1,\n        order: 5,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'ref.current', is_correct: true },\n          { label: 'ref.value', is_correct: false },\n          { label: 'ref.get()', is_correct: false }\n        ]\n      },\n      {\n        title: 'What happens when you update the current value of a ref?',\n        name: 'q7',\n        points: 1,\n        order: 6,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'The component re-renders', is_correct: false },\n          { label: 'The DOM is updated immediately', is_correct: false },\n          { label: 'The value is updated without re-rendering', is_correct: true }\n        ]\n      },\n      {\n        title: 'Can you use the useRef hook to create multiple refs in a single component?',\n        name: 'q8',\n        points: 1,\n        order: 7,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'No, it only supports a single ref per component', is_correct: false },\n          { label: 'Yes, you can create as many refs as needed', is_correct: true },\n          { label: 'Only if you wrap them in an array', is_correct: false }\n        ]\n      },\n      {\n        title: 'What is a ref object typically used for in React?',\n        name: 'q9',\n        points: 1,\n        order: 8,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'Managing component state', is_correct: false },\n          { label: 'Accessing and interacting with DOM elements', is_correct: true },\n          { label: 'Defining PropTypes', is_correct: false }\n        ]\n      },\n      {\n        title: 'Is it recommended to use refs for managing component state in React?',\n        name: 'q10',\n        points: 1,\n        order: 9,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'Yes, it is the preferred method', is_correct: false },\n          { label: 'No, it is not recommended for managing state', is_correct: true },\n          { label: 'It depends on the specific use case', is_correct: false }\n        ]\n      }\n    ]\n  }\n};\n\nexport default template;\n"],"names":["template","QuestionTypes"],"mappings":"wXAIA,MAAAA,EAAA,CAAA,MAAA,yBACA,YAAA,mDACA,cAAA,CACA,UAAA,CACA,CACA,MAAA,6DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAC,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,4BAAA,WAAA,EAAA,EACA,CAAA,MAAA,kCAAA,WAAA,EAAA,EACA,CAAA,MAAA,2CAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,0DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,8BAAA,WAAA,EAAA,EACA,CAAA,MAAA,kCAAA,WAAA,EAAA,EACA,CAAA,MAAA,yCAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,+CACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,8BAAA,WAAA,EAAA,EACA,CAAA,MAAA,eAAA,WAAA,EAAA,EACA,CAAA,MAAA,yBAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,iDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,wBAAA,WAAA,EAAA,EACA,CAAA,MAAA,4BAAA,WAAA,EAAA,EACA,CAAA,MAAA,iCAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,+CACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,8CAAA,WAAA,EAAA,EACA,CAAA,MAAA,2BAAA,WAAA,EAAA,EACA,CAAA,MAAA,wBAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,iDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,cAAA,WAAA,EAAA,EACA,CAAA,MAAA,YAAA,WAAA,EAAA,EACA,CAAA,MAAA,YAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,2DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,2BAAA,WAAA,EAAA,EACA,CAAA,MAAA,iCAAA,WAAA,EAAA,EACA,CAAA,MAAA,4CAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,6EACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,kDAAA,WAAA,EAAA,EACA,CAAA,MAAA,6CAAA,WAAA,EAAA,EACA,CAAA,MAAA,oCAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,oDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,2BAAA,WAAA,EAAA,EACA,CAAA,MAAA,8CAAA,WAAA,EAAA,EACA,CAAA,MAAA,qBAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,uEACA,KAAA,MACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,kCAAA,WAAA,EAAA,EACA,CAAA,MAAA,+CAAA,WAAA,EAAA,EACA,CAAA,MAAA,sCAAA,WAAA,EAAA,CACA,CACA,CACA,CACA,CAEA"}