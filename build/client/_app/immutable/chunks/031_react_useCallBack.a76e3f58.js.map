{"version":3,"file":"031_react_useCallBack.a76e3f58.js","sources":["../../../../../../src/lib/mocks/react/031_react_useCallBack.ts"],"sourcesContent":["import { QuestionTypes } from '../utils';\n\nimport type { ExerciseTemplate } from '$lib/utils/types';\n\nconst template: ExerciseTemplate = {\n  title: 'React useCallback Hook Quiz',\n  description: 'Test your knowledge about the React useCallback hook.',\n  questionnaire: {\n    questions: [\n      {\n        title: 'What is the primary purpose of the useCallback hook in React?',\n        name: 'q1',\n        points: 1,\n        order: 0,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'Managing component state', is_correct: false },\n          { label: 'Optimizing performance by memoizing functions', is_correct: true },\n          { label: 'Creating functional components', is_correct: false }\n        ]\n      },\n      {\n        title: 'How do you import the useCallback hook in a React component?',\n        name: 'q2',\n        points: 1,\n        order: 1,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'import { useCallback } from \"react\";', is_correct: true },\n          { label: 'import React, { useCallback } from \"react\";', is_correct: false },\n          { label: 'import useCallback from \"react\";', is_correct: false }\n        ]\n      },\n      {\n        title: 'What is memoization in the context of the useCallback hook?',\n        name: 'q3',\n        points: 1,\n        order: 2,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'It is a technique to optimize component rendering', is_correct: false },\n          {\n            label: 'It is a process of storing and reusing the result of a function call',\n            is_correct: true\n          },\n          { label: 'It is a way to manage component state', is_correct: false }\n        ]\n      },\n      {\n        title: 'When should you use the useCallback hook?',\n        name: 'q4',\n        points: 1,\n        order: 3,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'Only when creating class components', is_correct: false },\n          {\n            label: 'When you need to memoize a function to prevent unnecessary re-renders',\n            is_correct: true\n          },\n          { label: 'When you want to manage component state', is_correct: false }\n        ]\n      },\n      {\n        title:\n          'What is the second argument passed to the useCallback function, and why is it important?',\n        name: 'q5',\n        points: 1,\n        order: 4,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label:\n              'An array of dependencies; it specifies when the memoized function should recompute',\n            is_correct: true\n          },\n          {\n            label: 'A callback function; it runs after the memoized function is called',\n            is_correct: false\n          },\n          {\n            label: 'A configuration object; it determines the memoization strategy',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'In which scenarios can the useCallback hook help improve performance?',\n        name: 'q6',\n        points: 1,\n        order: 5,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          { label: 'Optimizing functions passed as props to child components', is_correct: true },\n          { label: 'Reducing memory usage in class components', is_correct: false },\n          { label: 'Preventing infinite loops in render', is_correct: false },\n          { label: 'Enhancing the speed of network requests', is_correct: false }\n        ]\n      },\n      {\n        title: 'What is the primary difference between the useMemo and useCallback hooks?',\n        name: 'q7',\n        points: 1,\n        order: 6,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'useMemo memoizes values, while useCallback memoizes functions',\n            is_correct: true\n          },\n          {\n            label:\n              'useMemo is used for creating reusable components, while useCallback is for state management',\n            is_correct: false\n          },\n          {\n            label: 'There is no difference between them; they are interchangeable',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'When should you avoid using the useCallback hook?',\n        name: 'q8',\n        points: 1,\n        order: 7,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          { label: 'When you want to re-render components frequently', is_correct: true },\n          { label: 'When you have functions with no dependencies', is_correct: true },\n          { label: 'When you are working on a small-scale project', is_correct: false },\n          { label: 'When you need to optimize the rendering of large lists', is_correct: true }\n        ]\n      },\n      {\n        title: 'What is the purpose of memoization in React?',\n        name: 'q9',\n        points: 1,\n        order: 8,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'To cache and reuse the results of expensive calculations', is_correct: false },\n          { label: 'To eliminate the need for state management in components', is_correct: false },\n          {\n            label: 'To optimize performance by preventing unnecessary re-renders',\n            is_correct: true\n          }\n        ]\n      },\n      {\n        title: 'Which React hook can be used to memoize a function and prevent re-renders?',\n        name: 'q10',\n        points: 1,\n        order: 9,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'useCallback', is_correct: true },\n          { label: 'useEffect', is_correct: false },\n          { label: 'useState', is_correct: false }\n        ]\n      }\n    ]\n  }\n};\n\nexport default template;\n"],"names":["template","QuestionTypes"],"mappings":"wXAIA,MAAAA,EAAA,CAAA,MAAA,8BACA,YAAA,wDACA,cAAA,CACA,UAAA,CACA,CACA,MAAA,gEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAC,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,2BAAA,WAAA,EAAA,EACA,CAAA,MAAA,gDAAA,WAAA,EAAA,EACA,CAAA,MAAA,iCAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,+DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,uCAAA,WAAA,EAAA,EACA,CAAA,MAAA,8CAAA,WAAA,EAAA,EACA,CAAA,MAAA,mCAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,8DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,oDAAA,WAAA,EAAA,EACA,CACA,MAAA,uEACA,WAAA,EACA,EACA,CAAA,MAAA,wCAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,4CACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,sCAAA,WAAA,EAAA,EACA,CACA,MAAA,wEACA,WAAA,EACA,EACA,CAAA,MAAA,0CAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,2FAEA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,qFAEA,WAAA,EACA,EACA,CACA,MAAA,qEACA,WAAA,EACA,EACA,CACA,MAAA,iEACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,wEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,2DAAA,WAAA,EAAA,EACA,CAAA,MAAA,4CAAA,WAAA,EAAA,EACA,CAAA,MAAA,sCAAA,WAAA,EAAA,EACA,CAAA,MAAA,0CAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,4EACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,gEACA,WAAA,EACA,EACA,CACA,MAAA,8FAEA,WAAA,EACA,EACA,CACA,MAAA,gEACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,oDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,mDAAA,WAAA,EAAA,EACA,CAAA,MAAA,+CAAA,WAAA,EAAA,EACA,CAAA,MAAA,gDAAA,WAAA,EAAA,EACA,CAAA,MAAA,yDAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,+CACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,2DAAA,WAAA,EAAA,EACA,CAAA,MAAA,2DAAA,WAAA,EAAA,EACA,CACA,MAAA,+DACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,6EACA,KAAA,MACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,cAAA,WAAA,EAAA,EACA,CAAA,MAAA,YAAA,WAAA,EAAA,EACA,CAAA,MAAA,WAAA,WAAA,EAAA,CACA,CACA,CACA,CACA,CAEA"}