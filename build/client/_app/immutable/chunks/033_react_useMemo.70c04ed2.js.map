{"version":3,"file":"033_react_useMemo.70c04ed2.js","sources":["../../../../../../src/lib/mocks/react/033_react_useMemo.ts"],"sourcesContent":["import { QuestionTypes } from '../utils';\n\nimport type { ExerciseTemplate } from '$lib/utils/types';\n\nconst template: ExerciseTemplate = {\n  title: 'React useMemo Hook Quiz',\n  description: 'Test your knowledge about the React useMemo hook.',\n  questionnaire: {\n    questions: [\n      {\n        title: 'What is the primary purpose of the useMemo hook in React?',\n        name: 'q1',\n        points: 1,\n        order: 0,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'Managing component state', is_correct: false },\n          { label: 'Optimizing performance by memoizing values', is_correct: true },\n          { label: 'Creating functional components', is_correct: false }\n        ]\n      },\n      {\n        title: 'How do you import the useMemo hook in a React component?',\n        name: 'q2',\n        points: 1,\n        order: 1,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'import { useMemo } from \"react\";', is_correct: true },\n          { label: 'import React, { useMemo } from \"react\";', is_correct: false },\n          { label: 'import useMemo from \"react\";', is_correct: false }\n        ]\n      },\n      {\n        title: 'What is memoization in the context of the useMemo hook?',\n        name: 'q3',\n        points: 1,\n        order: 2,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'It is a technique to optimize component rendering', is_correct: false },\n          {\n            label: 'It is a process of storing and reusing the result of a function call',\n            is_correct: true\n          },\n          { label: 'It is a way to manage component state', is_correct: false }\n        ]\n      },\n      {\n        title: 'When should you use the useMemo hook?',\n        name: 'q4',\n        points: 1,\n        order: 3,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'Only when creating class components', is_correct: false },\n          {\n            label: 'When you need to memoize a value to prevent unnecessary re-computation',\n            is_correct: true\n          },\n          { label: 'When you want to manage component state', is_correct: false }\n        ]\n      },\n      {\n        title:\n          'What is the second argument passed to the useMemo function, and why is it important?',\n        name: 'q5',\n        points: 1,\n        order: 4,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label:\n              'An array of dependencies; it specifies when the memoized value should recompute',\n            is_correct: true\n          },\n          {\n            label: 'A callback function; it runs after the memoized value is computed',\n            is_correct: false\n          },\n          {\n            label: 'A configuration object; it determines the memoization strategy',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'In which scenarios can the useMemo hook help improve performance?',\n        name: 'q6',\n        points: 1,\n        order: 5,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          { label: 'Optimizing expensive calculations and computations', is_correct: true },\n          { label: 'Reducing the number of re-renders in React components', is_correct: true },\n          { label: 'Enhancing the speed of network requests', is_correct: false },\n          { label: 'Memoizing functions passed as props to child components', is_correct: false }\n        ]\n      },\n      {\n        title: 'What is the primary difference between the useMemo and useCallback hooks?',\n        name: 'q7',\n        points: 1,\n        order: 6,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          {\n            label: 'useMemo memoizes values, while useCallback memoizes functions',\n            is_correct: true\n          },\n          {\n            label:\n              'useMemo is used for creating reusable components, while useCallback is for state management',\n            is_correct: false\n          },\n          {\n            label: 'There is no difference between them; they are interchangeable',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'When should you avoid using the useMemo hook?',\n        name: 'q8',\n        points: 1,\n        order: 7,\n        question_type: QuestionTypes[1], // CHECKBOX\n        options: [\n          { label: 'When you want to re-render components frequently', is_correct: true },\n          { label: 'When you have values with no dependencies', is_correct: true },\n          { label: 'When you need to optimize the rendering of large lists', is_correct: true },\n          { label: 'When you are working on a small-scale project', is_correct: false }\n        ]\n      },\n      {\n        title: 'What is the purpose of memoization in React?',\n        name: 'q9',\n        points: 1,\n        order: 8,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'To cache and reuse the results of expensive calculations', is_correct: true },\n          { label: 'To eliminate the need for state management in components', is_correct: false },\n          {\n            label: 'To optimize performance by preventing unnecessary re-renders',\n            is_correct: false\n          }\n        ]\n      },\n      {\n        title: 'Which React hook can be used to memoize a value and prevent re-computation?',\n        name: 'q10',\n        points: 1,\n        order: 9,\n        question_type: QuestionTypes[0], // RADIO\n        options: [\n          { label: 'useMemo', is_correct: true },\n          { label: 'useEffect', is_correct: false },\n          { label: 'useState', is_correct: false }\n        ]\n      }\n    ]\n  }\n};\n\nexport default template;\n"],"names":["template","QuestionTypes"],"mappings":"wXAIA,MAAAA,EAAA,CAAA,MAAA,0BACA,YAAA,oDACA,cAAA,CACA,UAAA,CACA,CACA,MAAA,4DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAC,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,2BAAA,WAAA,EAAA,EACA,CAAA,MAAA,6CAAA,WAAA,EAAA,EACA,CAAA,MAAA,iCAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,2DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,mCAAA,WAAA,EAAA,EACA,CAAA,MAAA,0CAAA,WAAA,EAAA,EACA,CAAA,MAAA,+BAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,0DACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,oDAAA,WAAA,EAAA,EACA,CACA,MAAA,uEACA,WAAA,EACA,EACA,CAAA,MAAA,wCAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,wCACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,sCAAA,WAAA,EAAA,EACA,CACA,MAAA,yEACA,WAAA,EACA,EACA,CAAA,MAAA,0CAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,uFAEA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,kFAEA,WAAA,EACA,EACA,CACA,MAAA,oEACA,WAAA,EACA,EACA,CACA,MAAA,iEACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,oEACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,qDAAA,WAAA,EAAA,EACA,CAAA,MAAA,wDAAA,WAAA,EAAA,EACA,CAAA,MAAA,0CAAA,WAAA,EAAA,EACA,CAAA,MAAA,0DAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,4EACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CACA,MAAA,gEACA,WAAA,EACA,EACA,CACA,MAAA,8FAEA,WAAA,EACA,EACA,CACA,MAAA,gEACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,gDACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,mDAAA,WAAA,EAAA,EACA,CAAA,MAAA,4CAAA,WAAA,EAAA,EACA,CAAA,MAAA,yDAAA,WAAA,EAAA,EACA,CAAA,MAAA,gDAAA,WAAA,EAAA,CACA,CACA,EACA,CACA,MAAA,+CACA,KAAA,KACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,2DAAA,WAAA,EAAA,EACA,CAAA,MAAA,2DAAA,WAAA,EAAA,EACA,CACA,MAAA,+DACA,WAAA,EACA,CACA,CACA,EACA,CACA,MAAA,8EACA,KAAA,MACA,OAAA,EACA,MAAA,EACA,cAAAA,EAAA,CAAA,EACA,QAAA,CACA,CAAA,MAAA,UAAA,WAAA,EAAA,EACA,CAAA,MAAA,YAAA,WAAA,EAAA,EACA,CAAA,MAAA,WAAA,WAAA,EAAA,CACA,CACA,CACA,CACA,CAEA"}