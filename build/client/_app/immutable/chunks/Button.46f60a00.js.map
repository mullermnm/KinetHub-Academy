{"version":3,"file":"Button.46f60a00.js","sources":["../../../../../../../../node_modules/.pnpm/carbon-components-svelte@0.79.0/node_modules/carbon-components-svelte/src/Button/ButtonSkeleton.svelte","../../../../../../../../node_modules/.pnpm/carbon-components-svelte@0.79.0/node_modules/carbon-components-svelte/src/Button/Button.svelte"],"sourcesContent":["<script>\n  /**\n   * Set the `href` to use an anchor link\n   * @type {string}\n   */\n  export let href = undefined;\n\n  /**\n   * Specify the size of button skeleton\n   * @type {\"default\" | \"field\" | \"small\" | \"lg\" | \"xl\"}\n   */\n  export let size = \"default\";\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n{#if href}\n  <a\n    href=\"{href}\"\n    rel=\"{$$restProps.target === '_blank' ? 'noopener noreferrer' : undefined}\"\n    role=\"button\"\n    class:bx--skeleton=\"{true}\"\n    class:bx--btn=\"{true}\"\n    class:bx--btn--field=\"{size === 'field'}\"\n    class:bx--btn--sm=\"{size === 'small'}\"\n    class:bx--btn--lg=\"{size === 'lg'}\"\n    class:bx--btn--xl=\"{size === 'xl'}\"\n    {...$$restProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n  >\n    {\"\"}\n  </a>\n{:else}\n  <!-- svelte-ignore a11y-no-static-element-interactions -->\n  <div\n    class:bx--skeleton=\"{true}\"\n    class:bx--btn=\"{true}\"\n    class:bx--btn--field=\"{size === 'field'}\"\n    class:bx--btn--sm=\"{size === 'small'}\"\n    class:bx--btn--lg=\"{size === 'lg'}\"\n    class:bx--btn--xl=\"{size === 'xl'}\"\n    {...$$restProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n  ></div>\n{/if}\n","<script>\n  /**\n   * @extends {\"./ButtonSkeleton.svelte\"} ButtonSkeletonProps\n   * @restProps {button | a | div}\n   * @slot {{ props: { role: \"button\"; type?: string; tabindex: any; disabled: boolean; href?: string; class: string; [key: string]: any; } }}\n   */\n\n  /**\n   * Specify the kind of button\n   * @type {\"primary\" | \"secondary\" | \"tertiary\" | \"ghost\" | \"danger\" | \"danger-tertiary\" | \"danger-ghost\"}\n   */\n  export let kind = \"primary\";\n\n  /**\n   * Specify the size of button\n   * @type {\"default\" | \"field\" | \"small\" | \"lg\" | \"xl\"}\n   */\n  export let size = \"default\";\n\n  /** Set to `true` to use Carbon's expressive typesetting */\n  export let expressive = false;\n\n  /**\n   * Set to `true` to enable the selected state for an icon-only, ghost button\n   */\n  export let isSelected = false;\n\n  /**\n   * Specify the icon to render\n   * @type {typeof import(\"svelte\").SvelteComponent<any>}\n   */\n  export let icon = undefined;\n\n  /**\n   * Specify the ARIA label for the button icon\n   * @type {string}\n   */\n  export let iconDescription = undefined;\n\n  /**\n   * Set the alignment of the tooltip relative to the icon.\n   * Only applies to icon-only buttons\n   * @type {\"start\" | \"center\" | \"end\"}\n   */\n  export let tooltipAlignment = \"center\";\n\n  /**\n   * Set the position of the tooltip relative to the icon\n   * @type {\"top\" | \"right\" | \"bottom\" | \"left\"}\n   */\n  export let tooltipPosition = \"bottom\";\n\n  /**\n   * Set to `true` to render a custom HTML element\n   * Props are destructured as `props` in the default slot (e.g., <Button let:props><div {...props}>...</div></Button>)\n   */\n  export let as = false;\n\n  /** Set to `true` to display the skeleton state */\n  export let skeleton = false;\n\n  /** Set to `true` to disable the button */\n  export let disabled = false;\n\n  /**\n   * Set the `href` to use an anchor link\n   * @type {string}\n   */\n  export let href = undefined;\n\n  /** Specify the tabindex */\n  export let tabindex = \"0\";\n\n  /** Specify the `type` attribute for the button element */\n  export let type = \"button\";\n\n  /** Obtain a reference to the HTML element */\n  export let ref = null;\n\n  import { getContext } from \"svelte\";\n  import ButtonSkeleton from \"./ButtonSkeleton.svelte\";\n\n  const ctx = getContext(\"ComposedModal\");\n\n  $: if (ctx && ref) {\n    ctx.declareRef(ref);\n  }\n  $: hasIconOnly = icon && !$$slots.default;\n  $: buttonProps = {\n    type: href && !disabled ? undefined : type,\n    tabindex,\n    disabled: disabled === true ? true : undefined,\n    href,\n    \"aria-pressed\":\n      hasIconOnly && kind === \"ghost\" && !href ? isSelected : undefined,\n    ...$$restProps,\n    class: [\n      \"bx--btn\",\n      expressive && \"bx--btn--expressive\",\n      ((size === \"small\" && !expressive) ||\n        (size === \"sm\" && !expressive) ||\n        (size === \"small\" && !expressive)) &&\n        \"bx--btn--sm\",\n      (size === \"field\" && !expressive) ||\n        (size === \"md\" && !expressive && \"bx--btn--md\"),\n      size === \"field\" && \"bx--btn--field\",\n      size === \"small\" && \"bx--btn--sm\",\n      size === \"lg\" && \"bx--btn--lg\",\n      size === \"xl\" && \"bx--btn--xl\",\n      kind && `bx--btn--${kind}`,\n      disabled && \"bx--btn--disabled\",\n      hasIconOnly && \"bx--btn--icon-only\",\n      hasIconOnly && \"bx--tooltip__trigger\",\n      hasIconOnly && \"bx--tooltip--a11y\",\n      hasIconOnly &&\n        tooltipPosition &&\n        `bx--btn--icon-only--${tooltipPosition}`,\n      hasIconOnly &&\n        tooltipAlignment &&\n        `bx--tooltip--align-${tooltipAlignment}`,\n      hasIconOnly && isSelected && kind === \"ghost\" && \"bx--btn--selected\",\n      $$restProps.class,\n    ]\n      .filter(Boolean)\n      .join(\" \"),\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n{#if skeleton}\n  <ButtonSkeleton\n    href=\"{href}\"\n    size=\"{size}\"\n    {...$$restProps}\n    style=\"{hasIconOnly && 'width: 3rem;'}\"\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n  />\n{:else if as}\n  <slot props=\"{buttonProps}\" />\n{:else if href && !disabled}\n  <!-- svelte-ignore a11y-missing-attribute -->\n  <!-- svelte-ignore a11y-no-static-element-interactions -->\n  <a\n    bind:this=\"{ref}\"\n    {...buttonProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n  >\n    {#if hasIconOnly}\n      <span class:bx--assistive-text=\"{true}\">{iconDescription}</span>\n    {/if}\n    <slot /><svelte:component\n      this=\"{icon}\"\n      aria-hidden=\"true\"\n      class=\"bx--btn__icon\"\n      aria-label=\"{iconDescription}\"\n    />\n  </a>\n{:else}\n  <button\n    bind:this=\"{ref}\"\n    {...buttonProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n  >\n    {#if hasIconOnly}\n      <span class:bx--assistive-text=\"{true}\">{iconDescription}</span>\n    {/if}\n    <slot /><svelte:component\n      this=\"{icon}\"\n      aria-hidden=\"true\"\n      class=\"bx--btn__icon\"\n      style=\"{hasIconOnly ? 'margin-left: 0' : undefined}\"\n      aria-label=\"{iconDescription}\"\n    />\n  </button>\n{/if}\n"],"names":["toggle_class","div","ctx","a","href","$$props","size","kind","expressive","isSelected","icon","iconDescription","tooltipAlignment","tooltipPosition","as","skeleton","disabled","tabindex","type","ref","$$invalidate","hasIconOnly","$$slots","buttonProps","$$restProps"],"mappings":"m6BAuC2BA,EAAAC,EAAA,iBAAAC,EAAA,CAAA,IAAA,OAAA,EACHF,EAAAC,EAAA,cAAAC,EAAA,CAAA,IAAA,OAAA,EACAF,EAAAC,EAAA,cAAAC,EAAA,CAAA,IAAA,IAAA,EACAF,EAAAC,EAAA,cAAAC,EAAA,CAAA,IAAA,IAAA,iMAHGF,EAAAC,EAAA,iBAAAC,EAAA,CAAA,IAAA,OAAA,EACHF,EAAAC,EAAA,cAAAC,EAAA,CAAA,IAAA,OAAA,EACAF,EAAAC,EAAA,cAAAC,EAAA,CAAA,IAAA,IAAA,EACAF,EAAAC,EAAA,cAAAC,EAAA,CAAA,IAAA,IAAA,yXApBGF,EAAAG,EAAA,iBAAAD,EAAA,CAAA,IAAA,OAAA,EACHF,EAAAG,EAAA,cAAAD,EAAA,CAAA,IAAA,OAAA,EACAF,EAAAG,EAAA,cAAAD,EAAA,CAAA,IAAA,IAAA,EACAF,EAAAG,EAAA,cAAAD,EAAA,CAAA,IAAA,IAAA,kTAHGF,EAAAG,EAAA,iBAAAD,EAAA,CAAA,IAAA,OAAA,EACHF,EAAAG,EAAA,cAAAD,EAAA,CAAA,IAAA,OAAA,EACAF,EAAAG,EAAA,cAAAD,EAAA,CAAA,IAAA,IAAA,EACAF,EAAAG,EAAA,cAAAD,EAAA,CAAA,IAAA,IAAA,oVApBX,CAAA,KAAAE,EAAA,MAAA,EAAAC,EAMA,CAAA,KAAAC,EAAA,SAAA,EAAAD,0vGC2HD,MAAAH,EAAA,CAAA,GAAA,6WAAA,MAAAA,EAAA,CAAA,GAAA,8pBAQFA,EAAA,CAAA,GAAA,CAAAA,EAAA,CAAA,EAAA,ojBAnIG,GAAA,CAAA,KAAAK,EAAA,SAAA,EAAAF,EAMA,CAAA,KAAAC,EAAA,SAAA,EAAAD,EAGA,CAAA,WAAAG,EAAA,EAAA,EAAAH,EAKA,CAAA,WAAAI,EAAA,EAAA,EAAAJ,EAMA,CAAA,KAAAK,EAAA,MAAA,EAAAL,EAMA,CAAA,gBAAAM,EAAA,MAAA,EAAAN,EAOA,CAAA,iBAAAO,EAAA,QAAA,EAAAP,EAMA,CAAA,gBAAAQ,EAAA,QAAA,EAAAR,EAMA,CAAA,GAAAS,GAAA,EAAA,EAAAT,EAGA,CAAA,SAAAU,GAAA,EAAA,EAAAV,EAGA,CAAA,SAAAW,EAAA,EAAA,EAAAX,EAMA,CAAA,KAAAD,EAAA,MAAA,EAAAC,EAGA,CAAA,SAAAY,EAAA,GAAA,EAAAZ,EAGA,CAAA,KAAAa,EAAA,QAAA,EAAAb,EAGA,CAAA,IAAAc,EAAA,IAAA,EAAAd,8qCAUXe,EAAA,EAAAC,EAAAX,GAAA,CAAAY,EAAA,OAAA,EACAF,EAAA,EAAAG,EAAA,CACE,KAAAnB,GAAA,CAAAY,EAAA,OAAAE,aAEA,SAAAF,IAAA,GAAA,GAAA,cAEA,eAAAK,GAAAd,IAAA,SAAA,CAAAH,iCAKEI,GAAA,uBACEF,IAAA,SAAA,CAAAE,GAAAF,IAAA,MAAA,CAAAE,GAAAF,IAAA,SAAA,CAAAE,IAAA,oKAUFD,GAAA,YAAAA,CAAA,GACAS,GAAA,oBACAK,GAAA,qBACAA,GAAA,uBACAA,GAAA,qFAOAA,GAAAZ,GAAAF,IAAA,SAAA,oBACAiB,EAAA,KAEC,EAAA,OAAA,OAAA,EAAA,KAAA,GAAA","x_google_ignoreList":[0,1]}