{"version":3,"file":"Checkbox.daccd4f6.js","sources":["../../../../../../../../node_modules/.pnpm/carbon-components-svelte@0.79.0/node_modules/carbon-components-svelte/src/Checkbox/Checkbox.svelte"],"sourcesContent":["<script>\n  /**\n   * @restProps {div}\n   * @event {boolean} check\n   */\n\n  /**\n   * Specify the value of the checkbox\n   * @type {any}\n   */\n  export let value = \"\";\n\n  /** Specify whether the checkbox is checked */\n  export let checked = false;\n\n  /**\n   * Specify the bound group\n   * @type {ReadonlyArray<any>}\n   */\n  export let group = undefined;\n\n  /** Specify whether the checkbox is indeterminate */\n  export let indeterminate = false;\n\n  /** Set to `true` to display the skeleton state */\n  export let skeleton = false;\n\n  /** Set to `true` to mark the field as required */\n  export let required = false;\n\n  /** Set to `true` for the checkbox to be read-only */\n  export let readonly = false;\n\n  /** Set to `true` to disable the checkbox */\n  export let disabled = false;\n\n  /** Specify the label text */\n  export let labelText = \"\";\n\n  /** Set to `true` to visually hide the label text */\n  export let hideLabel = false;\n\n  /** Set a name for the input element */\n  export let name = \"\";\n\n  /**\n   * Specify the title attribute for the label element\n   * @type {string}\n   */\n  export let title = undefined;\n\n  /** Set an id for the input label */\n  export let id = \"ccs-\" + Math.random().toString(36);\n\n  /** Obtain a reference to the input HTML element */\n  export let ref = null;\n\n  import { createEventDispatcher } from \"svelte\";\n  import CheckboxSkeleton from \"./CheckboxSkeleton.svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  $: useGroup = Array.isArray(group);\n  $: checked = useGroup ? group.includes(value) : checked;\n  $: dispatch(\"check\", checked);\n\n  let refLabel = null;\n\n  $: isTruncated = refLabel?.offsetWidth < refLabel?.scrollWidth;\n  $: title = !title && isTruncated ? refLabel?.innerText : title;\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n{#if skeleton}\n  <CheckboxSkeleton\n    {...$$restProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n  />\n{:else}\n  <!-- svelte-ignore a11y-no-static-element-interactions -->\n  <div\n    class:bx--form-item=\"{true}\"\n    class:bx--checkbox-wrapper=\"{true}\"\n    {...$$restProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n  >\n    <input\n      bind:this=\"{ref}\"\n      type=\"checkbox\"\n      value=\"{value}\"\n      checked=\"{checked}\"\n      disabled=\"{disabled}\"\n      id=\"{id}\"\n      indeterminate=\"{indeterminate}\"\n      name=\"{name}\"\n      required=\"{required}\"\n      readonly=\"{readonly}\"\n      class:bx--checkbox=\"{true}\"\n      on:change=\"{() => {\n        if (useGroup) {\n          group = group.includes(value)\n            ? group.filter((_value) => _value !== value)\n            : [...group, value];\n        } else {\n          checked = !checked;\n        }\n      }}\"\n      on:change\n      on:blur\n    />\n    <label for=\"{id}\" title=\"{title}\" class:bx--checkbox-label=\"{true}\">\n      <span\n        bind:this=\"{refLabel}\"\n        class:bx--checkbox-label-text=\"{true}\"\n        class:bx--visually-hidden=\"{hideLabel}\"\n      >\n        <slot name=\"labelText\">\n          {labelText}\n        </slot>\n      </span>\n    </label>\n  </div>\n{/if}\n"],"names":["value","$$props","checked","group","indeterminate","skeleton","required","readonly","disabled","labelText","hideLabel","name","title","ref","dispatch","createEventDispatcher","refLabel","$$invalidate","_value","useGroup"],"mappings":"s/IAUa,CAAA,MAAAA,EAAA,EAAA,EAAAC,EAGA,CAAA,QAAAC,EAAA,EAAA,EAAAD,EAMA,CAAA,MAAAE,EAAA,MAAA,EAAAF,EAGA,CAAA,cAAAG,EAAA,EAAA,EAAAH,EAGA,CAAA,SAAAI,EAAA,EAAA,EAAAJ,EAGA,CAAA,SAAAK,EAAA,EAAA,EAAAL,EAGA,CAAA,SAAAM,EAAA,EAAA,EAAAN,EAGA,CAAA,SAAAO,EAAA,EAAA,EAAAP,EAGA,CAAA,UAAAQ,EAAA,EAAA,EAAAR,EAGA,CAAA,UAAAS,EAAA,EAAA,EAAAT,EAGA,CAAA,KAAAU,EAAA,EAAA,EAAAV,EAMA,CAAA,MAAAW,EAAA,MAAA,EAAAX,6CAMA,CAAA,IAAAY,EAAA,IAAA,EAAAZ,EAKL,MAAAa,EAAAC,GAAA,EAMF,IAAAC,EAAA,yYAwCIC,EAAA,EAAAd,EAAAA,EAAA,SAAAH,CAAA,EACIG,EAAA,OAAAe,GAAAA,IAAAlB,CAAA,EACI,CAAA,GAAAG,EAAAH,CAAA,CAAA,EAERiB,EAAA,EAAAf,EAAA,CAAAA,CAAA,+mBAhDRe,EAAA,GAAAE,EAAA,MAAA,QAAAhB,CAAA,CAAA,iEAEAW,EAAA,QAAAZ,CAAA","x_google_ignoreList":[0]}