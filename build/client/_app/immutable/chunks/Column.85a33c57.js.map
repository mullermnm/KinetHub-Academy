{"version":3,"file":"Column.85a33c57.js","sources":["../../../../../../../../node_modules/.pnpm/carbon-components-svelte@0.79.0/node_modules/carbon-components-svelte/src/Grid/Grid.svelte","../../../../../../../../node_modules/.pnpm/carbon-components-svelte@0.79.0/node_modules/carbon-components-svelte/src/Grid/Row.svelte","../../../../../../../../node_modules/.pnpm/carbon-components-svelte@0.79.0/node_modules/carbon-components-svelte/src/Grid/Column.svelte"],"sourcesContent":["<script>\n  /**\n   * @restProps {div}\n   * @slot {{ props: { class: string; [key: string]: any; } }}\n   */\n\n  /**\n   * Set to `true` to render a custom HTML element\n   * Props are destructured as `props` in the default slot (e.g., <Grid let:props><header {...props}>...</header></Grid>)\n   */\n  export let as = false;\n\n  /** Set to `true` to use the condensed variant */\n  export let condensed = false;\n\n  /** Set to `true` to use the narrow variant */\n  export let narrow = false;\n\n  /** Set to `true` to use the fullWidth variant */\n  export let fullWidth = false;\n\n  /** Set to `true` to remove the gutter */\n  export let noGutter = false;\n\n  /** Set to `true` to remove the left gutter */\n  export let noGutterLeft = false;\n\n  /** Set to `true` to remove the right gutter */\n  export let noGutterRight = false;\n\n  /** Set to `true` to add top and bottom padding to all columns */\n  export let padding = false;\n\n  $: props = {\n    ...$$restProps,\n    class: [\n      $$restProps.class,\n      \"bx--grid\",\n      condensed && \"bx--grid--condensed\",\n      narrow && \"bx--grid--narrow\",\n      fullWidth && \"bx--grid--full-width\",\n      noGutter && \"bx--no-gutter\",\n      noGutterLeft && \"bx--no-gutter--left\",\n      noGutterRight && \"bx--no-gutter--right\",\n      padding && \"bx--row-padding\",\n    ]\n      .filter(Boolean)\n      .join(\" \"),\n  };\n</script>\n\n{#if as}\n  <slot props=\"{props}\" />\n{:else}\n  <div {...props}>\n    <slot />\n  </div>\n{/if}\n","<script>\n  /**\n   * @restProps {div}\n   * @slot {{ props: { class: string; [key: string]: any; } }}\n   */\n\n  /**\n   * Set to `true` to render a custom HTML element\n   * Props are destructured as `props` in the default slot (e.g., <Row let:props><section {...props}>...</section></Row>)\n   */\n  export let as = false;\n\n  /** Set to `true` to use the condensed variant */\n  export let condensed = false;\n\n  /** Set to `true` to use the narrow variant */\n  export let narrow = false;\n\n  /** Set to `true` to remove the gutter */\n  export let noGutter = false;\n\n  /** Set to `true` to remove the left gutter */\n  export let noGutterLeft = false;\n\n  /** Set to `true` to remove the right gutter */\n  export let noGutterRight = false;\n\n  /** Set to `true` to add top and bottom padding to all columns */\n  export let padding = false;\n\n  $: props = {\n    ...$$restProps,\n    class: [\n      $$restProps.class,\n      \"bx--row\",\n      condensed && \"bx--row--condensed\",\n      narrow && \"bx--row--narrow\",\n      noGutter && \"bx--no-gutter\",\n      noGutterLeft && \"bx--no-gutter--left\",\n      noGutterRight && \"bx--no-gutter--right\",\n      padding && \"bx--row-padding\",\n    ]\n      .filter(Boolean)\n      .join(\" \"),\n  };\n</script>\n\n{#if as}\n  <slot props=\"{props}\" />\n{:else}\n  <div {...props}>\n    <slot />\n  </div>\n{/if}\n","<script>\n  /**\n   * @typedef {boolean | number} ColumnSize\n   * @typedef {{span?: ColumnSize; offset: number;}} ColumnSizeDescriptor\n   * @typedef {ColumnSize | ColumnSizeDescriptor} ColumnBreakpoint\n   * @restProps {div}\n   * @slot {{props: { class: string; [key: string]: any; }}}\n   */\n\n  /**\n   * @slot {{ props?: { class: string; } }}\n   */\n\n  /**\n   * Set to `true` to render a custom HTML element\n   * Props are destructured as `props` in the default slot (e.g., <Column let:props><article {...props}>...</article></Column>)\n   */\n  export let as = false;\n\n  /** Set to `true` to remove the gutter */\n  export let noGutter = false;\n\n  /** Set to `true` to remove the left gutter */\n  export let noGutterLeft = false;\n\n  /** Set to `true` to remove the right gutter */\n  export let noGutterRight = false;\n\n  /** Set to `true` to add top and bottom padding to the column */\n  export let padding = false;\n\n  /**\n   * Specify the aspect ratio of the column\n   * @type {\"2x1\" | \"16x9\" | \"9x16\" | \"1x2\" | \"4x3\" | \"3x4\" | \"1x1\"}\n   */\n  export let aspectRatio = undefined;\n\n  /**\n   * Set the small breakpoint\n   * @type {ColumnBreakpoint}\n   */\n  export let sm = undefined;\n\n  /**\n   * Set the medium breakpoint\n   * @type {ColumnBreakpoint}\n   */\n  export let md = undefined;\n\n  /**\n   * Set the large breakpoint\n   * @type {ColumnBreakpoint}\n   */\n  export let lg = undefined;\n\n  /**\n   * Set the extra large breakpoint\n   * @type {ColumnBreakpoint}\n   */\n  export let xlg = undefined;\n\n  /**\n   * Set the maximum breakpoint\n   * @type {ColumnBreakpoint}\n   */\n  export let max = undefined;\n\n  const breakpoints = [\"sm\", \"md\", \"lg\", \"xlg\", \"max\"];\n\n  $: columnClass = [sm, md, lg, xlg, max]\n    .map((breakpoint, i) => {\n      const name = breakpoints[i];\n\n      if (breakpoint === true) {\n        return `bx--col-${name}`;\n      } else if (typeof breakpoint === \"number\") {\n        return `bx--col-${name}-${breakpoint}`;\n      } else if (typeof breakpoint === \"object\") {\n        let bp = [];\n\n        if (typeof breakpoint.span === \"number\") {\n          bp = [...bp, `bx--col-${name}-${breakpoint.span}`];\n        } else if (breakpoint.span === true) {\n          bp = [...bp, `bx--col-${name}`];\n        }\n\n        if (typeof breakpoint.offset === \"number\") {\n          bp = [...bp, `bx--offset-${name}-${breakpoint.offset}`];\n        }\n\n        return bp.join(\" \");\n      }\n    })\n    .filter(Boolean)\n    .join(\" \");\n  $: props = {\n    ...$$restProps,\n    class: [\n      $$restProps.class,\n      columnClass,\n      !columnClass && \"bx--col\",\n      noGutter && \"bx--no-gutter\",\n      noGutterLeft && \"bx--no-gutter--left\",\n      noGutterRight && \"bx--no-gutter--right\",\n      aspectRatio && `bx--aspect-ratio bx--aspect-ratio--${aspectRatio}`,\n      padding && \"bx--col-padding\",\n    ]\n      .filter(Boolean)\n      .join(\" \"),\n  };\n</script>\n\n{#if as}\n  <slot props=\"{props}\" />\n{:else}\n  <div {...props}>\n    <slot />\n  </div>\n{/if}\n"],"names":["as","$$props","condensed","narrow","fullWidth","noGutter","noGutterLeft","noGutterRight","padding","$$invalidate","props","$$restProps","aspectRatio","sm","md","lg","xlg","max","columnClass","breakpoint","i","name","bp"],"mappings":"+zDAUa,CAAA,GAAAA,EAAA,EAAA,EAAAC,EAGA,CAAA,UAAAC,EAAA,EAAA,EAAAD,EAGA,CAAA,OAAAE,EAAA,EAAA,EAAAF,EAGA,CAAA,UAAAG,EAAA,EAAA,EAAAH,EAGA,CAAA,SAAAI,EAAA,EAAA,EAAAJ,EAGA,CAAA,aAAAK,EAAA,EAAA,EAAAL,EAGA,CAAA,cAAAM,EAAA,EAAA,EAAAN,EAGA,CAAA,QAAAO,EAAA,EAAA,EAAAP,4XAEXQ,EAAA,EAAAC,EAAA,aAGIC,EAAA,iBAEAT,GAAA,sBACAC,GAAA,mBACAC,GAAA,uBACAC,GAAA,gBACAC,GAAA,sBACAC,GAAA,uBACAC,GAAA,iBAEC,EAAA,OAAA,OAAA,EAAA,KAAA,GAAA,07CCpCM,CAAA,GAAAR,EAAA,EAAA,EAAAC,EAGA,CAAA,UAAAC,EAAA,EAAA,EAAAD,EAGA,CAAA,OAAAE,EAAA,EAAA,EAAAF,EAGA,CAAA,SAAAI,EAAA,EAAA,EAAAJ,EAGA,CAAA,aAAAK,EAAA,EAAA,EAAAL,EAGA,CAAA,cAAAM,EAAA,EAAA,EAAAN,EAGA,CAAA,QAAAO,EAAA,EAAA,EAAAP,wVAEXQ,EAAA,EAAAC,EAAA,aAGIC,EAAA,gBAEAT,GAAA,qBACAC,GAAA,kBACAE,GAAA,gBACAC,GAAA,sBACAC,GAAA,uBACAC,GAAA,iBAEC,EAAA,OAAA,OAAA,EAAA,KAAA,GAAA,+8CCzBM,CAAA,GAAAR,EAAA,EAAA,EAAAC,EAGA,CAAA,SAAAI,EAAA,EAAA,EAAAJ,EAGA,CAAA,aAAAK,EAAA,EAAA,EAAAL,EAGA,CAAA,cAAAM,EAAA,EAAA,EAAAN,EAGA,CAAA,QAAAO,EAAA,EAAA,EAAAP,EAMA,CAAA,YAAAW,EAAA,MAAA,EAAAX,EAMA,CAAA,GAAAY,EAAA,MAAA,EAAAZ,EAMA,CAAA,GAAAa,EAAA,MAAA,EAAAb,EAMA,CAAA,GAAAc,EAAA,MAAA,EAAAd,EAMA,CAAA,IAAAe,EAAA,MAAA,EAAAf,EAMA,CAAA,IAAAgB,EAAA,MAAA,EAAAhB,yeAIXQ,EAAA,GAAAS,EAAA,CAAAL,EAAAC,EAAAC,EAAAC,EAAAC,CAAA,EAAA,IAAA,CAAAE,EAAAC,IAAA,cAIQ,GAAAD,IAAA,wBAEc,GAAA,OAAAA,GAAA,SACE,MAAA,WAAAE,CAAA,IAAAF,CAAA,GACF,GAAA,OAAAA,GAAA,SAAA,yCAIdG,EAAA,CAAA,GAAAA,EAAA,WAAAD,CAAA,IAAAF,EAAA,IAAA,EAAA,qEAMAG,EAAA,CAAA,GAAAA,EAAA,cAAAD,CAAA,IAAAF,EAAA,MAAA,EAAA,eAML,CAAA,EAAA,OAAA,OAAA,EAAA,KAAA,GAAA,CAAA,EAEHV,EAAA,EAAAC,EAAA,aAGIC,EAAA,QAEC,CAAAO,GAAA,UACDb,GAAA,gBACAC,GAAA,sBACAC,GAAA,uBACAK,GAAA,sCAAAA,CAAA,GACAJ,GAAA,iBAEC,EAAA,OAAA,OAAA,EAAA,KAAA,GAAA","x_google_ignoreList":[0,1,2]}