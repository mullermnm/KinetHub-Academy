{"version":3,"file":"Pagination.7daeef77.js","sources":["../../../../../../../../node_modules/.pnpm/carbon-components-svelte@0.79.0/node_modules/carbon-components-svelte/src/icons/CaretLeft.svelte","../../../../../../../../node_modules/.pnpm/carbon-components-svelte@0.79.0/node_modules/carbon-components-svelte/src/Pagination/Pagination.svelte"],"sourcesContent":["<script>\n  export let size = 16;\n\n  export let title = undefined;\n\n  $: labelled = $$props[\"aria-label\"] || $$props[\"aria-labelledby\"] || title;\n  $: attributes = {\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: Number($$props[\"tabindex\"]) === 0 ? true : undefined,\n  };\n</script>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  width=\"{size}\"\n  height=\"{size}\"\n  {...attributes}\n  {...$$restProps}\n>\n  {#if title}<title>{title}</title>{/if}\n  <path d=\"M20 24L10 16 20 8z\"></path>\n</svg>\n","<script>\n  /**\n   * @event {{ page?: number; pageSize?: number }} change - Dispatched after any user interaction\n   * @event {{ page: number; }} click:button--previous\n   * @event {{ page: number; }} click:button--next\n   * @event {{ pageSize: number; page: number; }} update\n   */\n\n  /** Specify the current page index */\n  export let page = 1;\n\n  /** Specify the total number of items */\n  export let totalItems = 0;\n\n  /** Set to `true` to disable the pagination */\n  export let disabled = false;\n\n  /** Specify the forward button text */\n  export let forwardText = \"Next page\";\n\n  /** Specify the backward button text */\n  export let backwardText = \"Previous page\";\n\n  /** Specify the items per page text */\n  export let itemsPerPageText = \"Items per page:\";\n\n  /**\n   * Override the item text\n   * @type {(min: number, max: number) => string}\n   */\n  export let itemText = (min, max) =>\n    `${min}–${max} item${max === 1 ? \"\" : \"s\"}`;\n\n  /**\n   * Override the item range text\n   * @type {(min: number, max: number, total: number) => string}\n   */\n  export let itemRangeText = (min, max, total) =>\n    `${min}–${max} of ${total} item${max === 1 ? \"\" : \"s\"}`;\n\n  /** Set to `true` to disable the page input */\n  export let pageInputDisabled = false;\n\n  /** Set to `true` to disable the page size input */\n  export let pageSizeInputDisabled = false;\n\n  /** Specify the number of items to display in a page */\n  export let pageSize = 10;\n\n  /**\n   * Specify the available page sizes\n   * @type {ReadonlyArray<number>}\n   */\n  export let pageSizes = [10];\n\n  /** Set to `true` if the number of pages is unknown */\n  export let pagesUnknown = false;\n\n  /**\n   * Override the page text\n   * @type {(page: number) => string}\n   */\n  export let pageText = (page) => `page ${page}`;\n\n  /**\n   * Override the page range text\n   * @type {(current: number, total: number) => string}\n   */\n  export let pageRangeText = (current, total) =>\n    `of ${total} page${total === 1 ? \"\" : \"s\"}`;\n\n  /** Set an id for the top-level element */\n  export let id = \"ccs-\" + Math.random().toString(36);\n\n  import { afterUpdate, createEventDispatcher } from \"svelte\";\n  import CaretLeft from \"../icons/CaretLeft.svelte\";\n  import CaretRight from \"../icons/CaretRight.svelte\";\n  import Button from \"../Button/Button.svelte\";\n  import Select from \"../Select/Select.svelte\";\n  import SelectItem from \"../Select/SelectItem.svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  afterUpdate(() => {\n    if (page > totalPages) {\n      page = totalPages;\n    }\n  });\n\n  $: dispatch(\"update\", { pageSize, page });\n  $: totalPages = Math.max(Math.ceil(totalItems / pageSize), 1);\n  $: selectItems = Array.from({ length: totalPages }, (_, i) => i);\n  $: backButtonDisabled = disabled || page === 1;\n  $: forwardButtonDisabled = disabled || page === totalPages;\n</script>\n\n<div id=\"{id}\" class:bx--pagination=\"{true}\" {...$$restProps}>\n  <div class:bx--pagination__left=\"{true}\">\n    {#if !pageSizeInputDisabled}\n      <label\n        id=\"bx--pagination-select-{id}-count-label\"\n        for=\"bx--pagination-select-{id}\"\n        class:bx--pagination__text=\"{true}\"\n      >\n        {itemsPerPageText}\n      </label>\n      <Select\n        id=\"bx--pagination-select-{id}\"\n        class=\"bx--select__item-count\"\n        hideLabel\n        noLabel\n        inline\n        on:change=\"{() => {\n          dispatch('change', { pageSize });\n        }}\"\n        bind:selected=\"{pageSize}\"\n      >\n        {#each pageSizes as size, i (size)}\n          <SelectItem value=\"{size}\" text=\"{size.toString()}\" />\n        {/each}\n      </Select>\n    {/if}\n    <span class:bx--pagination__text=\"{!pageSizeInputDisabled}\">\n      {#if pagesUnknown}\n        {itemText(pageSize * (page - 1) + 1, page * pageSize)}\n      {:else}\n        {itemRangeText(\n          Math.min(pageSize * (page - 1) + 1, totalItems),\n          Math.min(page * pageSize, totalItems),\n          totalItems\n        )}\n      {/if}\n    </span>\n  </div>\n  <div class:bx--pagination__right=\"{true}\">\n    {#if !pageInputDisabled}\n      <Select\n        id=\"bx--pagination-select-{id + 2}\"\n        class=\"bx--select__page-number\"\n        labelText=\"Page number, of {totalPages} pages\"\n        inline\n        hideLabel\n        on:change=\"{() => {\n          dispatch('change', { page });\n        }}\"\n        bind:selected=\"{page}\"\n      >\n        {#each selectItems as size, i (size)}\n          <SelectItem value=\"{size + 1}\" text=\"{(size + 1).toString()}\" />\n        {/each}\n      </Select>\n      <span class:bx--pagination__text=\"{true}\">\n        {#if pagesUnknown}\n          {pageText(page)}\n        {:else}{pageRangeText(page, totalPages)}{/if}\n      </span>\n    {/if}\n    <Button\n      kind=\"ghost\"\n      tooltipAlignment=\"center\"\n      tooltipPosition=\"top\"\n      icon=\"{CaretLeft}\"\n      iconDescription=\"{backwardText}\"\n      disabled=\"{backButtonDisabled}\"\n      class=\"bx--pagination__button bx--pagination__button--backward {backButtonDisabled\n        ? 'bx--pagination__button--no-index'\n        : ''}\"\n      on:click=\"{() => {\n        page--;\n        dispatch('click:button--previous', { page });\n        dispatch('change', { page });\n      }}\"\n    />\n    <Button\n      kind=\"ghost\"\n      tooltipAlignment=\"end\"\n      tooltipPosition=\"top\"\n      icon=\"{CaretRight}\"\n      iconDescription=\"{forwardText}\"\n      disabled=\"{forwardButtonDisabled}\"\n      class=\"bx--pagination__button bx--pagination__button--forward {forwardButtonDisabled\n        ? 'bx--pagination__button--no-index'\n        : ''}\"\n      on:click=\"{() => {\n        page++;\n        dispatch('click:button--next', { page });\n        dispatch('change', { page });\n      }}\"\n    />\n  </div>\n</div>\n"],"names":["size","$$props","title","$$invalidate","attributes","labelled","ctx","dirty","selectitem_changes","select_changes","t_value","set_data","t","div2_levels","button0_changes","button1_changes","page","totalItems","disabled","forwardText","backwardText","itemsPerPageText","itemText","min","max","itemRangeText","total","pageInputDisabled","pageSizeInputDisabled","pageSize","pageSizes","pagesUnknown","pageRangeText","current","dispatch","createEventDispatcher","totalPages","selectItems","_","i","backButtonDisabled","forwardButtonDisabled"],"mappings":"o8DACa,CAAA,KAAAA,EAAA,EAAA,EAAAC,EAEA,CAAA,MAAAC,EAAA,MAAA,EAAAD,mLAGXE,EAAA,EAAAC,EAAA,CACE,cAAAC,EAAA,OAAA,GACA,KAAAA,EAAA,MAAA,s8CC8GwC,KAAAC,EAAA,EAAA,EAAA,SAAA,sMAAAC,EAAA,CAAA,EAAA,OAAAC,EAAA,KAAAF,EAAA,EAAA,EAAA,SAAA,+oCAmBT,GAAA,0BAAAA,EAAA,EAAA,EAAA,+iBAAAC,EAAA,CAAA,EAAA,QAAAE,EAAA,GAAA,0BAAAH,EAAA,EAAA,EAAA,kYAWL,MAAAA,EAAA,EAAA,EAAA,qMAAAC,EAAA,CAAA,EAAA,SAAAC,EAAA,MAAAF,EAAA,EAAA,EAAA,g3BAKnB,IAAAI,EAAAJ,EAAA,EAAA,EAAAA,EAAA,CAAA,CAAA,EAAA,+DAAAC,EAAA,CAAA,EAAA,MAAAG,KAAAA,EAAAJ,EAAA,EAAA,EAAAA,EAAA,CAAA,CAAA,EAAA,KAAAK,EAAAC,EAAAF,CAAA,wQAW2D,MAAA,4DAAAJ,EAAA,EAAA,wLAgBD,MAAA,2DAAAA,EAAA,EAAA,iEApF3D,IAAAO,EAAA,CAAA,CAAA,GAAAP,EAAA,EAAA,CAAA,EAAAA,EAAA,EAAA,CAAA,unCAoE4DC,EAAA,CAAA,EAAA,SAAAO,EAAA,MAAA,4DAAAR,EAAA,EAAA,+HAgBDC,EAAA,CAAA,EAAA,QAAAQ,EAAA,MAAA,2DAAAT,EAAA,EAAA,6kBA3KxD,CAAA,KAAAU,EAAA,CAAA,EAAAf,EAGA,CAAA,WAAAgB,EAAA,CAAA,EAAAhB,EAGA,CAAA,SAAAiB,EAAA,EAAA,EAAAjB,EAGA,CAAA,YAAAkB,EAAA,WAAA,EAAAlB,EAGA,CAAA,aAAAmB,EAAA,eAAA,EAAAnB,EAGA,CAAA,iBAAAoB,EAAA,iBAAA,EAAApB,EAMA,CAAA,SAAAqB,EAAA,CAAAC,EAAAC,IAAA,GAAAD,CAAA,IAAAC,CAAA,QAAAA,IAAA,EAAA,GAAA,GAAA,EAAA,EAAAvB,EAOA,CAAA,cAAAwB,EAAA,CAAAF,EAAAC,EAAAE,KAAA,GAAAH,CAAA,IAAAC,CAAA,OAAAE,EAAA,QAAAF,IAAA,EAAA,GAAA,GAAA,EAAA,EAAAvB,EAIA,CAAA,kBAAA0B,EAAA,EAAA,EAAA1B,EAGA,CAAA,sBAAA2B,EAAA,EAAA,EAAA3B,EAGA,CAAA,SAAA4B,EAAA,EAAA,EAAA5B,EAMA,CAAA,UAAA6B,EAAA,CAAA,EAAA,CAAA,EAAA7B,EAGA,CAAA,aAAA8B,EAAA,EAAA,EAAA9B,gCAYA,CAAA,cAAA+B,EAAA,CAAAC,EAAAP,IAAA,MAAAA,CAAA,QAAAA,IAAA,EAAA,GAAA,GAAA,EAAA,EAAAzB,8CAaL,MAAAiC,EAAAC,GAAA,UAGAnB,EAAAoB,GACFjC,EAAA,EAAAa,EAAAoB,CAAA,m/BAIJF,EAAA,SAAA,CAAA,SAAAL,EAAA,KAAAb,CAAA,CAAA,mBACAb,EAAA,GAAAiC,EAAA,KAAA,IAAA,KAAA,KAAAnB,EAAAY,CAAA,EAAA,CAAA,CAAA,uBACA1B,EAAA,GAAAkC,EAAA,MAAA,KAAA,CAAA,OAAAD,CAAA,EAAA,CAAAE,EAAAC,IAAAA,CAAA,CAAA,yBACApC,EAAA,GAAAqC,EAAAtB,GAAAF,IAAA,CAAA,yBACAb,EAAA,GAAAsC,EAAAvB,GAAAF,IAAAoB,CAAA","x_google_ignoreList":[0,1]}