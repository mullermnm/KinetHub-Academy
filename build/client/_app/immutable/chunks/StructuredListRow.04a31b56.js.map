{"version":3,"file":"StructuredListRow.04a31b56.js","sources":["../../../../../../../../node_modules/.pnpm/carbon-components-svelte@0.79.0/node_modules/carbon-components-svelte/src/StructuredList/StructuredList.svelte","../../../../../../../../node_modules/.pnpm/carbon-components-svelte@0.79.0/node_modules/carbon-components-svelte/src/StructuredList/StructuredListCell.svelte","../../../../../../../../node_modules/.pnpm/carbon-components-svelte@0.79.0/node_modules/carbon-components-svelte/src/StructuredList/StructuredListRow.svelte"],"sourcesContent":["<script>\n  /**\n   * Specify the selected structured list row value\n   * @type {string}\n   */\n  export let selected = undefined;\n\n  /** Set to `true` to use the condensed variant */\n  export let condensed = false;\n\n  /** Set to `true` to flush the list */\n  export let flush = false;\n\n  /** Set to `true` to use the selection variant */\n  export let selection = false;\n\n  import { createEventDispatcher, setContext } from \"svelte\";\n  import { writable } from \"svelte/store\";\n\n  const dispatch = createEventDispatcher();\n  const selectedValue = writable(selected);\n\n  setContext(\"StructuredListWrapper\", {\n    selectedValue,\n    update: (value) => {\n      selectedValue.set(value);\n    },\n  });\n\n  $: selected = $selectedValue;\n  $: dispatch(\"change\", $selectedValue);\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<!-- svelte-ignore a11y-no-noninteractive-element-interactions -->\n<div\n  role=\"table\"\n  class:bx--structured-list=\"{true}\"\n  class:bx--structured-list--selection=\"{selection}\"\n  class:bx--structured-list--condensed=\"{condensed}\"\n  class:bx--structured-list--flush=\"{flush}\"\n  {...$$restProps}\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n>\n  <slot />\n</div>\n","<script>\n  /** Set to `true` to use as a header */\n  export let head = false;\n\n  /** Set to `true` to prevent wrapping */\n  export let noWrap = false;\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<div\n  role=\"{head ? 'columnheader' : 'cell'}\"\n  class:bx--structured-list-th=\"{head}\"\n  class:bx--structured-list-td=\"{!head}\"\n  class:bx--structured-list-content--nowrap=\"{noWrap}\"\n  {...$$restProps}\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n>\n  <slot />\n</div>\n","<script>\n  /** Set to `true` to use as a header */\n  export let head = false;\n\n  /** Set to `true` to render a label slot */\n  export let label = false;\n\n  /** Specify the tabindex */\n  export let tabindex = \"0\";\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n{#if label}\n  <!-- svelte-ignore a11y-label-has-associated-control -->\n  <!-- svelte-ignore a11y-no-noninteractive-tabindex -->\n  <!-- svelte-ignore a11y-no-noninteractive-element-interactions -->\n  <label\n    tabindex=\"{tabindex}\"\n    class:bx--structured-list-row=\"{true}\"\n    class:bx--structured-list-row--header-row=\"{head}\"\n    {...$$restProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n    on:keydown\n  >\n    <slot />\n  </label>\n{:else}\n  <!-- svelte-ignore a11y-interactive-supports-focus -->\n  <div\n    role=\"row\"\n    class:bx--structured-list-row=\"{true}\"\n    class:bx--structured-list-row--header-row=\"{head}\"\n    {...$$restProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n  >\n    <slot />\n  </div>\n{/if}\n"],"names":["selected","$$props","condensed","flush","selection","dispatch","createEventDispatcher","setContext","value","$selectedValue","head","noWrap","label_1_levels","ctx","label","tabindex"],"mappings":"8oDAKa,CAAA,SAAAA,EAAA,MAAA,EAAAC,EAGA,CAAA,UAAAC,EAAA,EAAA,EAAAD,EAGA,CAAA,MAAAE,EAAA,EAAA,EAAAF,EAGA,CAAA,UAAAG,EAAA,EAAA,EAAAH,EAKL,MAAAI,EAAAC,EAAA,4BAGNC,EAAA,wBAAA,iBAEE,OAAAC,GAAA,2ZAMFH,EAAA,SAAAI,CAAA,koGC5BW,CAAA,KAAAC,EAAA,EAAA,EAAAT,EAGA,CAAA,OAAAU,EAAA,EAAA,EAAAV,+qCCYE,IAAAW,EAAA,CAAA,CAAA,SAAAC,EAAA,CAAA,CAAA,EAAAA,EAAA,CAAA,CAAA,qqCAfF,CAAA,KAAAH,EAAA,EAAA,EAAAT,EAGA,CAAA,MAAAa,EAAA,EAAA,EAAAb,EAGA,CAAA,SAAAc,EAAA,GAAA,EAAAd","x_google_ignoreList":[0,1,2]}