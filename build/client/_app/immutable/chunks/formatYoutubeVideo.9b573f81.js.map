{"version":3,"file":"formatYoutubeVideo.9b573f81.js","sources":["../../../../../../../../node_modules/.pnpm/carbon-components-svelte@0.79.0/node_modules/carbon-components-svelte/src/Link/Link.svelte","../../../../../../src/lib/utils/functions/formatYoutubeVideo.ts"],"sourcesContent":["<script>\n  /** @restProps {a | p} */\n\n  /**\n   * Specify the size of the link\n   * @type {\"sm\" | \"lg\"}\n   */\n  export let size = undefined;\n\n  /**\n   * Specify the href value\n   * @type {string}\n   */\n  export let href = undefined;\n\n  /** Set to `true` to use the inline variant */\n  export let inline = false;\n\n  /**\n   * Specify the icon to render\n   * `inline` must be `false`\n   * @type {typeof import(\"svelte\").SvelteComponent<any>}\n   */\n  export let icon = undefined;\n\n  /** Set to `true` to disable the checkbox */\n  export let disabled = false;\n\n  /** Set to `true` to allow visited styles */\n  export let visited = false;\n\n  /** Obtain a reference to the top-level HTML element */\n  export let ref = null;\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n{#if disabled}\n  <!-- svelte-ignore a11y-no-noninteractive-element-interactions -->\n  <p\n    bind:this=\"{ref}\"\n    class:bx--link=\"{true}\"\n    class:bx--link--disabled=\"{disabled}\"\n    class:bx--link--inline=\"{inline}\"\n    class:bx--link--visited=\"{visited}\"\n    {...$$restProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n  >\n    <slot />\n    {#if !inline && ($$slots.icon || icon)}\n      <div class:bx--link__icon=\"{true}\">\n        <slot name=\"icon\">\n          <svelte:component this=\"{icon}\" />\n        </slot>\n      </div>\n    {/if}\n  </p>\n{:else}\n  <a\n    bind:this=\"{ref}\"\n    class:bx--link=\"{true}\"\n    class:bx--link--disabled=\"{disabled}\"\n    class:bx--link--inline=\"{inline}\"\n    class:bx--link--visited=\"{visited}\"\n    class:bx--link--sm=\"{size === 'sm'}\"\n    class:bx--link--lg=\"{size === 'lg'}\"\n    rel=\"{$$restProps.target === '_blank' ? 'noopener noreferrer' : undefined}\"\n    href=\"{href}\"\n    {...$$restProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n  >\n    <slot />\n    {#if !inline && ($$slots.icon || icon)}\n      <div class:bx--link__icon=\"{true}\">\n        <slot name=\"icon\">\n          <svelte:component this=\"{icon}\" />\n        </slot>\n      </div>\n    {/if}\n  </a>\n{/if}\n","export function formatYoutubeVideo(url: string, errors: { video: string }) {\n  console.log(`url`, url);\n  const prefix = 'https://www.youtube.com/embed';\n\n  // https://www.youtube.com/embed/qajK1J1neAM\n  if (url.includes('embed')) {\n    return url;\n  }\n\n  // https://youtu.be/qajK1J1neAM\n  if (url.includes('.be/')) {\n    const splittedUrlWithBe = url.split('.be/');\n\n    return `${prefix}/${splittedUrlWithBe[1]}`;\n  }\n\n  // https://www.youtube.com/watch?v=qajK1J1neAM\n  const splitedUrl = url.split('watch');\n  if (splitedUrl.length !== 2) {\n    errors.video = 'Not a valid youtube link';\n    return;\n  }\n\n  const query = new URLSearchParams(splitedUrl[1]);\n\n  return `${prefix}/${query.get('v')}`;\n}\n\nexport function getEmbedId(url: string) {\n  // https://www.youtube.com/embed/qajK1J1neAM\n  if (url.includes('embed')) {\n    return url.split('embed/')[1];\n  }\n\n  // https://youtu.be/qajK1J1neAM\n  if (url.includes('.be/')) {\n    const splittedUrlWithBe = url.split('.be/');\n\n    return splittedUrlWithBe[1];\n  }\n\n  // https://www.youtube.com/watch?v=qajK1J1neAM\n  const splitedUrl = url.split('watch');\n  if (splitedUrl.length !== 2) {\n    return '';\n  }\n\n  const query = new URLSearchParams(splitedUrl[1]);\n\n  return query.get('v');\n}\n"],"names":["if_block","ctx","create_if_block_2","toggle_class","a","create_if_block_1","size","$$props","href","inline","icon","disabled","visited","ref","formatYoutubeVideo","url","errors","prefix","splittedUrlWithBe","splitedUrl","query","getEmbedId"],"mappings":"mxBA6EU,IAAAA,EAAA,CAAAC,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,MAAAA,EAAA,CAAA,IAAAC,EAAAD,CAAA,4YAXeE,EAAAC,EAAA,eAAAH,EAAA,CAAA,IAAA,IAAA,EACAE,EAAAC,EAAA,eAAAH,EAAA,CAAA,IAAA,IAAA,yPAUf,CAAAA,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,MAAAA,EAAA,CAAA,mVAXeE,EAAAC,EAAA,eAAAH,EAAA,CAAA,IAAA,IAAA,EACAE,EAAAC,EAAA,eAAAH,EAAA,CAAA,IAAA,IAAA,oLAhBf,IAAAD,EAAA,CAAAC,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,MAAAA,EAAA,CAAA,IAAAI,EAAAJ,CAAA,6iBAAA,CAAAA,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,MAAAA,EAAA,CAAA,6hFA5CG,GAAA,CAAA,KAAAK,EAAA,MAAA,EAAAC,EAMA,CAAA,KAAAC,EAAA,MAAA,EAAAD,EAGA,CAAA,OAAAE,EAAA,EAAA,EAAAF,EAOA,CAAA,KAAAG,EAAA,MAAA,EAAAH,EAGA,CAAA,SAAAI,EAAA,EAAA,EAAAJ,EAGA,CAAA,QAAAK,EAAA,EAAA,EAAAL,EAGA,CAAA,IAAAM,EAAA,IAAA,EAAAN,k0BChCb,SAAAO,GAAAC,EAAAC,EAAA,CACA,QAAA,IAAA,MAAAD,CAAA,EACA,MAAAE,EAAA,gCAGA,GAAAF,EAAA,SAAA,OAAA,EACA,OAAAA,EAIA,GAAAA,EAAA,SAAA,MAAA,EAAA,CACA,MAAAG,EAAAH,EAAA,MAAA,MAAA,EAEA,MAAA,GAAAE,CAAA,IAAAC,EAAA,CAAA,CAAA,EAAA,CAIA,MAAAC,EAAAJ,EAAA,MAAA,OAAA,EACA,GAAAI,EAAA,SAAA,EAAA,CACAH,EAAA,MAAA,2BACA,MAAA,CAGA,MAAAI,EAAA,IAAA,gBAAAD,EAAA,CAAA,CAAA,EAEA,MAAA,GAAAF,CAAA,IAAAG,EAAA,IAAA,GAAA,CAAA,EACA,CAEA,SAAAC,GAAAN,EAAA,CAEA,GAAAA,EAAA,SAAA,OAAA,EACA,OAAAA,EAAA,MAAA,QAAA,EAAA,CAAA,EAIA,GAAAA,EAAA,SAAA,MAAA,EAGA,OAFAA,EAAA,MAAA,MAAA,EAEA,CAAA,EAIA,MAAAI,EAAAJ,EAAA,MAAA,OAAA,EACA,OAAAI,EAAA,SAAA,EACA,GAGA,IAAA,gBAAAA,EAAA,CAAA,CAAA,EAEA,IAAA,GAAA,CACA","x_google_ignoreList":[0]}