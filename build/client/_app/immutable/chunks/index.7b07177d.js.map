{"version":3,"file":"index.7b07177d.js","sources":["../../../../../../../../node_modules/.pnpm/carbon-components-svelte@0.79.0/node_modules/carbon-components-svelte/src/InlineLoading/InlineLoading.svelte","../../../../../../../../node_modules/.pnpm/carbon-icons-svelte@12.3.0/node_modules/carbon-icons-svelte/lib/PlayFilled.svelte","../../../../../../src/lib/components/CourseLandingPage/components/PaymentModal.svelte","../../../../../../src/lib/components/CourseLandingPage/components/PricingSection.svelte","../../../../../../src/lib/components/CourseLandingPage/components/IntersectionObserver.js","../../../../../../src/lib/components/CourseLandingPage/components/SectionsDisplay.svelte","../../../../../../src/lib/components/CourseLandingPage/constants.ts","../../../../../../src/lib/components/CourseLandingPage/utils.ts","../../../../../../src/lib/components/CourseLandingPage/index.svelte"],"sourcesContent":["<script>\n  /**\n   * Set the loading status\n   * @type {\"active\" | \"inactive\" | \"finished\" | \"error\"}\n   */\n  export let status = \"active\";\n\n  /**\n   * Set the loading description\n   * @type {string}\n   */\n  export let description = undefined;\n\n  /**\n   * Specify a description for the loading icon.\n   * Defaults to the `status` prop for the \"error\" and \"finished\" states\n   * @type {string}\n   */\n  export let iconDescription = undefined;\n\n  /** Specify the timeout delay (ms) after `status` is set to \"success\" */\n  export let successDelay = 1500;\n\n  import { createEventDispatcher, afterUpdate, onMount } from \"svelte\";\n  import CheckmarkFilled from \"../icons/CheckmarkFilled.svelte\";\n  import ErrorFilled from \"../icons/ErrorFilled.svelte\";\n  import Loading from \"../Loading/Loading.svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  let timeout = undefined;\n\n  onMount(() => {\n    return () => {\n      clearTimeout(timeout);\n    };\n  });\n\n  afterUpdate(() => {\n    if (status === \"finished\") {\n      timeout = setTimeout(() => {\n        dispatch(\"success\");\n      }, successDelay);\n    }\n  });\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<!-- svelte-ignore a11y-no-static-element-interactions -->\n<div\n  class:bx--inline-loading=\"{true}\"\n  aria-live=\"assertive\"\n  {...$$restProps}\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n>\n  <div class:bx--inline-loading__animation=\"{true}\">\n    {#if status === \"error\"}\n      <ErrorFilled\n        class=\"bx--inline-loading--error\"\n        title=\"{iconDescription || status}\"\n      />\n    {:else if status === \"finished\"}\n      <CheckmarkFilled\n        class=\"bx--inline-loading__checkmark-container\"\n        title=\"{iconDescription || status}\"\n      />\n    {:else if status === \"inactive\" || status === \"active\"}\n      <Loading\n        small\n        description=\"{iconDescription}\"\n        withOverlay=\"{false}\"\n        active=\"{status === 'active'}\"\n      />\n    {/if}\n  </div>\n  {#if description}\n    <div class:bx--inline-loading__text=\"{true}\">{description}</div>\n  {/if}\n</div>\n","<script>\n  export let size = 16;\n\n  export let title = undefined;\n\n  $: labelled = $$props[\"aria-label\"] || $$props[\"aria-labelledby\"] || title;\n  $: attributes = {\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: Number($$props[\"tabindex\"]) === 0 ? true : undefined\n  };\n</script>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  width={size}\n  height={size}\n  {...attributes}\n  {...$$restProps}>\n  {#if title}<title>{title}</title>{/if}\n  <path fill=\"none\" d=\"M11,23a1,1,0,0,1-1-1V10a1,1,0,0,1,1.4473-.8945l12,6a1,1,0,0,1,0,1.789l-12,6A1.001,1.001,0,0,1,11,23Z\"></path><path d=\"M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm7.4473,14.8945-12,6A1,1,0,0,1,10,22V10a1,1,0,0,1,1.4473-.8945l12,6a1,1,0,0,1,0,1.789Z\"></path>\n</svg>","<script lang=\"ts\">\n  import TextField from '$lib/components/Form/TextField.svelte';\n  import Modal from '$lib/components/Modal/index.svelte';\n  import PrimaryButton from '$lib/components/PrimaryButton/index.svelte';\n  import { coursePaymentValidation } from '$lib/utils/functions/validator';\n  import { Link } from 'carbon-components-svelte';\n  import { currentOrg } from '$lib/utils/store/org';\n  import {\n    triggerSendEmail,\n    NOTIFICATION_NAME\n  } from '$lib/utils/services/notification/notification';\n\n  export let open = false;\n  export let paymentLink = '';\n  export let teacherEmail = '';\n  export let courseName = '';\n\n  let fields = {\n    fullname: '',\n    email: ''\n  };\n\n  let errors = {\n    fullname: '',\n    email: ''\n  };\n\n  const STEPS = {\n    STEP_1: 'ENTER_DETAILS',\n    STEP_2: 'GO_TO_PAYMENT'\n  };\n\n  let step = STEPS.STEP_1;\n\n  function onSubmit() {\n    errors = coursePaymentValidation(fields);\n    console.log('coursePayment errors', errors);\n\n    if (Object.keys(errors).length) {\n      return;\n    }\n\n    if (paymentLink) {\n      step = STEPS.STEP_2;\n\n      // Send email to first added teacher of student wanting to join\n      // triggerSendEmail(NOTIFICATION_NAME.SEND_TEACHER_STUDENT_BUY_REQUEST, {\n      //   to: teacherEmail,\n      //   courseName,\n      //   studentEmail: fields.email,\n      //   studentFullname: fields.fullname\n      // });\n    } else {\n      open = false;\n    }\n  }\n\n  function onClickPaymentLink() {\n    // Send email to student to send proof of payment to teacher\n    // triggerSendEmail(NOTIFICATION_NAME.STUDENT_PROOVE_COURSE_PAYMENT, {\n    //   to: fields.email,\n    //   courseName,\n    //   teacherEmail,\n    //   studentFullname: fields.fullname,\n    //   orgName: $currentOrg.name\n    // });\n\n    fields.fullname = '';\n    fields.email = '';\n    open = false;\n  }\n</script>\n\n<Modal onClose={() => (open = false)} bind:open width=\"w-96\" modalHeading=\"Process course payment\">\n  {#if step === STEPS.STEP_1}\n    <form on:submit|preventDefault={onSubmit}>\n      <TextField\n        label=\"Your Fullname\"\n        bind:value={fields.fullname}\n        autoFocus={true}\n        placeholder=\"John Doe\"\n        className=\"mb-4\"\n        isRequired={true}\n        autoComplete={false}\n        errorMessage={errors.fullname}\n      />\n      <TextField\n        label=\"Your Email\"\n        bind:value={fields.email}\n        placeholder=\"johndoe@email.com\"\n        className=\"mb-4\"\n        isRequired={true}\n        autoComplete={false}\n        errorMessage={errors.email}\n      />\n\n      <div class=\"mt-5 flex items-center flex-row-reverse\">\n        <PrimaryButton\n          className=\"px-6 py-3\"\n          label={paymentLink ? 'Next' : 'Finish'}\n          type=\"submit\"\n        />\n      </div>\n    </form>\n  {:else if step === STEPS.STEP_2}\n    <p>\n      You will now be taken to a payment page, once you've paid send a proof of payment to the\n      course admin\n    </p>\n    <div class=\"mt-5 flex items-center flex-row-reverse\">\n      <Link href={paymentLink} target=\"_blank\" on:click={onClickPaymentLink}>Go to payment</Link>\n    </div>\n  {/if}\n</Modal>\n","<script lang=\"ts\">\n  import get from 'lodash/get';\n  import PrimaryButton from '$lib/components/PrimaryButton/index.svelte';\n  import getCurrencyFormatter from '$lib/utils/functions/getCurrencyFormatter';\n  import { isCourseFree } from '$lib/utils/functions/course';\n  import { getStudentInviteLink } from '$lib/utils/functions/course';\n  import { currentOrg, currentOrgDomain } from '$lib/utils/store/org';\n  import { goto } from '$app/navigation';\n  import HtmlRender from '$lib/components/HTMLRender/HTMLRender.svelte';\n  import PaymentModal from './PaymentModal.svelte';\n  import type { Course } from '$lib/utils/types';\n  import { ROLE } from '$lib/utils/constants/roles';\n  import { capturePosthogEvent } from '$lib/utils/services/posthog';\n  import { t } from '$lib/utils/functions/translations';\n  import { calcCourseDiscount } from '$lib/utils/functions/course';\n\n  export let className = '';\n  export let editMode = false;\n  export let courseData: Course;\n  export let startCoursePayment = false;\n  export let mobile = false;\n\n  let openModal = false;\n  let calculatedCost = 0;\n  let discount = 0;\n  let formatter: Intl.NumberFormat | undefined;\n  let isFree = false;\n\n  function handleJoinCourse() {\n    if (editMode) return;\n\n    capturePosthogEvent('join_course', {\n      course_id: courseData.id,\n      course_title: courseData.title,\n      course_cost: courseData.cost,\n      course_free: isFree\n    });\n    if (isFree) {\n      const link = getStudentInviteLink(courseData, $currentOrg.siteName, $currentOrgDomain);\n      goto(link);\n    } else {\n      openModal = true;\n    }\n\n    startCoursePayment = false;\n  }\n\n  function setFormatter(currency: string | undefined) {\n    if (!currency) return;\n    formatter = getCurrencyFormatter(currency);\n  }\n\n  function getTeacherEmail(group: Course['group']) {\n    const firstTutor = group?.members?.find((m) => m.role_id === ROLE.TUTOR);\n\n    return firstTutor?.profile?.email || '';\n  }\n\n  $: setFormatter(courseData.currency);\n\n  $: discount = get(courseData, 'metadata.discount', 0);\n  $: calculatedCost = calcCourseDiscount(\n    discount,\n    courseData.cost || 0,\n    !!courseData.metadata.showDiscount\n  );\n  $: isFree = isCourseFree(calculatedCost);\n  $: startCoursePayment && handleJoinCourse();\n</script>\n\n<PaymentModal\n  bind:open={openModal}\n  paymentLink={get(courseData, 'metadata.paymentLink', '')}\n  courseName={courseData.title}\n  teacherEmail={getTeacherEmail(courseData.group)}\n/>\n\n<!-- Pricing Details -->\n{#if mobile}\n  <div\n    class=\"sticky w-full flex items-center justify-center transition duration-300 h-fit bottom-0 lg:hidden bg-gray-50 dark:bg-neutral-800\"\n  >\n    <aside\n      class=\"price-container sticky lg:hidden {editMode\n        ? 'lg:bottom-2'\n        : 'lg:top-10'} lg:shadow-2xl lg:rounded-lg m-h-fit bg-gray-50 dark:bg-neutral-800 z-0 {className}\"\n    >\n      <div class=\"flex items-center justify-center gap-3 px-3 py-3\">\n        <!-- Pricing -->\n        <div class=\" text-center\">\n          {#if courseData?.metadata?.allowNewStudent}\n            <p class=\"dark:text-white font-medium text-sm flex items-center gap-1\">\n              {formatter?.format(calculatedCost) || calculatedCost}\n              {#if isFree}\n                <span class=\"text-xs\"\n                  >({$t('course.navItem.landing_page.pricing_section.free')})</span\n                >\n              {/if}\n            </p>\n            {#if courseData?.metadata?.showDiscount}\n              <p class=\"dark:text-white font-light text-sm text-gray-500\">\n                {discount}% {$t('course.navItem.landing_page.pricing_section.discount')}.\n                <span class=\"line-through\">\n                  {formatter?.format(courseData?.cost || 0) || courseData.cost}\n                </span>\n              </p>\n            {/if}\n          {:else}\n            <p class=\"dark:text-white text-lg\">\n              {$t('course.navItem.landing_page.pricing_section.not_accepting')}\n            </p>\n          {/if}\n        </div>\n\n        <!-- Call To Action Buttons -->\n        <div class=\"flex flex-col w-full h-full items-center\">\n          <PrimaryButton\n            label={isFree\n              ? $t('course.navItem.landing_page.pricing_section.enroll')\n              : $t('course.navItem.landing_page.pricing_section.buy')}\n            className=\"w-full sm:w-full h-[40px]\"\n            onClick={handleJoinCourse}\n            isDisabled={!courseData.metadata.allowNewStudent}\n          />\n        </div>\n      </div>\n    </aside>\n  </div>\n{:else}\n  <aside\n    class=\"price-container lg:sticky {editMode\n      ? 'lg:top-0'\n      : 'lg:top-10'} lg:shadow-2xl lg:rounded-lg m-h-fit dark:bg-neutral-800 {className}\"\n  >\n    <div class=\"p-2 lg:p-10\">\n      <!-- Pricing -->\n      <div class=\"mb-6\">\n        {#if courseData?.metadata?.allowNewStudent}\n          <p class=\"dark:text-white font-medium text-lg\">\n            {formatter?.format(calculatedCost) || calculatedCost}\n            {#if isFree}\n              <span class=\"text-sm\">({$t('course.navItem.landing_page.pricing_section.free')})</span\n              >\n            {/if}\n          </p>\n          {#if courseData?.metadata?.showDiscount}\n            <p class=\"dark:text-white font-light text-sm text-gray-500\">\n              {discount}% {$t('course.navItem.landing_page.pricing_section.discount')}.\n              <span class=\"line-through\"\n                >{formatter?.format(courseData?.cost || 0) || courseData.cost}</span\n              >\n            </p>\n          {/if}\n        {:else}\n          <p class=\"dark:text-white text-lg\">\n            {$t('course.navItem.landing_page.pricing_section.not_accepting')}\n          </p>\n        {/if}\n      </div>\n\n      <!-- Call To Action Buttons -->\n      <div class=\"flex flex-col w-full items-center\">\n        <PrimaryButton\n          label={isFree\n            ? $t('course.navItem.landing_page.pricing_section.enroll')\n            : $t('course.navItem.landing_page.pricing_section.buy')}\n          className=\"w-full sm:w-full py-3 mb-3\"\n          onClick={handleJoinCourse}\n          isDisabled={!courseData.metadata.allowNewStudent}\n        />\n        {#if courseData?.metadata?.showDiscount && courseData.metadata.allowNewStudent}\n          <p class=\"dark:text-white font-light text-sm text-gray-500\">\n            {$t('course.navItem.landing_page.pricing_section.bird')}\n          </p>\n        {/if}\n      </div>\n    </div>\n\n    <!-- Gift Container -->\n    {#if courseData?.metadata?.reward?.show}\n      <div class=\"p-10 flex items-center flex-col border-t border-b border-gray-300\">\n        <HtmlRender content={get(courseData, 'metadata.reward.description', '')} />\n      </div>\n    {/if}\n  </aside>\n{/if}\n\n<style lang=\"scss\">\n  .banner {\n    background-color: #040f2d;\n    min-height: 472px;\n  }\n\n  .author {\n    color: #7888b7;\n  }\n\n  .banner-image {\n    max-width: 559px;\n  }\n\n  .backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n  }\n\n  .active {\n    position: relative;\n    display: inline-block;\n  }\n\n  .active::after {\n    position: absolute;\n    content: '';\n    width: 100%;\n    height: 3px;\n    background-color: var(--main-primary-color);\n    display: block;\n    bottom: -14px;\n    left: 0px;\n  }\n\n  .price-container {\n    width: 90%;\n    max-width: 405px;\n    height: fit-content;\n  }\n\n  @media screen and (min-width: 768px) {\n    .price-container {\n      width: 50%;\n      height: fit-content;\n    }\n  }\n  @media screen and (min-width: 1024px) {\n    .price-container {\n      width: 350px;\n      min-width: 250px;\n    }\n  }\n  @media screen and (min-width: 1280px) {\n    .price-container {\n      width: 405px;\n      min-width: 330px;\n      height: fit-content;\n    }\n  }\n  .course-content {\n    max-width: 608px;\n  }\n\n  :global(.list ul li) {\n    margin-left: 1rem;\n    list-style-type: disc;\n  }\n\n  :global(.plyr) {\n    width: 100% !important;\n  }\n</style>\n","export function observeIntersection(node, callback, options = {}) {\n  const observer = new IntersectionObserver((entries) => {\n    entries.forEach((entry) => {\n      if (entry.isIntersecting) {\n        callback(true);\n      } else {\n        callback(false);\n      }\n    });\n  }, options);\n\n  observer.observe(node);\n\n  return {\n    destroy() {\n      observer.unobserve(node);\n    }\n  };\n}\n","<script lang=\"ts\">\n  import { CheckmarkOutline, ChevronDown, ChevronUp } from 'carbon-icons-svelte';\n  import pluralize from 'pluralize';\n\n  import { t } from '$lib/utils/functions/translations';\n  import type { Lesson } from '$lib/utils/types';\n\n  export let title: string;\n  export let lessonCount: number;\n  export let exerciseCount: number;\n  export let lessons: Lesson[];\n\n  let expand = false;\n</script>\n\n<div class=\"w-full rounded-md my-3\">\n  <!-- lesson header -->\n  <button\n    class=\"py-3 pl-3 pr-4 bg-[#F7F7F7] dark:bg-neutral-700 text-sm font-medium flex items-center justify-between w-full\"\n    on:click={() => (expand = !expand)}\n  >\n    <span class=\"flex items-center gap-2\">\n      {#if expand}\n        <ChevronUp />\n      {:else}\n        <ChevronDown />\n      {/if}\n      {title}\n    </span>\n    <span class=\"text-xs font-normal\">\n      {pluralize($t('course.navItem.landing_page.lessons'), lessonCount, true)},\n      {pluralize($t('course.navItem.landing_page.exercises'), exerciseCount, true)}\n    </span>\n  </button>\n\n  {#if expand}\n    {#each lessons as lesson}\n      <div class=\"py-3 pl-3 text-[13px] text-[#656565] flex items-center gap-2 lesson-section\">\n        <CheckmarkOutline size={16} class=\"scale-[0.8]\" />\n        {lesson.title}\n      </div>\n    {/each}\n  {/if}\n</div>\n","export const NAV_ITEM_KEY = {\n  HEADER: 'header',\n  REQUIREMENT: '#requirement',\n  DESCRIPTION: '#description',\n  GOALS: '#goals',\n  CERTIFICATE: '#certificate',\n  LESSONS: '#lessons',\n  REVIEWS: '#reviews',\n  INSTRUCTOR: '#instructor'\n};\n\nexport const NAV_ITEMS = [\n  {\n    key: NAV_ITEM_KEY.REQUIREMENT,\n    label: 'course.navItem.landing_page.editor.title.requirement'\n  },\n  {\n    key: NAV_ITEM_KEY.DESCRIPTION,\n    label: 'course.navItem.landing_page.editor.title.description'\n  },\n  {\n    key: NAV_ITEM_KEY.GOALS,\n    label: 'course.navItem.landing_page.editor.title.goals'\n  },\n  {\n    key: NAV_ITEM_KEY.CERTIFICATE,\n    label: 'course.navItem.landing_page.editor.title.certificate'\n  },\n  {\n    key: NAV_ITEM_KEY.LESSONS,\n    label: 'course.navItems.nav_content'\n  },\n  {\n    key: NAV_ITEM_KEY.REVIEWS,\n    label: 'course.navItem.landing_page.editor.title.reviews'\n  },\n  {\n    key: NAV_ITEM_KEY.INSTRUCTOR,\n    label: 'course.navItem.landing_page.editor.title.instructor'\n  }\n];\n","import { NAV_ITEMS, NAV_ITEM_KEY } from './constants';\nimport type { Course, Review } from '$lib/utils/types';\nimport get from 'lodash/get';\n\nexport function getExerciseCount(lessons) {\n  return lessons.reduce((total, lesson) => total + (lesson.totalExercises?.[0]?.count || 0), 0);\n}\n\nexport function getLessonSections(data) {\n  const sections =\n    data?.lesson_section?.map((section) => {\n      return {\n        ...section,\n        lessons: data.lessons.filter((lesson) => lesson.section_id === section.id)\n      };\n    }) || [];\n\n  return sections || [];\n}\n\nexport function getTotalLessons(sections) {\n  return sections.reduce((total, section) => {\n    return total + section.lessons.length;\n  }, 0);\n}\n\nexport function filterNavItems(course: Course, reviews: Review[]) {\n  const rules = get(course, 'metadata.sectionDisplay', {});\n\n  return NAV_ITEMS.filter((item) => {\n    const key = item.key;\n\n    if (typeof rules[key] === 'boolean') {\n      return !!rules[key];\n    }\n\n    if (key === NAV_ITEM_KEY.REVIEWS) {\n      // Show only if there are reviews added\n      return reviews.length > 0;\n    }\n\n    // In case they are undefined\n    return true;\n  });\n}\n","<script lang=\"ts\">\n  import { fade } from 'svelte/transition';\n  import get from 'lodash/get';\n  import pluralize from 'pluralize';\n  import { page } from '$app/stores';\n  import { onMount, onDestroy } from 'svelte';\n  import PlayFilled from 'carbon-icons-svelte/lib/PlayFilled.svelte';\n  import { ImageLoader, InlineLoading } from 'carbon-components-svelte';\n\n  import { getLectureNo } from '../Course/function';\n  import { currentOrg } from '$lib/utils/store/org';\n  import { course } from '$lib/components/Course/store';\n  import { t } from '$lib/utils/functions/translations';\n  import { calDateDiff } from '$lib/utils/functions/date';\n  import { handleOpenWidget, reviewsModalStore } from './store';\n  import { VARIANTS } from '$lib/components/PrimaryButton/constants';\n  import { COURSE_VERSION, type Course, type Lesson, type Review } from '$lib/utils/types';\n\n  import Chip from '../Chip/index.svelte';\n  import Modal from '../Modal/index.svelte';\n  import Avatar from '$lib/components/Avatar/index.svelte';\n  import PricingSection from './components/PricingSection.svelte';\n  import PoweredBy from '$lib/components/Upgrade/PoweredBy.svelte';\n  import UploadWidget from '$lib/components/UploadWidget/index.svelte';\n  import { getEmbedId } from '$lib/utils/functions/formatYoutubeVideo';\n  import HtmlRender from '$lib/components/HTMLRender/HTMLRender.svelte';\n  import PrimaryButton from '$lib/components/PrimaryButton/index.svelte';\n  import { observeIntersection } from './components/IntersectionObserver';\n  import SectionsDisplay from './components/SectionsDisplay.svelte';\n\n  import { getExerciseCount, getLessonSections, getTotalLessons, filterNavItems } from './utils';\n  import { NAV_ITEM_KEY, NAV_ITEMS } from './constants';\n\n  export let editMode = false;\n  export let courseData: Course;\n  const ratingsImg = [\n    '/images/rating-1.svg',\n    '/images/rating-2.svg',\n    '/images/rating-3.svg',\n    '/images/rating-4.svg',\n    '/images/rating-5.svg'\n  ];\n\n  let lessons: Array<Lesson> = [];\n  let reviews: Review[] = [];\n  let player: any;\n  let averageRating = 0;\n  let totalRatings = 0;\n  let startCoursePayment = false;\n  let isVisible = false;\n  let observer: { destroy: () => void };\n  let certificate: Course['metadata']['certificate'] = {\n    templateUrl: '/images/certificate-template.svg'\n  };\n\n  let expandDescription = Array(reviews.length).fill(false);\n\n  let activeNav = NAV_ITEMS[0].key;\n  let instructor = {};\n  let video: string | undefined;\n\n  const lessonSections = getLessonSections(courseData);\n  const totalLessons = getTotalLessons(lessonSections);\n\n  function locationHashChanged() {\n    activeNav = window.location.hash;\n  }\n\n  function initPlyr(_player: any, _video: string | undefined) {\n    if (!player) return;\n\n    // @ts-ignore\n    const plyr = new Plyr('#player', {});\n    // @ts-ignore\n    window.player = plyr;\n  }\n\n  function toggleDescription(id: number) {\n    expandDescription[id] = !expandDescription[id];\n  }\n\n  onMount(() => {\n    window.onhashchange = locationHashChanged;\n    const targetNode = document.querySelector('.target-component');\n    observer = observeIntersection(targetNode, (inView: boolean) => {\n      isVisible = inView;\n    });\n  });\n\n  onDestroy(() => {\n    observer?.destroy();\n  });\n\n  $: initPlyr(player, video);\n\n  $: video = get(courseData, 'metadata.videoUrl');\n  $: allowNewStudent = get(courseData, 'metadata.allowNewStudent');\n  $: bannerImage = get(courseData, 'logo');\n  $: lessons = get(courseData, 'lessons', [])\n    .sort((a, b) => new Date(a.created_at).getTime() - new Date(b.created_at).getTime())\n    .sort((a, b) => (a.order ?? 0) - (b.order ?? 0));\n  $: instructor = get(courseData, 'metadata.instructor') || {};\n  $: certificate = get(courseData, 'metadata.certificate', certificate);\n\n  $: navItems = filterNavItems(courseData, reviews);\n  $: navItemKeys = navItems.map((item) => item.key);\n\n  $: {\n    reviews = get(courseData, 'metadata.reviews') || [];\n    totalRatings = reviews?.reduce((acc = 0, review) => acc + (review?.rating || 0), 0);\n    averageRating = totalRatings / reviews?.length;\n  }\n</script>\n\n{#if !editMode}\n  <PoweredBy />\n{/if}\n\n<div class=\"flex w-full flex-col items-center bg-white dark:bg-black\">\n  <!-- Header Section -->\n  <header id=\"header\" class=\"banner p- flex w-full items-center justify-center\">\n    <div class=\"flex w-full flex-col-reverse items-center justify-between md:w-5/6 md:flex-row\">\n      <!-- Course Description -->\n      <div class=\"w-11/12 py-10 md:w-2/5\">\n        <h1 class=\"my-4 text-5xl font-bold text-white dark:text-white\">\n          {get(courseData, 'title', '')}\n        </h1>\n        <p class=\"text-md mb-6 text-white dark:text-white\">\n          {get(courseData, 'description', '')}\n        </p>\n\n        <p class=\"author my-3 text-sm dark:text-white\">\n          {get(courseData, 'metadata.instructor.name', '')}\n        </p>\n        <PrimaryButton\n          label={$t('course.navItem.landing_page.start_course')}\n          className=\"px-6 py-5 mt-6 sm:w-fit hidden md:block\"\n          onClick={() => {\n            if (editMode) return;\n            startCoursePayment = true;\n          }}\n          isDisabled={!allowNewStudent}\n        />\n        {#if $handleOpenWidget.open}\n          <UploadWidget bind:imageURL={$course.logo} />\n        {/if}\n      </div>\n\n      <!-- Banner Image getEmbedId(videoUrl) -->\n      {#if video}\n        <div class=\"banner-image flex w-full md:w-2/3\">\n          <div\n            bind:this={player}\n            id=\"player\"\n            data-plyr-provider=\"youtube\"\n            data-plyr-embed-id={getEmbedId(video)}\n          />\n        </div>\n        <!-- <div class=\"container\">\n          <div\n            bind:this={player}\n            id=\"player\"\n            class=\"banner-image w-2/3 h-96 relative\"\n            data-plyr-provider=\"youtube\"\n            data-plyr-embed-id=\"bTqVqk7FSmY\"\n          />\n        </div> -->\n      {:else}\n        <div class=\"banner-image relative overflow-hidden rounded-md md:w-2/3\">\n          <img\n            style=\"min-width:280px; min-height:200px\"\n            alt=\"About us\"\n            src={bannerImage ? bannerImage : '/images/classroomio-course-img-template.jpg'}\n            class=\"relative mt-2 h-full max-h-[400px] w-full max-w-[500px] rounded-md md:mt-0\"\n          />\n        </div>\n\n        <!-- <div\n          class=\"banner-image w-2/3 h-96 relative cursor-pointer\"\n          on:click={playVideo}\n        >\n          <div\n            aria-hidden=\"true\"\n            class=\"absolute top-0 left-0 backdrop w-full h-full\"\n          />\n          <img\n            src=\"/images/course-banner-image.png\"\n            alt=\"banner\"\n            class=\"w-full h-full\"\n          />\n          <div\n            class=\"absolute top-0 left-0 w-full h-full z-50 flex items-center justify-center\"\n          >\n            <img src=\"/images/play_video.png\" alt=\"play video\" />\n          </div>\n        </div> -->\n      {/if}\n    </div>\n  </header>\n\n  <!-- Body -->\n  <div class=\"w-full bg-white dark:bg-black\">\n    <div\n      class=\"mx-0 my-2 flex w-full max-w-[1200px] flex-col-reverse items-center justify-between lg:m-auto lg:w-11/12 lg:flex-row lg:items-start lg:py-8\"\n    >\n      <!-- Course Details -->\n      <div class=\"course-content w-full p-3 lg:mr-10 lg:w-10/12\">\n        <!-- Navigation -->\n        <nav\n          class=\"sticky top-0 flex items-center border-b border-gray-300 py-3 {!editMode &&\n            'lg:top-11'} bg-white dark:bg-neutral-800\"\n        >\n          {#each navItems as navItem}\n            <a\n              href=\"{$page.url.pathname}{navItem.key}\"\n              class=\"{navItem.key === activeNav &&\n                'active text-primary-700'} z-0 mr-6 rounded-lg px-2 font-normal text-slate-700 hover:bg-gray-200 dark:text-white dark:hover:text-slate-900\"\n            >\n              {$t(navItem.label)}\n            </a>\n          {/each}\n        </nav>\n\n        <!-- Sections - Requirement -->\n\n        {#if navItemKeys.includes(NAV_ITEM_KEY.REQUIREMENT)}\n          <section\n            id=\"requirement\"\n            transition:fade={{ delay: 250, duration: 300 }}\n            class=\"mt-8 border-b border-gray-300 pb-10\"\n          >\n            <h3 class=\"mb-3 mt-0 text-2xl font-bold\">\n              {$t('course.navItem.landing_page.requirement')}\n            </h3>\n\n            <ul class=\"list font-light\">\n              <HtmlRender content={get(courseData, 'metadata.requirements', '')} />\n            </ul>\n          </section>\n        {/if}\n\n        <!-- Sections - Course Description -->\n        {#if navItemKeys.includes(NAV_ITEM_KEY.DESCRIPTION)}\n          <section\n            id=\"description\"\n            transition:fade={{ delay: 250, duration: 300 }}\n            class=\"mt-8 border-b border-gray-300 pb-10\"\n          >\n            <h3 class=\"mb-3 mt-0 text-2xl font-bold\">\n              {$t('course.navItem.landing_page.description')}\n            </h3>\n\n            <HtmlRender\n              className=\"dark:text-white text-sm font-light\"\n              content={get(courseData, 'metadata.description', '')}\n            />\n          </section>\n        {/if}\n\n        <!-- Sections - Goal -->\n        {#if navItemKeys.includes(NAV_ITEM_KEY.GOALS)}\n          <section id=\"goals\" transition:fade={{ delay: 250, duration: 300 }} class=\"mt-8 pb-10\">\n            <h3 class=\"text-2xl font-bold mt-0 mb-3\">{$t('course.navItem.landing_page.learn')}</h3>\n            <ul class=\"list font-light\">\n              <HtmlRender content={get(courseData, 'metadata.goals', '')} />\n            </ul>\n          </section>\n        {/if}\n\n        <!-- Sections - Certificate -->\n        {#if navItemKeys.includes(NAV_ITEM_KEY.CERTIFICATE)}\n          <section\n            id=\"certificate\"\n            transition:fade={{ delay: 250, duration: 300 }}\n            class=\"border-b border-gray-300 mt-8 pb-10\"\n          >\n            <h3 class=\"text-2xl font-bold mt-0\">{$t('course.navItem.landing_page.certificate')}</h3>\n            <p class=\"dark:text-white text-sm font-light mb-3\">\n              {$t('course.navItem.landing_page.certificate_text')}\n            </p>\n\n            <ImageLoader\n              class=\"certificate-img max-h-[215px]\"\n              src={certificate?.templateUrl}\n              alt=\"certificate template\"\n            >\n              <svelte:fragment slot=\"loading\">\n                <InlineLoading />\n              </svelte:fragment>\n              <svelte:fragment slot=\"error\">An error occurred.</svelte:fragment>\n            </ImageLoader>\n          </section>\n        {/if}\n\n        <!-- Sections - Lessons -->\n        {#if courseData.version === COURSE_VERSION.V1}\n          <section id=\"lessons\" class=\"border-b border-gray-300 mt-8 pb-10\">\n            <div class=\"flex items-center justify-between w-full mb-3\">\n              <h3 class=\"text-2xl font-bold mt-0 mb-3\">\n                {$t('course.navItem.landing_page.content')}\n              </h3>\n              <p class=\"dark:text-white text-sm font-light\">\n                {pluralize('lesson', lessons.length, true)}\n              </p>\n            </div>\n\n            <div class=\"flex flex-wrap\">\n              {#each lessons as lesson, index}\n                <div class=\"px-2 py-1 m-2 border rounded\">\n                  <Chip\n                    value={getLectureNo(index + 1, '0')}\n                    className=\"bg-primary-100 text-primary-700 inline \"\n                  />\n                  <p class=\"ml-2 text-xs font-light dark:text-white inline\">\n                    {lesson.title}\n                  </p>\n                </div>\n              {/each}\n            </div>\n          </section>\n        {:else if courseData.version === COURSE_VERSION.V2}\n          <section id=\"lessons\">\n            <!-- header -->\n            <div class=\"flex items-center justify-between\">\n              <h1>{$t('course.navItem.landing_page.course_content')}</h1>\n              <span class=\"text-xs font-normal\">\n                {pluralize($t('course.navItem.landing_page.modules'), lessonSections.length, true)},\n                {pluralize($t('course.navItem.landing_page.lessons'), totalLessons, true)}\n              </span>\n            </div>\n\n            {#each lessonSections as section}\n              <SectionsDisplay\n                exerciseCount={getExerciseCount(section.lessons)}\n                lessonCount={section.lessons?.length}\n                lessons={section.lessons}\n                title={section.title}\n              />\n            {/each}\n          </section>\n        {/if}\n\n        <!-- Sections - Reviews -->\n        {#if navItemKeys.includes(NAV_ITEM_KEY.REVIEWS)}\n          <section id=\"reviews\" transition:fade={{ delay: 250, duration: 300 }}>\n            <h2 class=\"my-16 mr-0 mb-6 ml-0 font-semibold\">\n              {$t('course.navItem.landing_page.reviews')}\n            </h2>\n            <div class=\"flex flex-wrap\">\n              {#each reviews.slice(0, 4) as review, id}\n                {#if !review.hide}\n                  <!-- review -->\n                  <div class=\"item-start my-2 flex w-2/4 flex-row\">\n                    <!-- image container -->\n                    {#if review.avatar_url}\n                      <Avatar src={review.avatar_url} name=\"Avatar\" className=\"mt-1\" />\n                    {/if}\n\n                    <!-- profile content -->\n                    <div class=\"w-11/12 pl-2.5\">\n                      <p class=\"mb-0.5 font-medium\">{review.name}</p>\n                      <!-- ratings -->\n                      <div class=\"flex flex-row items-center\">\n                        {#if review.rating}\n                          <img src={ratingsImg[review.rating - 1]} class=\"mr-4 mt-1 w-24\" alt=\"\" />\n                        {/if}\n                      </div>\n                      <div\n                        class=\"read-more-content mb-2\"\n                        style=\"max-height: {expandDescription[id] ? 'none' : '50px'}\"\n                      >\n                        <p class=\"my-2 text-sm leading-5 text-gray-600\">\n                          {review.description}\n                        </p>\n                      </div>\n                      {#if !expandDescription[id] && review.description.split(' ').length > 9}\n                        <button\n                          class=\"text-primary-700 mt-2 font-normal underline\"\n                          on:click={() => toggleDescription(id)}>See More</button\n                        >\n                      {/if}\n                      {#if expandDescription[id]}\n                        <button\n                          class=\"text-primary-700 mt-2 font-normal underline\"\n                          on:click={() => toggleDescription(id)}>See Less</button\n                        >\n                      {/if}\n                    </div>\n                  </div>\n                {/if}\n              {/each}\n            </div>\n            {#if reviews.length > 4}\n              <PrimaryButton\n                label={$t('course.navItem.landing_page.see_all')}\n                className=\"w-3/12 p-4 mt-2\"\n                variant={VARIANTS.OUTLINED}\n                onClick={() => ($reviewsModalStore.open = true)}\n              />\n            {/if}\n\n            <!-- Reviews Modal -->\n            <Modal\n              onClose={() => ($reviewsModalStore.open = false)}\n              bind:open={$reviewsModalStore.open}\n              width=\"w-9/12\"\n              modalHeading={$t('course.navItem.landing_page.reviews_modal.title')}\n            >\n              <div class=\"flex\">\n                <!-- ratings -->\n                <div class=\"w-1/3\">\n                  <h2 class=\"text-xl font-bold\">\n                    {averageRating}\n                    {$t('course.navItem.landing_page.reviews_modal.rating')}\n                  </h2>\n                  <h2 class=\"text-lg font-semibold mt-2\">\n                    {reviews.length}\n                    {$t('course.navItem.landing_page.reviews_modal.ratings')}\n                  </h2>\n                </div>\n                <!-- reviews -->\n                <div class=\"flex w-4/6 flex-wrap\">\n                  {#each reviews as review, id}\n                    <!-- review -->\n                    <div class=\"item-start my-2 flex w-full flex-row\">\n                      <!-- image container -->\n                      {#if review.avatar_url}\n                        <Avatar src={review.avatar_url} name={review.name} className=\"mt-1\" />\n                      {/if}\n\n                      <!-- profile content -->\n                      <div class=\"w-11/12 pl-2.5\">\n                        <p class=\"mb-0.5 font-medium\">{review.name}</p>\n                        <!-- ratings -->\n                        <div class=\"flex flex-row\">\n                          <img src=\"/images/rating-full.svg\" alt=\"\" class=\"mr-2\" />\n                          <p class=\"text-xs text-gray-600\">\n                            {calDateDiff(review.created_at)}\n                          </p>\n                        </div>\n                        <div\n                          class=\"read-more-content mb-2\"\n                          style=\"max-height: {expandDescription[id] ? 'none' : '50px'}\"\n                        >\n                          <p class=\"my-2 text-sm leading-5 text-gray-600\">\n                            {review.description}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  {/each}\n                </div>\n              </div>\n            </Modal>\n          </section>\n        {/if}\n\n        <!-- Sections - Instructor -->\n        <section id=\"instructor\" class=\"mt-8 pb-10\">\n          <h3 class=\"text-2xl font-bold mt-0 mb-3\">\n            {$t('course.navItem.landing_page.instructor')}\n          </h3>\n          <div class=\"flex items-center mb-4\">\n            <img\n              alt=\"Author Avatar\"\n              class=\"mr-3 block h-20 w-20 rounded-full\"\n              src={get(instructor, 'imgUrl', $currentOrg.avatar_url || '/logo-512.png')}\n            />\n            <div>\n              <p class=\"text-md font-light dark:text-white\">\n                {get(instructor, 'name', $currentOrg.name)}\n              </p>\n              <p class=\"text-xs font-light dark:text-white\">\n                {get(instructor, 'role', '')}\n              </p>\n              <p class=\"text-md flex items-center font-light dark:text-white\">\n                <PlayFilled size={16} class=\"text-primary-700\" />\n                <span class=\"ml-1\"\n                  >{get(instructor, 'courseNo', '')}\n                  {$t('course.navItem.landing_page.courses')}</span\n                >\n              </p>\n            </div>\n          </div>\n\n          <p class=\"text-sm font-light dark:text-white\">\n            {get(instructor, 'description', '')}\n          </p>\n        </section>\n      </div>\n\n      <!-- Pricing Details -->\n      <PricingSection\n        {courseData}\n        {editMode}\n        bind:startCoursePayment\n        className=\"target-component\"\n      />\n    </div>\n    {#if !isVisible}\n      <PricingSection\n        {courseData}\n        {editMode}\n        bind:startCoursePayment\n        mobile={true}\n        className=\"w-full\"\n      />\n    {/if}\n  </div>\n</div>\n\n<style lang=\"scss\">\n  .banner {\n    background-color: #040f2d;\n    min-height: 472px;\n  }\n\n  .author {\n    color: #7888b7;\n  }\n\n  .banner-image {\n    max-width: 559px;\n  }\n\n  .backdrop {\n    background-color: rgba(0, 0, 0, 0.5);\n  }\n\n  :global(.certificate-img) {\n    width: unset !important;\n  }\n\n  .active {\n    position: relative;\n    display: inline-block;\n  }\n\n  .active::after {\n    position: absolute;\n    content: '';\n    width: 100%;\n    height: 3px;\n    background-color: var(--main-primary-color);\n    display: block;\n    bottom: -14px;\n    left: 0px;\n  }\n\n  .price-container {\n    width: 405px;\n    min-width: 330px;\n    height: fit-content;\n    position: sticky;\n    top: 0;\n  }\n\n  .course-content {\n    max-width: 608px;\n    min-width: 60%;\n  }\n\n  nav {\n    overflow: auto;\n    margin: 0;\n    overflow-y: hidden;\n    width: 100%;\n  }\n\n  :global(.list ul li) {\n    margin-left: 1rem;\n    list-style-type: disc;\n  }\n\n  :global(.plyr) {\n    width: 100% !important;\n  }\n\n  .read-more-content {\n    max-height: 100px; /* Adjust this value to set the maximum height for the truncated content */\n    overflow: hidden;\n    transition: max-height 0.3s ease;\n    text-overflow: ellipsis;\n  }\n\n  .read-more-button {\n    cursor: pointer;\n    color: blue;\n    text-decoration: underline;\n  }\n\n  .lesson-section:not(:last-child) {\n    border-bottom: 1px solid #f7f7f7;\n  }\n\n  @media screen and (max-width: 1023px) {\n    .course-content {\n      min-width: 80%;\n    }\n  }\n</style>\n"],"names":["ctx","dirty","loading_changes","checkmarkfilled_changes","errorfilled_changes","status","$$props","description","iconDescription","successDelay","dispatch","createEventDispatcher","timeout","size","title","$$invalidate","attributes","labelled","textfield0_props","textfield1_props","textfield0_changes","textfield1_changes","STEPS","step","onSubmit","errors","coursePaymentValidation","fields","paymentLink","onClickPaymentLink","$$self","value","func","open","if_block2","_e","_d","_c","create_if_block_4$1","attr","aside","aside_class_value","primarybutton_changes","current","t_1_value","set_data","t_1","t0_value","_a","t0","t1_value","t1","t2_value","t2","get","htmlrender_changes","paymentmodal_changes","courseData","formatter","handleJoinCourse","editMode","isFree","link","getStudentInviteLink","$currentOrg","$currentOrgDomain","goto","currency","getCurrencyFormatter","firstTutor","group","m","ROLE","_b","discount","calculatedCost","calcCourseDiscount","startCoursePayment","observeIntersection","node","callback","options","observer","entries","entry","t3_value","pluralize","t5_value","t3","t5","lessonCount","exerciseCount","lessons","click_handler","expand","NAV_ITEM_KEY","NAV_ITEMS","getExerciseCount","total","lesson","getLessonSections","data","section","getTotalLessons","sections","filterNavItems","course","reviews","rules","item","key","uploadwidget_props","uploadwidget_changes","div0","div0_data_plyr_embed_id_value","getEmbedId","a","a_href_value","a_class_value","section_1_transition","create_bidirectional_transition","section_1","fade","imageloader_changes","t4_value","t4","getLectureNo","each_value_1","ensure_array_like","modal_props","modal_changes","show_if","if_block0","create_if_block_8","if_block1","create_if_block_7","if_block3","create_if_block_5","set_style","div1","avatar_changes","src_url_equal","img","img_src_value","if_block","create_if_block_4","VARIANTS","t6_value","create_if_block_2","t6","show_if_4","show_if_3","show_if_2","show_if_1","t17_value","t20_value","t22_value","t25_value","t27_value","t29_value","create_if_block_16","COURSE_VERSION","nav","nav_class_value","t17","t20","t22","t25","t27","t29","ratingsImg","player","certificate","expandDescription","instructor","video","lessonSections","totalLessons","locationHashChanged","activeNav","initPlyr","_player","_video","plyr","onMount","targetNode","inView","onDestroy","$course","id","toggleDescription","click_handler_1","$reviewsModalStore","averageRating","totalRatings","navItemKeys","navItems"],"mappings":"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","x_google_ignoreList":[0,1]}