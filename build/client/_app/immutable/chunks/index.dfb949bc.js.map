{"version":3,"file":"index.dfb949bc.js","sources":["../../../../../../../../node_modules/.pnpm/carbon-icons-svelte@12.3.0/node_modules/carbon-icons-svelte/lib/AddComment.svelte","../../../../../../src/lib/components/Org/Community/index.svelte"],"sourcesContent":["<script>\n  export let size = 16;\n\n  export let title = undefined;\n\n  $: labelled = $$props[\"aria-label\"] || $$props[\"aria-labelledby\"] || title;\n  $: attributes = {\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: Number($$props[\"tabindex\"]) === 0 ? true : undefined\n  };\n</script>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  width={size}\n  height={size}\n  {...attributes}\n  {...$$restProps}>\n  {#if title}<title>{title}</title>{/if}\n  <path d=\"M17.74,30,16,29l4-7h6a2,2,0,0,0,2-2V8a2,2,0,0,0-2-2H6A2,2,0,0,0,4,8V20a2,2,0,0,0,2,2h9v2H6a4,4,0,0,1-4-4V8A4,4,0,0,1,6,4H26a4,4,0,0,1,4,4V20a4,4,0,0,1-4,4H21.16Z\"></path><path d=\"M17 9L15 9 15 13 11 13 11 15 15 15 15 19 17 19 17 15 21 15 21 13 17 13 17 9z\"></path>\n</svg>","<script lang=\"ts\">\n  import { goto } from '$app/navigation';\n  import AddCommentIcon from 'carbon-icons-svelte/lib/AddComment.svelte';\n  import CommunityLoader from './Loader.svelte';\n  import Vote from '$lib/components/Vote/index.svelte';\n  import Box from '$lib/components/Box/index.svelte';\n  import CoursesEmptyIcon from '$lib/components/Icons/CoursesEmptyIcon.svelte';\n  import Space from '$lib/components/Space/index.svelte';\n  import { currentOrgPath, currentOrg } from '$lib/utils/store/org';\n  import { supabase } from '$lib/utils/functions/supabase';\n  import { calDateDiff } from '$lib/utils/functions/date';\n  import { fetchCourses } from '$lib/utils/services/courses';\n  import { profile } from '$lib/utils/store/user';\n  import { Search, Dropdown } from 'carbon-components-svelte';\n  import { t } from '$lib/utils/functions/translations';\n  import { courses } from '$lib/components/Courses/store';\n\n  export let isLMS = false;\n\n  let isLoading = false;\n  let discussions = [];\n  let searchValue = '';\n  let allCourses: any[] = [];\n  let selectedId = '';\n\n  async function fetchCommunityQuestions(orgId?: string, profileId?: string) {\n    if (!orgId || !profileId) return;\n    isLoading = true;\n\n    if ($courses.length) {\n      allCourses = [...$courses];\n    } else {\n      const courseResult = (await fetchCourses(profileId, orgId)) || { allCourses: [] };\n      allCourses = courseResult.allCourses;\n    }\n\n    const courseIds = allCourses.map((course) => course.id);\n    const courseIdsFilter = `(${courseIds.join(',')})`;\n\n    const { data, error } = await supabase\n      .from('community_question')\n      .select(\n        `\n        organization_id,\n        course_id,\n        title,\n        votes,\n        created_at,\n        slug,\n        comments:community_answer(count),\n        author:profile(\n          fullname\n        ),\n        course!inner (\n          title\n        )\n      `\n      )\n      .filter('course_id', 'in', courseIdsFilter)\n      .order('created_at', { ascending: false });\n    console.log('data', data);\n    console.log('error', error);\n\n    isLoading = false;\n\n    if (error) {\n      console.error('Error loading community', error);\n      return goto(isLMS ? '/lms' : $currentOrgPath);\n    }\n\n    discussions =\n      data?.map((discussion) => ({\n        title: discussion.title,\n        courseId: discussion.course_id,\n        courseTitle: discussion.course?.title,\n        slug: discussion.slug,\n        author: discussion?.author?.fullname,\n        comments: discussion.comments?.[0]?.count || 0,\n        votes: discussion.votes,\n        createdAt: calDateDiff(discussion.created_at)\n      })) || [];\n  }\n\n  $: fetchCommunityQuestions($currentOrg.id, $profile.id);\n  $: filteredDiscussions = discussions.filter(\n    (discussion) =>\n      discussion.title.toLowerCase().includes(searchValue.toLowerCase()) &&\n      (!selectedId || discussion.courseId === selectedId)\n  );\n</script>\n\n<div class=\"flex justify-between\">\n  <Search\n    placeholder={$t('community.find_question')}\n    bind:value={searchValue}\n    searchClass=\"mr-2\"\n    class=\" bg-gray-100 dark:bg-neutral-800\"\n  />\n  <Dropdown\n    class=\"w-[25%] h-full\"\n    size=\"xl\"\n    label={$t('community.ask.select_course')}\n    items={[\n      { id: '', text: $t('community.all') },\n      ...allCourses.map((course) => ({ id: course.id, text: course.title }))\n    ]}\n    bind:selectedId\n  />\n</div>\n<div\n  class=\"flex items-center justify-center lg:justify-start flex-wrap my-4 m-auto border-c rounded bg-gray-100 dark:bg-neutral-800\"\n>\n  {#if isLoading}\n    <CommunityLoader />\n    <CommunityLoader />\n    <CommunityLoader />\n    <CommunityLoader />\n  {:else}\n    {#each filteredDiscussions as discussion}\n      <div class=\"w-full flex border-bottom-c p-3\">\n        <Vote value={discussion.votes} />\n        <div class=\"text-sm flex flex-col gap-y-0.5\">\n          <h4 class=\"mt-0\">\n            <a\n              class=\"text-black dark:text-white\"\n              href=\"{isLMS ? '/lms' : $currentOrgPath}/community/{discussion.slug}\"\n            >\n              {discussion.title}\n            </a>\n          </h4>\n          <span class=\"text-gray-600 dark:text-white\">\n            {discussion.author} asked {discussion.createdAt}\n          </span>\n          <a class=\"m-0\" href=\"/courses/{discussion.courseId}\">\n            <span class=\"text-xs text-primary-200 dark:text-black text-primary-700 p-0\">\n              #{discussion.courseTitle}\n            </span>\n          </a>\n        </div>\n        <Space />\n        <div class=\"flex items-center\">\n          <AddCommentIcon size={20} />\n          <span class=\"ml-1\">{discussion.comments}</span>\n        </div>\n      </div>\n    {:else}\n      <Box className=\"w-screen\">\n        <CoursesEmptyIcon />\n        <h3 class=\"dark:text-white text-2xl my-5\">{$t('community.no_question')}</h3>\n        <p class=\"dark:text-white w-1/3 text-center\">{$t('community.ask_a_question')}</p>\n      </Box>\n    {/each}\n  {/if}\n</div>\n\n<style>\n  h4 {\n    font-size: 16px;\n    font-weight: 900;\n    word-break: break-word;\n    overflow-wrap: break-word;\n    margin: 0;\n  }\n</style>\n"],"names":["size","$$props","title","$$invalidate","attributes","labelled","t1_value","ctx","t3_value","current","dirty","set_data","t1","t3","t5_value","t8_value","t12_value","attr","a0","a0_href_value","a1","a1_href_value","vote_changes","t5","t8","t12","func","search_changes","dropdown_changes","discussions","allCourses","fetchCommunityQuestions","orgId","profileId","$courses","courseResult","course","data","error","supabase","courseIdsFilter","discussion","_a","_b","_d","_c","$currentOrg","$profile","filteredDiscussions","searchValue","selectedId"],"mappings":"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","x_google_ignoreList":[0]}