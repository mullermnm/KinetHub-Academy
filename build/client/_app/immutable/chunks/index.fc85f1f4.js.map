{"version":3,"file":"index.fc85f1f4.js","sources":["../../../../../../../../node_modules/.pnpm/carbon-icons-svelte@12.3.0/node_modules/carbon-icons-svelte/lib/ApplicationWeb.svelte","../../../../../../../../node_modules/.pnpm/carbon-icons-svelte@12.3.0/node_modules/carbon-icons-svelte/lib/Badge.svelte","../../../../../../../../node_modules/.pnpm/carbon-icons-svelte@12.3.0/node_modules/carbon-icons-svelte/lib/Bullhorn.svelte","../../../../../../../../node_modules/.pnpm/carbon-icons-svelte@12.3.0/node_modules/carbon-icons-svelte/lib/Group.svelte","../../../../../../../../node_modules/.pnpm/carbon-icons-svelte@12.3.0/node_modules/carbon-icons-svelte/lib/IbmWatsonKnowledgeCatalog.svelte","../../../../../../../../node_modules/.pnpm/carbon-icons-svelte@12.3.0/node_modules/carbon-icons-svelte/lib/ListChecked.svelte","../../../../../../../../node_modules/.pnpm/carbon-icons-svelte@12.3.0/node_modules/carbon-icons-svelte/lib/Result.svelte","../../../../../../../../node_modules/.pnpm/carbon-icons-svelte@12.3.0/node_modules/carbon-icons-svelte/lib/TableOfContents.svelte","../../../../../../../../node_modules/.pnpm/carbon-icons-svelte@12.3.0/node_modules/carbon-icons-svelte/lib/Workspace.svelte","../../../../../../src/lib/components/PageBody/index.svelte","../../../../../../src/lib/components/Course/components/Lesson/store.ts","../../../../../../src/lib/components/Course/components/Navigation/constants.ts","../../../../../../src/lib/components/Course/components/Navigation/NavIcons.svelte","../../../../../../src/lib/components/Course/components/Navigation/NavExpandable.svelte","../../../../../../src/lib/components/Course/components/Lesson/functions.ts","../../../../../../src/lib/components/Course/components/Navigation/index.svelte","../../../../../../src/lib/components/CourseContainer/index.svelte"],"sourcesContent":["<script>\n  export let size = 16;\n\n  export let title = undefined;\n\n  $: labelled = $$props[\"aria-label\"] || $$props[\"aria-labelledby\"] || title;\n  $: attributes = {\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: Number($$props[\"tabindex\"]) === 0 ? true : undefined\n  };\n</script>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  width={size}\n  height={size}\n  {...attributes}\n  {...$$restProps}>\n  {#if title}<title>{title}</title>{/if}\n  <path d=\"M26 2H30V6H26zM26 8H30V12H26zM20 2H24V6H20zM20 8H24V12H20z\"></path><path d=\"M28,16v6H4V6H16V4H4A2,2,0,0,0,2,6V22a2,2,0,0,0,2,2h8v4H8v2H24V28H20V24h8a2,2,0,0,0,2-2V16ZM18,28H14V24h4Z\"></path>\n</svg>","<script>\n  export let size = 16;\n\n  export let title = undefined;\n\n  $: labelled = $$props[\"aria-label\"] || $$props[\"aria-labelledby\"] || title;\n  $: attributes = {\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: Number($$props[\"tabindex\"]) === 0 ? true : undefined\n  };\n</script>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  width={size}\n  height={size}\n  {...attributes}\n  {...$$restProps}>\n  {#if title}<title>{title}</title>{/if}\n  <path d=\"M23 2L24.593 5 28 5.414 25.5 7.667 26 11 23 9.125 20 11 20.5 7.667 18 5.414 21.5 5 23 2z\"></path><path d=\"M22.7168,13.249l-1.9375-.498A6.9942,6.9942,0,1,1,15.7505,4.22l.499-1.9365A8.99,8.99,0,0,0,8,17.689V30l6-4,6,4V17.7078A8.9627,8.9627,0,0,0,22.7168,13.249ZM18,26.2627l-4-2.6665-4,2.6665V19.05a8.9238,8.9238,0,0,0,8,.0062Z\"></path>\n</svg>","<script>\n  export let size = 16;\n\n  export let title = undefined;\n\n  $: labelled = $$props[\"aria-label\"] || $$props[\"aria-labelledby\"] || title;\n  $: attributes = {\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: Number($$props[\"tabindex\"]) === 0 ? true : undefined\n  };\n</script>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  width={size}\n  height={size}\n  {...attributes}\n  {...$$restProps}>\n  {#if title}<title>{title}</title>{/if}\n  <path d=\"M26,6V8.17L5.64,11.87a2,2,0,0,0-1.64,2v4.34a2,2,0,0,0,1.64,2L8,20.56V24a2,2,0,0,0,2,2h8a2,2,0,0,0,2-2V22.74l6,1.09V26h2V6ZM18,24H10V20.93l8,1.45ZM6,18.17V13.83L26,10.2V21.8Z\"></path>\n</svg>","<script>\n  export let size = 16;\n\n  export let title = undefined;\n\n  $: labelled = $$props[\"aria-label\"] || $$props[\"aria-labelledby\"] || title;\n  $: attributes = {\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: Number($$props[\"tabindex\"]) === 0 ? true : undefined\n  };\n</script>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  width={size}\n  height={size}\n  {...attributes}\n  {...$$restProps}>\n  {#if title}<title>{title}</title>{/if}\n  <path d=\"M31 30H29V27a3 3 0 00-3-3H22a3 3 0 00-3 3v3H17V27a5 5 0 015-5h4a5 5 0 015 5zM24 12a3 3 0 11-3 3 3 3 0 013-3m0-2a5 5 0 105 5A5 5 0 0024 10zM15 22H13V19a3 3 0 00-3-3H6a3 3 0 00-3 3v3H1V19a5 5 0 015-5h4a5 5 0 015 5zM8 4A3 3 0 115 7 3 3 0 018 4M8 2a5 5 0 105 5A5 5 0 008 2z\"></path>\n</svg>","<script>\n  export let size = 16;\n\n  export let title = undefined;\n\n  $: labelled = $$props[\"aria-label\"] || $$props[\"aria-labelledby\"] || title;\n  $: attributes = {\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: Number($$props[\"tabindex\"]) === 0 ? true : undefined\n  };\n</script>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  width={size}\n  height={size}\n  {...attributes}\n  {...$$restProps}>\n  {#if title}<title>{title}</title>{/if}\n  <path d=\"M23 27.2L20.4 24.6 19 26 23 30 30 23 28.6 21.6zM12 18H20V20H12zM12 13H20V15H12zM12 8H20V10H12z\"></path><path d=\"M16,28H6v-4h2v-2H6v-5h2v-2H6v-5h2V8H6V4h18v16h2V4c0-1.1-0.9-2-2-2H6C4.9,2,4,2.9,4,4v4H2v2h2v5H2v2h2v5H2v2h2v4\tc0,1.1,0.9,2,2,2h10V28z\"></path>\n</svg>","<script>\n  export let size = 16;\n\n  export let title = undefined;\n\n  $: labelled = $$props[\"aria-label\"] || $$props[\"aria-labelledby\"] || title;\n  $: attributes = {\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: Number($$props[\"tabindex\"]) === 0 ? true : undefined\n  };\n</script>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  width={size}\n  height={size}\n  {...attributes}\n  {...$$restProps}>\n  {#if title}<title>{title}</title>{/if}\n  <path d=\"M16 22H30V24H16zM14 19.4L12.6 18 6 24.6 3.4 22 2 23.4 6 27.4zM16 8H30V10H16zM14 5.4L12.6 4 6 10.6 3.4 8 2 9.4 6 13.4z\"></path>\n</svg>","<script>\n  export let size = 16;\n\n  export let title = undefined;\n\n  $: labelled = $$props[\"aria-label\"] || $$props[\"aria-labelledby\"] || title;\n  $: attributes = {\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: Number($$props[\"tabindex\"]) === 0 ? true : undefined\n  };\n</script>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  width={size}\n  height={size}\n  {...attributes}\n  {...$$restProps}>\n  {#if title}<title>{title}</title>{/if}\n  <path d=\"M14 23H22V25H14zM10 23H12V25H10zM14 18H22V20H14zM10 18H12V20H10zM14 13H22V15H14zM10 13H12V15H10z\"></path><path d=\"M25,5H22V4a2,2,0,0,0-2-2H12a2,2,0,0,0-2,2V5H7A2,2,0,0,0,5,7V28a2,2,0,0,0,2,2H25a2,2,0,0,0,2-2V7A2,2,0,0,0,25,5ZM12,4h8V8H12ZM25,28H7V7h3v3H22V7h3Z\"></path>\n</svg>","<script>\n  export let size = 16;\n\n  export let title = undefined;\n\n  $: labelled = $$props[\"aria-label\"] || $$props[\"aria-labelledby\"] || title;\n  $: attributes = {\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: Number($$props[\"tabindex\"]) === 0 ? true : undefined\n  };\n</script>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  width={size}\n  height={size}\n  {...attributes}\n  {...$$restProps}>\n  {#if title}<title>{title}</title>{/if}\n  <path d=\"M4 6H22V8H4zM4 12H22V14H4zM4 18H22V20H4zM4 24H22V26H4zM26 6H28V8H26zM26 12H28V14H26zM26 18H28V20H26zM26 24H28V26H26z\"></path>\n</svg>","<script>\n  export let size = 16;\n\n  export let title = undefined;\n\n  $: labelled = $$props[\"aria-label\"] || $$props[\"aria-labelledby\"] || title;\n  $: attributes = {\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: Number($$props[\"tabindex\"]) === 0 ? true : undefined\n  };\n</script>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  width={size}\n  height={size}\n  {...attributes}\n  {...$$restProps}>\n  {#if title}<title>{title}</title>{/if}\n  <path d=\"M16 17v8H6V17H16m0-2H6a2 2 0 00-2 2v8a2 2 0 002 2H16a2 2 0 002-2V17a2 2 0 00-2-2zM27 6v5H17V6H27m0-2H17a2 2 0 00-2 2v5a2 2 0 002 2H27a2 2 0 002-2V6a2 2 0 00-2-2zM27 17v5H22V17h5m0-2H22a2 2 0 00-2 2v5a2 2 0 002 2h5a2 2 0 002-2V17a2 2 0 00-2-2zM11 6v5H6V6h5m0-2H6A2 2 0 004 6v5a2 2 0 002 2h5a2 2 0 002-2V6a2 2 0 00-2-2z\"></path>\n</svg>","<script>\n  // import\n  //   border border-gray-300 rounded-md p-3 bg-primary-200 bg-opacity-25\n  export let width = 'max-w-4xl w-full lg:w-11/12';\n  export let padding = 'pb-5 px-4';\n  export let className = '';\n  export let headerClassName = '';\n  export let onClick = () => {};\n  export let isPageNavHidden = false;\n\n  $: padding = isPageNavHidden ? `pb-20 px-4` : padding;\n</script>\n\n<div\n  class=\"overflow-y-auto {isPageNavHidden\n    ? 'h-[calc(100vh-65px)] lg:h-[calc(100vh-127px)]'\n    : 'h-[calc(100vh-127px)]'} mt-4 mx-auto {width} {className} relative {padding}\"\n  on:click={onClick}\n>\n  {#if $$slots.header}\n    <div\n      class=\"head dark:bg-neutral-800 flex items-center justify-between sticky right-0 w-full px-3 {headerClassName}\"\n    >\n      <slot name=\"header\" />\n    </div>\n  {/if}\n\n  <slot />\n</div>\n\n<style>\n  .head {\n    top: 0px;\n    z-index: 1;\n  }\n</style>\n","import { writable } from 'svelte/store';\n\nexport const handleAddLessonWidget = writable({\n  id: '',\n  open: false,\n  isSection: false\n});\n","export const NAV_IDS = {\n  NEWS_FEED: 'NEWS_FEED',\n  LESSONS: 'LESSONS',\n  ATTENDANCE: 'ATTENDANCE',\n  SUBMISSIONS: 'SUBMISSIONS',\n  MARKS: 'MARKS',\n  CERTIFICATES: 'CERTIFICATES',\n  LANDING_PAGE: 'LANDING_PAGE',\n  PEOPLE: 'PEOPLE',\n  SETTINGS: 'SETTINGS',\n  SECTION: 'SECTION'\n};\n","<script>\n  import TableOfContents from 'carbon-icons-svelte/lib/TableOfContents.svelte'; // overview\n  import Result from 'carbon-icons-svelte/lib/Result.svelte';\n  import Workspace from 'carbon-icons-svelte/lib/Workspace.svelte';\n  import ListChecked from 'carbon-icons-svelte/lib/ListChecked.svelte';\n  import Group from 'carbon-icons-svelte/lib/Group.svelte';\n  import ApplicationWeb from 'carbon-icons-svelte/lib/ApplicationWeb.svelte';\n  import Badge from 'carbon-icons-svelte/lib/Badge.svelte';\n  import IbmWatsonKnowledgeCatalog from 'carbon-icons-svelte/lib/IbmWatsonKnowledgeCatalog.svelte';\n  import Settings from 'carbon-icons-svelte/lib/Settings.svelte';\n  import Bullhorn from 'carbon-icons-svelte/lib/Bullhorn.svelte';\n  import { NAV_IDS } from './constants';\n\n  export let name = '';\n</script>\n\n{#if name === NAV_IDS.SECTION}\n  <TableOfContents size={20} class=\"carbon-icon mr-2\" style=\"min-width: 20px;\" />\n{:else if name === NAV_IDS.NEWS_FEED}\n  <Bullhorn size={20} class=\"carbon-icon mr-2\" />\n{:else if name === NAV_IDS.LESSONS}\n  <IbmWatsonKnowledgeCatalog size={20} class=\"carbon-icon mr-2\" />\n{:else if name === NAV_IDS.ATTENDANCE}\n  <ListChecked size={20} class=\"carbon-icon mr-2\" />\n{:else if name === NAV_IDS.SUBMISSIONS}\n  <Workspace size={20} class=\"carbon-icon mr-2\" />\n{:else if name === NAV_IDS.MARKS}\n  <Result size={20} class=\"carbon-icon mr-2\" />\n{:else if name === NAV_IDS.PEOPLE}\n  <Group size={20} class=\"carbon-icon mr-2\" />\n{:else if name === NAV_IDS.LANDING_PAGE}\n  <ApplicationWeb size={20} class=\"carbon-icon mr-2\" />\n{:else if name === NAV_IDS.CERTIFICATES}\n  <Badge size={20} class=\"carbon-icon mr-2\" />\n{:else if name === NAV_IDS.SETTINGS}\n  <Settings size={20} class=\"carbon-icon mr-2\" />\n{/if}\n","<script lang=\"ts\">\n  import { slide } from 'svelte/transition';\n  import { ChevronDown, ChevronUp, Add, FlashFilled } from 'carbon-icons-svelte';\n  import { SkeletonText } from 'carbon-components-svelte';\n  import IconButton from '$lib/components/IconButton/index.svelte';\n  import { NavClasses } from '$lib/utils/constants/reusableClass';\n  import { handleAddLessonWidget } from '../Lesson/store';\n  import NavIcons from './NavIcons.svelte';\n  import { isFreePlan } from '$lib/utils/store/org';\n  import { goto } from '$app/navigation';\n  import { course } from '$lib/components/Course/store';\n  import { COURSE_VERSION } from '$lib/utils/types';\n\n  export let handleClick = () => {};\n  export let id = '';\n  export let name = '';\n  export let label = '';\n  export let isGroupActive = false;\n  export let isExpanded: boolean | undefined;\n  export let total = 0;\n  export let isLoading = true;\n  export let isLesson = false;\n  export let isSection = false;\n  export let isStudent = true;\n  export let isPaidFeature = false;\n  export let className = '';\n  export let btnPadding = 'py-3 px-4';\n\n  function addLesson() {\n    goto('/courses/' + $course.id + '/lessons');\n    $handleAddLessonWidget.open = true;\n\n    if ($course.version === COURSE_VERSION.V2) {\n      // If it is section, then add lesson to section\n      $handleAddLessonWidget.isSection = isSection ? false : true;\n\n      if (isSection) {\n        $handleAddLessonWidget.id = id;\n      }\n    }\n  }\n\n  function onClick() {\n    if (isSection) {\n      toggleIsExpanded();\n    }\n\n    handleClick();\n  }\n\n  function toggleIsExpanded() {\n    isExpanded = !isExpanded;\n  }\n</script>\n\n<div class={className}>\n  <button\n    class=\"item relative flex items-center {btnPadding} ml-2 mb-1 {NavClasses.item} {isGroupActive &&\n      !isLoading &&\n      NavClasses.active} w-[95%]\"\n    tabindex=\"0\"\n    on:click={onClick}\n    disabled={isLoading}\n  >\n    <NavIcons {name} />\n    {#if isLoading}\n      <div class=\"w-11/12 mx-auto\">\n        <SkeletonText class=\"rounded-md\" style=\"margin: 0px; height: 30px;\" />\n      </div>\n    {:else}\n      <span class=\"font-bold text-md text-start leading-4 line-clamp-2\">{label}</span>\n      {#if total}\n        <span class=\"ml-1\">({total})</span>\n      {/if}\n    {/if}\n    <span class=\"grow\" />\n\n    {#if isPaidFeature && $isFreePlan}\n      <FlashFilled size={20} class=\"text-blue-700\" />\n    {/if}\n    {#if (isLesson || isSection) && !isLoading && !isStudent}\n      <IconButton stopPropagation={true} onClick={addLesson} size=\"small\">\n        <Add />\n      </IconButton>\n      <IconButton size=\"small\" stopPropagation={true} onClick={toggleIsExpanded}>\n        {#if isExpanded}\n          <ChevronUp class=\"carbon-icon dark:text-white\" />\n        {:else}\n          <ChevronDown class=\"carbon-icon dark:text-white\" />\n        {/if}\n      </IconButton>\n    {/if}\n  </button>\n  {#if isExpanded && !isLoading}\n    <div in:slide out:slide class=\"flex flex-col\">\n      <slot />\n    </div>\n  {/if}\n</div>\n","import type { LessonCompletion } from '$lib/utils/types';\n\nexport function getUniqueValue(label: string) {\n  return label.toLowerCase().replace(' ', '');\n}\n\nexport function generateQuestion(questions) {\n  const generatedQuestions = [];\n\n  for (const question of questions) {\n    const name = getUniqueValue(question.title);\n    const options = question.options.map((option) => {\n      option.value = getUniqueValue(option.label);\n      return option;\n    });\n\n    generatedQuestions.push({\n      ...question,\n      name,\n      options\n    });\n  }\n\n  return generatedQuestions;\n}\n\nexport function getIsLessonComplete(\n  completions: LessonCompletion[],\n  profileId: string | undefined\n): boolean {\n  if (!Array.isArray(completions)) return false;\n  return completions.some((c) => {\n    return c.is_complete && c.profile_id === profileId;\n  });\n}\n","<script lang=\"ts\">\n  import { onDestroy, onMount } from 'svelte';\n  import { goto } from '$app/navigation';\n  import { page } from '$app/stores';\n  import { browser } from '$app/environment';\n  import TextChip from '$lib/components/Chip/Text.svelte';\n  import LockedIcon from 'carbon-icons-svelte/lib/Locked.svelte';\n  import CheckmarkFilled from 'carbon-icons-svelte/lib/CheckmarkFilled.svelte';\n  import NavExpandable from './NavExpandable.svelte';\n  import { getNavItemRoute, getLessonsRoute, getLectureNo } from '$lib/components/Course/function';\n  import { lessons, lessonSections } from '../Lesson/store/lessons';\n  import { course } from '$lib/components/Course/store';\n  import { NavClasses } from '$lib/utils/constants/reusableClass';\n  import { isMobile } from '$lib/utils/store/useMobile';\n  import { sideBar } from '$lib/components/Org/store';\n  import { profile } from '$lib/utils/store/user';\n  import { getIsLessonComplete } from '../Lesson/functions';\n  import { currentOrg, isFreePlan } from '$lib/utils/store/org';\n  import { t } from '$lib/utils/functions/translations';\n  import { COURSE_TYPE, COURSE_VERSION, type Lesson } from '$lib/utils/types';\n  import { NAV_IDS } from './constants';\n\n  export let path: string;\n  export let isStudent: boolean = false;\n\n  interface Section {\n    id: string;\n    order: number;\n    label: string;\n    lessons: Lesson[];\n    isExpanded?: boolean;\n  }\n  interface NavItem {\n    id: string;\n    label: string;\n    to: string;\n    hideSortIcon: boolean;\n    isLesson?: boolean;\n    isPaidFeature: boolean;\n    isExpanded?: boolean;\n    sections?: Section[];\n    show?: () => boolean;\n  }\n\n  let resize = false;\n  let isDragging = false;\n  let startX: number;\n  let initialWidth: number;\n  let sidebarRef: HTMLElement;\n  let menuContentRef: HTMLUListElement;\n\n  const toggleSidebar = (defaultValue?: boolean) => {\n    $sideBar.hidden = defaultValue ?? !$sideBar.hidden;\n  };\n  const toggleSidebarOnMobile = () => $isMobile && toggleSidebar();\n\n  function handleMainGroupClick(href: string) {\n    return () => {\n      goto(href);\n      toggleSidebarOnMobile();\n    };\n  }\n\n  let navItems: NavItem[] = [];\n\n  function handleCursor(event: MouseEvent) {\n    if (!resize && sidebarRef) {\n      const isNearLeftBorder = event.clientX - sidebarRef.getBoundingClientRect().left < 8;\n      const isNearRightBorder = sidebarRef.getBoundingClientRect().right - event.clientX < 8;\n\n      if (isNearLeftBorder || isNearRightBorder) {\n        sidebarRef.style.cursor = 'ew-resize';\n      } else {\n        sidebarRef.style.cursor = 'auto';\n      }\n    }\n  }\n\n  function startDragging(event: MouseEvent) {\n    if (event.button === 0 && sidebarRef) {\n      event.preventDefault();\n\n      const isNearRightBorder = sidebarRef.getBoundingClientRect().right - event.clientX < 8;\n      const isNearLeftBorder = event.clientX - sidebarRef.getBoundingClientRect().left < 8;\n\n      if (\n        (isNearRightBorder || isNearLeftBorder) &&\n        event.clientX >= 0 &&\n        event.clientX <= window.innerWidth\n      ) {\n        isDragging = true;\n        resize = true;\n        startX = event.clientX;\n        initialWidth = parseInt(getComputedStyle(sidebarRef).width, 10);\n      }\n    }\n  }\n\n  function stopDragging() {\n    isDragging = false;\n    resize = false;\n  }\n\n  function dragSidebar(event: MouseEvent) {\n    if (!(window.innerWidth >= 1024)) return;\n    if (!isDragging) return;\n\n    const deltaX = event.clientX - startX;\n    let newWidth = initialWidth + deltaX;\n\n    if (newWidth < 150) {\n      sidebarRef.style.width = '0';\n      menuContentRef.style.display = 'none';\n      $sideBar.hidden = true;\n      isDragging = false;\n      resize = false;\n    } else if (newWidth > window.innerWidth / 3 && window.innerWidth >= 1280) {\n      sidebarRef.style.width = '40vw';\n    } else if (newWidth > window.innerWidth / 4 && window.innerWidth < 1280) {\n      sidebarRef.style.width = '28vw';\n    } else {\n      sidebarRef.style.width = newWidth + 'px';\n      menuContentRef.style.display = 'block';\n    }\n  }\n\n  onMount(() => {\n    if (!$isMobile) {\n      sidebarRef.addEventListener('mousedown', startDragging);\n      document.addEventListener('mousemove', dragSidebar);\n      document.addEventListener('mouseup', stopDragging);\n      document.addEventListener('mousemove', handleCursor);\n      toggleSidebar(false);\n    }\n  });\n\n  onDestroy(() => {\n    if (!browser) {\n      return;\n    }\n    if (!$isMobile) {\n      sidebarRef.removeEventListener('mousedown', startDragging);\n      document.removeEventListener('mousemove', dragSidebar);\n      document.removeEventListener('mouseup', stopDragging);\n      document.removeEventListener('mousemove', handleCursor);\n    }\n  });\n\n  $: {\n    navItems = [\n      {\n        id: NAV_IDS.NEWS_FEED,\n        label: $t('course.navItems.nav_news_feed'),\n        to: getNavItemRoute($course.id),\n        hideSortIcon: true,\n        isPaidFeature: false,\n        show() {\n          return isStudent ? $currentOrg.customization.course.newsfeed : true;\n        }\n      },\n      {\n        id: NAV_IDS.LESSONS,\n        label: $t('course.navItems.nav_content'),\n        to: getLessonsRoute($course.id),\n        hideSortIcon: false,\n        isPaidFeature: false,\n        isLesson: true,\n        sections: $lessonSections.map((section) => ({\n          ...section,\n          label: section.title,\n          isExpanded: true\n        })),\n        isExpanded: isStudent ? true : $page.url.pathname.includes('/lessons')\n      },\n      {\n        id: NAV_IDS.ATTENDANCE,\n        label: $t('course.navItems.nav_attendance'),\n        to: getNavItemRoute($course.id, 'attendance'),\n        isPaidFeature: false,\n        hideSortIcon: true,\n        show() {\n          if ($course.type !== COURSE_TYPE.LIVE_CLASS) return false;\n\n          return true;\n        }\n      },\n      {\n        id: NAV_IDS.SUBMISSIONS,\n        label: $t('course.navItems.nav_submissions'),\n        to: getNavItemRoute($course.id, 'submissions'),\n        hideSortIcon: true,\n        isPaidFeature: false,\n        show() {\n          if (isStudent) return false;\n\n          return true;\n        }\n      },\n      {\n        id: NAV_IDS.MARKS,\n        label: $t('course.navItems.nav_marks'),\n        to: getNavItemRoute($course.id, 'marks'),\n        isPaidFeature: false,\n        hideSortIcon: true,\n        show() {\n          if ($course.type == COURSE_TYPE.LIVE_CLASS) {\n            return isStudent ? $currentOrg.customization.course.grading : true;\n          }\n\n          return false;\n        }\n      },\n      {\n        id: NAV_IDS.CERTIFICATES,\n        label: $t('course.navItems.nav_certificates'),\n        to: getNavItemRoute($course.id, 'certificates'),\n        hideSortIcon: true,\n        isPaidFeature: true,\n        show() {\n          // Dont show students if org on free plan\n          if (isStudent && $isFreePlan) {\n            return false;\n          }\n          return true;\n        }\n      },\n      {\n        id: NAV_IDS.LANDING_PAGE,\n        label: $t('course.navItems.nav_landing_page'),\n        to: getNavItemRoute($course.id, 'landingpage'),\n        hideSortIcon: true,\n        isPaidFeature: false,\n        show() {\n          return !isStudent;\n        }\n      },\n      {\n        id: NAV_IDS.PEOPLE,\n        label: $t('course.navItems.nav_people'),\n        to: getNavItemRoute($course.id, 'people'),\n        isPaidFeature: false,\n        hideSortIcon: true,\n        show() {\n          return !isStudent;\n        }\n      },\n      {\n        id: NAV_IDS.SETTINGS,\n        label: $t('course.navItems.nav_settings'),\n        to: getNavItemRoute($course.id, 'settings'),\n        hideSortIcon: true,\n        isPaidFeature: false,\n        show() {\n          return !isStudent;\n        }\n      }\n    ];\n  }\n</script>\n\n<aside\n  class={`\n  ${\n    $sideBar.hidden\n      ? '-translate-x-[100%] absolute z-[40]'\n      : 'translate-x-0 absolute md:relative z-[40]'\n  }\n    transition w-[90vw] md:w-[300px] lg:w-[350px] bg-gray-100 dark:bg-black h-[calc(100vh-48px)] \n  \n  ${\n    resize ? 'border-r-8 border-r-blue-500' : 'dark:border-r-neutral-600'\n  } overflow-y-auto border border-l-0 border-t-0 border-b-0 border-r-1`}\n  style={$sideBar.hidden === true ? 'width:0' : 'width:300px'}\n  bind:this={sidebarRef}\n>\n  <div class=\"flex flex-col\">\n    <ul\n      class=\"sidebar-content my-5\"\n      bind:this={menuContentRef}\n      style={$sideBar.hidden === true ? '' : 'display:block'}\n    >\n      {#each navItems as navItem}\n        {#if !navItem.show || (typeof navItem.show === 'function' && navItem.show())}\n          <NavExpandable\n            id={navItem.id}\n            name={navItem.id}\n            label={navItem.label}\n            handleClick={handleMainGroupClick(navItem.to)}\n            isGroupActive={(path || $page.url.pathname) === navItem.to}\n            total={navItem.isLesson ? ($lessons || []).length : 0}\n            isLoading={!$course.id}\n            isLesson={navItem.isLesson}\n            isPaidFeature={navItem.isPaidFeature}\n            isExpanded={navItem.isExpanded}\n            {isStudent}\n          >\n            {#if $course.version === COURSE_VERSION.V1}\n              {#each $lessons as item, index}\n                <a\n                  class=\"pl-7 w-[95%] text-[0.80rem] mb-2 text-black dark:text-white {isStudent &&\n                  !item.is_unlocked\n                    ? 'cursor-not-allowed'\n                    : ''}\"\n                  href={isStudent && !item.is_unlocked\n                    ? $page.url.pathname\n                    : getLessonsRoute($course.id, item.id)}\n                  on:click={toggleSidebarOnMobile}\n                  aria-disabled={!item.is_unlocked}\n                  title={item.title}\n                >\n                  <div\n                    class=\"flex items-center py-2 px-4 {NavClasses.item} {(\n                      path || $page.url.pathname\n                    ).includes(item.id) && NavClasses.active}\"\n                  >\n                    <TextChip\n                      value={getLectureNo(index + 1)}\n                      className=\"bg-primary-200 text-primary-600 text-xs mr-2\"\n                      size=\"sm\"\n                      shape=\"rounded-full\"\n                    />\n                    <span class=\"w-[85%] text-ellipsis line-clamp-2\">{item.title}</span>\n                    <span class=\"grow\" />\n                    {#if !item.is_unlocked}\n                      <span class=\"text-md ml-2\" title=\"This lesson is locked.\">\n                        <LockedIcon class=\"carbon-icon dark:text-white\" />\n                      </span>\n                    {:else if getIsLessonComplete(item.lesson_completion, $profile.id)}\n                      <span class=\"ml-2\" title=\"You have completed this lesson\">\n                        <CheckmarkFilled class=\"carbon-icon dark:text-white\" />\n                      </span>\n                    {/if}\n                  </div>\n                </a>\n              {/each}\n            {:else if navItem.sections}\n              {#each navItem.sections as section}\n                <NavExpandable\n                  id={section.id}\n                  name={NAV_IDS.SECTION}\n                  label={section.label}\n                  isLoading={!$course.id}\n                  isSection={true}\n                  isExpanded={section.isExpanded}\n                  className=\"ml-4\"\n                  btnPadding=\"py-2 px-3\"\n                  {isStudent}\n                >\n                  {#each section.lessons as item}\n                    <a\n                      class=\"pl-7 w-[95%] text-[0.80rem] mb-2 text-black dark:text-white {isStudent &&\n                      !item.is_unlocked\n                        ? 'cursor-not-allowed'\n                        : ''}\"\n                      href={isStudent && !item.is_unlocked\n                        ? $page.url.pathname\n                        : getLessonsRoute($course.id, item.id)}\n                      on:click={toggleSidebarOnMobile}\n                      aria-disabled={!item.is_unlocked}\n                      title={item.title}\n                    >\n                      <div\n                        class=\"flex items-center py-2 px-4 {NavClasses.item} {(\n                          path || $page.url.pathname\n                        ).includes(item.id) && NavClasses.active}\"\n                      >\n                        <span class=\"w-[85%] text-ellipsis line-clamp-2\">{item.title}</span>\n                        <span class=\"grow\" />\n                        {#if !item.is_unlocked}\n                          <span class=\"text-md ml-2\" title=\"This lesson is locked.\">\n                            <LockedIcon class=\"carbon-icon dark:text-white\" />\n                          </span>\n                        {:else if getIsLessonComplete(item.lesson_completion, $profile.id)}\n                          <span class=\"ml-2\" title=\"You have completed this lesson\">\n                            <CheckmarkFilled class=\"carbon-icon dark:text-white\" />\n                          </span>\n                        {/if}\n                      </div>\n                    </a>\n                  {/each}\n                </NavExpandable>\n              {/each}\n            {/if}\n          </NavExpandable>\n        {/if}\n      {/each}\n    </ul>\n  </div>\n</aside>\n","<script lang=\"ts\">\n  import { goto } from '$app/navigation';\n  import { Moon } from 'svelte-loading-spinners';\n  import { browser } from '$app/environment';\n  import Navigation from '../Course/components/Navigation/index.svelte';\n  import Backdrop from '$lib/components/Backdrop/index.svelte';\n  import { course, group, setCourse, defaultCourse } from '../Course/store';\n  import Confetti from '../Confetti/index.svelte';\n  import { isMobile } from '$lib/utils/store/useMobile';\n  import { profile } from '$lib/utils/store/user';\n  import { fetchCourse } from '$lib/utils/services/courses';\n  import { globalStore } from '$lib/utils/store/app';\n  import { lessons } from '../Course/components/Lesson/store/lessons';\n  import Modal from '$lib/components/Modal/index.svelte';\n  import { t } from '$lib/utils/functions/translations';\n  import PrimaryButton from '$lib/components/PrimaryButton/index.svelte';\n  import { isOrgAdmin } from '$lib/utils/store/org';\n\n  export let courseId = '';\n  export let path = '';\n  export let isExercisePage = false;\n  export let isFetching = false;\n  export let containerClass = '';\n\n  let prevCourseId = '';\n  let isPermitted = true;\n\n  async function onCourseIdChange(courseId = '') {\n    if (!courseId || prevCourseId === courseId || !browser || $course.id === courseId) return;\n\n    isFetching = true;\n    course.set(defaultCourse);\n    lessons.set([]);\n\n    const { data: _data } = await fetchCourse(courseId);\n\n    if (_data) {\n      $course.type = _data.type;\n      setCourse(_data);\n    }\n\n    isFetching = false;\n    prevCourseId = courseId;\n  }\n\n  function filterPollsByStatus(shouldFilter: boolean) {\n    if (!shouldFilter) return;\n\n    $course.polls = $course.polls.filter((poll) => poll.status === 'published');\n  }\n\n  $: onCourseIdChange(courseId);\n\n  $: {\n    const user = $group.people.find((person) => person.profile_id === $profile.id);\n    if (user) {\n      $globalStore.isStudent = user.role_id === 3;\n\n      filterPollsByStatus($globalStore.isStudent);\n    } else if (!$isOrgAdmin && $profile.id && $group.people.length) {\n      // Current User doesn't have permission to view\n      isPermitted = false;\n    }\n  }\n</script>\n\n<svelte:head>\n  <title>{$course.title || 'KinetsHub Course'}</title>\n</svelte:head>\n\n{#if isFetching}\n  <Backdrop>\n    <Moon size=\"60\" color=\"#1d4ed8\" unit=\"px\" duration=\"1s\" />\n  </Backdrop>\n{/if}\n\n<Modal open={!isPermitted} width=\"w-96\" modalHeading={$t('course.not_permitted.header')}>\n  <div>\n    <p class=\"dark:text-white text-md text-center\">\n      {$t('course.not_permitted.body')}\n    </p>\n\n    <div class=\"mt-5 flex justify-center\">\n      <PrimaryButton\n        className=\"px-6 py-3\"\n        label={$t('course.not_permitted.button')}\n        onClick={() => {\n          goto('/org/*');\n        }}\n      />\n    </div>\n  </div>\n</Modal>\n\n<div class=\"root\">\n  <Navigation {path} isStudent={$globalStore.isStudent} />\n  <div class=\"rightBar {containerClass}\" class:isMobile={$isMobile}>\n    {#if isExercisePage}\n      <Confetti />\n    {/if}\n\n    <!-- Show only if permitted -->\n    {#if isPermitted}\n      <slot />\n    {/if}\n  </div>\n</div>\n\n<style>\n  .root {\n    display: flex;\n    width: 100%;\n  }\n\n  .rightBar {\n    flex-grow: 1;\n    width: calc(100% - 360px);\n  }\n</style>\n"],"names":["size","$$props","title","$$invalidate","attributes","labelled","if_block","ctx","create_if_block$4","attr","div","div_class_value","is_function","current","dirty","width","padding","className","headerClassName","isPageNavHidden","handleAddLessonWidget","writable","NAV_IDS","name","if_block1","create_if_block_3$1","if_block2","create_if_block_1$2","if_block3","create_if_block$2","handleClick","isExpanded","addLesson","set_store_value","$handleAddLessonWidget","$course","COURSE_VERSION","isSection","id","onClick","toggleIsExpanded","getIsLessonComplete","completions","profileId","c","navexpandable_changes","each_value_2","ensure_array_like","t0_value","show_if","NavClasses","getLessonsRoute","a","a_aria_disabled_value","a_title_value","set_data","t0","each_value_3","t1_value","t1","path","startX","initialWidth","sidebarRef","menuContentRef","toggleSidebarOnMobile","$isMobile","toggleSidebar","goto","href","navItems","isNearLeftBorder","event","isNearRightBorder","stopDragging","isDragging","deltaX","newWidth","sideBar","$sideBar","onMount","onDestroy","$t","isStudent","$currentOrg","$lessonSections","section","COURSE_TYPE","primarybutton_changes","modal_changes","navigation_changes","onCourseIdChange","courseId2","courseId","course","defaultCourse","_data","setCourse","shouldFilter","poll","user","$group","person","$profile","filterPollsByStatus","$globalStore"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8]}