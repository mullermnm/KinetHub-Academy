{"version":3,"file":"0.fe6acf45.js","sources":["../../../../../../../../node_modules/.pnpm/svelte-meta-tags@3.1.2_svelte@4.1.2_typescript@5.1.6/node_modules/svelte-meta-tags/dist/MetaTags.svelte","../../../../../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_assignMergeValue.js","../../../../../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_createBaseFor.js","../../../../../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseFor.js","../../../../../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isArrayLikeObject.js","../../../../../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isPlainObject.js","../../../../../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_safeGet.js","../../../../../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/toPlainObject.js","../../../../../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseMergeDeep.js","../../../../../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseMerge.js","../../../../../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/identity.js","../../../../../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_apply.js","../../../../../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_overRest.js","../../../../../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/constant.js","../../../../../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseSetToString.js","../../../../../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_shortOut.js","../../../../../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_setToString.js","../../../../../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseRest.js","../../../../../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_isIterateeCall.js","../../../../../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_createAssigner.js","../../../../../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/merge.js","../../../../../../../../node_modules/.pnpm/carbon-components-svelte@0.79.0/node_modules/carbon-components-svelte/src/LocalStorage/LocalStorage.svelte","../../../../../../../../node_modules/.pnpm/carbon-components-svelte@0.79.0/node_modules/carbon-components-svelte/src/Notification/NotificationButton.svelte","../../../../../../../../node_modules/.pnpm/carbon-components-svelte@0.79.0/node_modules/carbon-components-svelte/src/icons/InformationFilled.svelte","../../../../../../../../node_modules/.pnpm/carbon-components-svelte@0.79.0/node_modules/carbon-components-svelte/src/icons/InformationSquareFilled.svelte","../../../../../../../../node_modules/.pnpm/carbon-components-svelte@0.79.0/node_modules/carbon-components-svelte/src/Notification/NotificationIcon.svelte","../../../../../../../../node_modules/.pnpm/carbon-components-svelte@0.79.0/node_modules/carbon-components-svelte/src/Notification/ToastNotification.svelte","../../../../../../../../node_modules/.pnpm/carbon-components-svelte@0.79.0/node_modules/carbon-components-svelte/src/Notification/InlineNotification.svelte","../../../../../../../../node_modules/.pnpm/carbon-components-svelte@0.79.0/node_modules/carbon-components-svelte/src/Theme/Theme.svelte","../../../../../../../../node_modules/.pnpm/carbon-icons-svelte@12.3.0/node_modules/carbon-icons-svelte/lib/Notification.svelte","../../../../../../../../node_modules/.pnpm/carbon-icons-svelte@12.3.0/node_modules/carbon-icons-svelte/lib/Moon.svelte","../../../../../../../../node_modules/.pnpm/carbon-icons-svelte@12.3.0/node_modules/carbon-icons-svelte/lib/Sun.svelte","../../../../../../../../node_modules/.pnpm/carbon-icons-svelte@12.3.0/node_modules/carbon-icons-svelte/lib/Menu.svelte","../../../../../../src/lib/components/Navigation/app.svelte","../../../../../../../../node_modules/.pnpm/carbon-icons-svelte@12.3.0/node_modules/carbon-icons-svelte/lib/ChartPie.svelte","../../../../../../../../node_modules/.pnpm/carbon-icons-svelte@12.3.0/node_modules/carbon-icons-svelte/lib/Checkmark.svelte","../../../../../../src/lib/components/Navigation/lms.svelte","../../../../../../src/lib/utils/functions/string.ts","../../../../../../src/lib/components/Snackbar/index.svelte","../../../../../../src/lib/components/Page/Restricted.svelte","../../../../../../src/lib/components/Apps/components/QandA/index.svelte","../../../../../../src/lib/components/Apps/components/Comments/index.svelte","../../../../../../src/lib/components/Apps/components/Poll/components/CreatePollForm.svelte","../../../../../../src/lib/components/Apps/components/Poll/store.ts","../../../../../../src/lib/components/Apps/components/Poll/service.ts","../../../../../../src/lib/components/Apps/components/Poll/components/Poll.svelte","../../../../../../src/lib/components/Apps/components/Poll/components/Tabs.svelte","../../../../../../src/lib/components/Apps/components/Poll/utils.ts","../../../../../../src/lib/components/Apps/components/Poll/index.svelte","../../../../../../src/lib/components/Apps/index.svelte","../../../../../../../../node_modules/.pnpm/svelte-loading-spinners@0.3.4/node_modules/svelte-loading-spinners/utils.js","../../../../../../../../node_modules/.pnpm/svelte-loading-spinners@0.3.4/node_modules/svelte-loading-spinners/SyncLoader.svelte","../../../../../../src/lib/components/Org/Quiz/Play/ConnectToPlay.svelte","../../../../../../src/lib/components/Org/Quiz/Play/Players.svelte","../../../../../../src/lib/components/Org/Quiz/Play/Question.svelte","../../../../../../src/lib/components/Org/Quiz/Play/Scoreboard.svelte","../../../../../../src/lib/components/Org/Quiz/Play/Podium.svelte","../../../../../../src/lib/components/Org/Quiz/Play/index.svelte","../../../../../../src/lib/utils/functions/showAppsSideBar.js","../../../../../../src/lib/utils/functions/routes/isPublicRoute.js","../../../../../../src/lib/utils/functions/routes/hideNavByRoute.ts","../../../../../../src/lib/utils/functions/routes/shouldRedirectOnAuth.ts","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/is.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/string.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/aggregate-errors.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/worldwide.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/browser.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/logger.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/dsn.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/error.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/object.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/stacktrace.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/supports.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/vendor/supportsHistory.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/instrument.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/memo.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/misc.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/env.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/node.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/normalize.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/syncpromise.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/promisebuffer.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/url.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/severity.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/time.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/envelope.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/clientreport.js","../../../../../../../../node_modules/.pnpm/@sentry+utils@7.61.0/node_modules/@sentry/utils/esm/ratelimit.js","../../../../../../../../node_modules/.pnpm/@sentry+core@7.61.0/node_modules/@sentry/core/esm/constants.js","../../../../../../../../node_modules/.pnpm/@sentry+core@7.61.0/node_modules/@sentry/core/esm/session.js","../../../../../../../../node_modules/.pnpm/@sentry+core@7.61.0/node_modules/@sentry/core/esm/scope.js","../../../../../../../../node_modules/.pnpm/@sentry+core@7.61.0/node_modules/@sentry/core/esm/hub.js","../../../../../../../../node_modules/.pnpm/@sentry+core@7.61.0/node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js","../../../../../../../../node_modules/.pnpm/@sentry+core@7.61.0/node_modules/@sentry/core/esm/exports.js","../../../../../../../../node_modules/.pnpm/@sentry+core@7.61.0/node_modules/@sentry/core/esm/api.js","../../../../../../../../node_modules/.pnpm/@sentry+core@7.61.0/node_modules/@sentry/core/esm/envelope.js","../../../../../../../../node_modules/.pnpm/@sentry+core@7.61.0/node_modules/@sentry/core/esm/integration.js","../../../../../../../../node_modules/.pnpm/@sentry+core@7.61.0/node_modules/@sentry/core/esm/utils/prepareEvent.js","../../../../../../../../node_modules/.pnpm/@sentry+core@7.61.0/node_modules/@sentry/core/esm/baseclient.js","../../../../../../../../node_modules/.pnpm/@sentry+core@7.61.0/node_modules/@sentry/core/esm/sdk.js","../../../../../../../../node_modules/.pnpm/@sentry+core@7.61.0/node_modules/@sentry/core/esm/transports/base.js","../../../../../../../../node_modules/.pnpm/@sentry+core@7.61.0/node_modules/@sentry/core/esm/version.js","../../../../../../../../node_modules/.pnpm/@sentry+core@7.61.0/node_modules/@sentry/core/esm/integrations/functiontostring.js","../../../../../../../../node_modules/.pnpm/@sentry+core@7.61.0/node_modules/@sentry/core/esm/integrations/inboundfilters.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@7.61.0/node_modules/@sentry/browser/esm/helpers.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@7.61.0/node_modules/@sentry/browser/esm/eventbuilder.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@7.61.0/node_modules/@sentry/browser/esm/integrations/breadcrumbs.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@7.61.0/node_modules/@sentry/browser/esm/userfeedback.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@7.61.0/node_modules/@sentry/browser/esm/client.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@7.61.0/node_modules/@sentry/browser/esm/transports/utils.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@7.61.0/node_modules/@sentry/browser/esm/transports/fetch.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@7.61.0/node_modules/@sentry/browser/esm/transports/xhr.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@7.61.0/node_modules/@sentry/browser/esm/stack-parsers.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@7.61.0/node_modules/@sentry/browser/esm/integrations/globalhandlers.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@7.61.0/node_modules/@sentry/browser/esm/integrations/trycatch.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@7.61.0/node_modules/@sentry/browser/esm/integrations/linkederrors.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@7.61.0/node_modules/@sentry/browser/esm/integrations/httpcontext.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@7.61.0/node_modules/@sentry/browser/esm/integrations/dedupe.js","../../../../../../../../node_modules/.pnpm/@sentry+browser@7.61.0/node_modules/@sentry/browser/esm/sdk.js","../../../../../../../../node_modules/.pnpm/@sentry+replay@7.61.0/node_modules/@sentry/replay/esm/index.js","../../../../../../../../node_modules/.pnpm/@sentry+integrations@7.61.0/node_modules/@sentry/integrations/esm/captureconsole.js","../../../../../../src/lib/utils/services/sentry/index.ts","../../../../../../src/lib/utils/services/lemonsqueezy/subscribe.ts","../../../../../../src/lib/components/Upgrade/Modal.svelte","../../../../../../src/routes/+layout.svelte"],"sourcesContent":["<script>export let title = \"\";\nexport let titleTemplate = \"\";\nexport let robots = \"index,follow\";\nexport let additionalRobotsProps = void 0;\nexport let description = void 0;\nexport let mobileAlternate = void 0;\nexport let languageAlternates = void 0;\nexport let twitter = void 0;\nexport let facebook = void 0;\nexport let openGraph = void 0;\nexport let canonical = void 0;\nexport let keywords = void 0;\nexport let additionalMetaTags = void 0;\nexport let additionalLinkTags = void 0;\n$:\n  updatedTitle = titleTemplate ? title ? titleTemplate.replace(/%s/g, title) : title : title;\nlet robotsParams = \"\";\nif (additionalRobotsProps) {\n  const {\n    nosnippet,\n    maxSnippet,\n    maxImagePreview,\n    maxVideoPreview,\n    noarchive,\n    noimageindex,\n    notranslate,\n    unavailableAfter\n  } = additionalRobotsProps;\n  robotsParams = `${nosnippet ? \",nosnippet\" : \"\"}${maxSnippet ? `,max-snippet:${maxSnippet}` : \"\"}${maxImagePreview ? `,max-image-preview:${maxImagePreview}` : \"\"}${noarchive ? \",noarchive\" : \"\"}${unavailableAfter ? `,unavailable_after:${unavailableAfter}` : \"\"}${noimageindex ? \",noimageindex\" : \"\"}${maxVideoPreview ? `,max-video-preview:${maxVideoPreview}` : \"\"}${notranslate ? \",notranslate\" : \"\"}`;\n}\n$:\n  if (!robots && additionalRobotsProps) {\n    console.warn(\"additionalRobotsProps cannot be used when robots is set to false\");\n  }\n</script>\n\n<svelte:head>\n  {#key updatedTitle}\n    {#if updatedTitle}\n      <title>{updatedTitle}</title>\n    {/if}\n  {/key}\n\n  {#if robots !== false}\n    <meta name=\"robots\" content=\"{robots}{robotsParams}\" />\n  {/if}\n\n  {#if description}\n    <meta name=\"description\" content={description} />\n  {/if}\n\n  {#if canonical}\n    <link rel=\"canonical\" href={canonical} />\n  {/if}\n\n  {#if keywords?.length}\n    <meta name=\"keywords\" content={keywords.join(', ')} />\n  {/if}\n\n  {#if mobileAlternate}\n    <link rel=\"alternate\" media={mobileAlternate.media} href={mobileAlternate.href} />\n  {/if}\n\n  {#if languageAlternates && languageAlternates.length > 0}\n    {#each languageAlternates as languageAlternate}\n      <link rel=\"alternate\" hrefLang={languageAlternate.hrefLang} href={languageAlternate.href} />\n    {/each}\n  {/if}\n\n  {#if twitter}\n    {#if twitter.cardType}\n      <meta name=\"twitter:card\" content={twitter.cardType} />\n    {/if}\n    {#if twitter.site}\n      <meta name=\"twitter:site\" content={twitter.site} />\n    {/if}\n    {#if twitter.handle}\n      <meta name=\"twitter:creator\" content={twitter.handle} />\n    {/if}\n    {#if twitter.title}\n      <meta name=\"twitter:title\" content={twitter.title} />\n    {/if}\n    {#if twitter.description}\n      <meta name=\"twitter:description\" content={twitter.description} />\n    {/if}\n    {#if twitter.image}\n      <meta name=\"twitter:image\" content={twitter.image} />\n    {/if}\n    {#if twitter.imageAlt}\n      <meta name=\"twitter:image:alt\" content={twitter.imageAlt} />\n    {/if}\n  {/if}\n\n  {#if facebook}\n    <meta property=\"fb:app_id\" content={facebook.appId} />\n  {/if}\n\n  {#if openGraph}\n    {#if openGraph.url || canonical}\n      <meta property=\"og:url\" content={openGraph.url || canonical} />\n    {/if}\n\n    {#if openGraph.type}\n      <meta property=\"og:type\" content={openGraph.type.toLowerCase()} />\n      {#if openGraph.type.toLowerCase() === 'profile' && openGraph.profile}\n        {#if openGraph.profile.firstName}\n          <meta property=\"profile:first_name\" content={openGraph.profile.firstName} />\n        {/if}\n\n        {#if openGraph.profile.lastName}\n          <meta property=\"profile:last_name\" content={openGraph.profile.lastName} />\n        {/if}\n\n        {#if openGraph.profile.username}\n          <meta property=\"profile:username\" content={openGraph.profile.username} />\n        {/if}\n\n        {#if openGraph.profile.gender}\n          <meta property=\"profile:gender\" content={openGraph.profile.gender} />\n        {/if}\n      {:else if openGraph.type.toLowerCase() === 'book' && openGraph.book}\n        {#if openGraph.book.authors && openGraph.book.authors.length}\n          {#each openGraph.book.authors as author}\n            <meta property=\"book:author\" content={author} />\n          {/each}\n        {/if}\n\n        {#if openGraph.book.isbn}\n          <meta property=\"book:isbn\" content={openGraph.book.isbn} />\n        {/if}\n\n        {#if openGraph.book.releaseDate}\n          <meta property=\"book:release_date\" content={openGraph.book.releaseDate} />\n        {/if}\n\n        {#if openGraph.book.tags && openGraph.book.tags.length}\n          {#each openGraph.book.tags as tag}\n            <meta property=\"book:tag\" content={tag} />\n          {/each}\n        {/if}\n      {:else if openGraph.type.toLowerCase() === 'article' && openGraph.article}\n        {#if openGraph.article.publishedTime}\n          <meta property=\"article:published_time\" content={openGraph.article.publishedTime} />\n        {/if}\n\n        {#if openGraph.article.modifiedTime}\n          <meta property=\"article:modified_time\" content={openGraph.article.modifiedTime} />\n        {/if}\n\n        {#if openGraph.article.expirationTime}\n          <meta property=\"article:expiration_time\" content={openGraph.article.expirationTime} />\n        {/if}\n\n        {#if openGraph.article.authors && openGraph.article.authors.length}\n          {#each openGraph.article.authors as author}\n            <meta property=\"article:author\" content={author} />\n          {/each}\n        {/if}\n\n        {#if openGraph.article.section}\n          <meta property=\"article:section\" content={openGraph.article.section} />\n        {/if}\n\n        {#if openGraph.article.tags && openGraph.article.tags.length}\n          {#each openGraph.article.tags as tag}\n            <meta property=\"article:tag\" content={tag} />\n          {/each}\n        {/if}\n      {:else if openGraph.type.toLowerCase() === 'video.movie' || openGraph.type.toLowerCase() === 'video.episode' || openGraph.type.toLowerCase() === 'video.tv_show' || (openGraph.type.toLowerCase() === 'video.other' && openGraph.video)}\n        {#if openGraph.video?.actors && openGraph.video.actors.length}\n          {#each openGraph.video.actors as actor}\n            {#if actor.profile}\n              <meta property=\"video:actor\" content={actor.profile} />\n            {/if}\n            {#if actor.role}\n              <meta property=\"video:actor:role\" content={actor.role} />\n            {/if}\n          {/each}\n        {/if}\n\n        {#if openGraph.video?.directors && openGraph.video.directors.length}\n          {#each openGraph.video.directors as director}\n            <meta property=\"video:director\" content={director} />\n          {/each}\n        {/if}\n\n        {#if openGraph.video?.writers && openGraph.video.writers.length}\n          {#each openGraph.video.writers as writer}\n            <meta property=\"video:writer\" content={writer} />\n          {/each}\n        {/if}\n\n        {#if openGraph.video?.duration}\n          <meta property=\"video:duration\" content={openGraph.video.duration.toString()} />\n        {/if}\n\n        {#if openGraph.video?.releaseDate}\n          <meta property=\"video:release_date\" content={openGraph.video.releaseDate} />\n        {/if}\n\n        {#if openGraph.video?.tags && openGraph.video.tags.length}\n          {#each openGraph.video.tags as tag}\n            <meta property=\"video:tag\" content={tag} />\n          {/each}\n        {/if}\n\n        {#if openGraph.video?.series}\n          <meta property=\"video:series\" content={openGraph.video.series} />\n        {/if}\n      {/if}\n    {/if}\n\n    {#if openGraph.title || updatedTitle}\n      <meta property=\"og:title\" content={openGraph.title || updatedTitle} />\n    {/if}\n\n    {#if openGraph.description || description}\n      <meta property=\"og:description\" content={openGraph.description || description} />\n    {/if}\n\n    {#if openGraph.images && openGraph.images.length}\n      {#each openGraph.images as image}\n        <meta property=\"og:image\" content={image.url} />\n        {#if image.alt}\n          <meta property=\"og:image:alt\" content={image.alt} />\n        {/if}\n        {#if image.width}\n          <meta property=\"og:image:width\" content={image.width.toString()} />\n        {/if}\n        {#if image.height}\n          <meta property=\"og:image:height\" content={image.height.toString()} />\n        {/if}\n        {#if image.secureUrl}\n          <meta property=\"og:image:secure_url\" content={image.secureUrl.toString()} />\n        {/if}\n        {#if image.type}\n          <meta property=\"og:image:type\" content={image.type.toString()} />\n        {/if}\n      {/each}\n    {/if}\n\n    {#if openGraph.videos && openGraph.videos.length}\n      {#each openGraph.videos as video}\n        <meta property=\"og:video\" content={video.url} />\n        {#if video.width}\n          <meta property=\"og:video:width\" content={video.width.toString()} />\n        {/if}\n        {#if video.height}\n          <meta property=\"og:video:height\" content={video.height.toString()} />\n        {/if}\n        {#if video.secureUrl}\n          <meta property=\"og:video:secure_url\" content={video.secureUrl.toString()} />\n        {/if}\n        {#if video.type}\n          <meta property=\"og:video:type\" content={video.type.toString()} />\n        {/if}\n      {/each}\n    {/if}\n\n    {#if openGraph.audio && openGraph.audio.length}\n      {#each openGraph.audio as audio}\n        <meta property=\"og:audio\" content={audio.url} />\n        {#if audio.secureUrl}\n          <meta property=\"og:audio:secure_url\" content={audio.secureUrl.toString()} />\n        {/if}\n        {#if audio.type}\n          <meta property=\"og:audio:type\" content={audio.type.toString()} />\n        {/if}\n      {/each}\n    {/if}\n\n    {#if openGraph.locale}\n      <meta property=\"og:locale\" content={openGraph.locale} />\n    {/if}\n\n    {#if openGraph.siteName}\n      <meta property=\"og:site_name\" content={openGraph.siteName} />\n    {/if}\n  {/if}\n\n  {#if additionalMetaTags && Array.isArray(additionalMetaTags)}\n    {#each additionalMetaTags as tag}\n      <meta {...tag} />\n    {/each}\n  {/if}\n\n  {#if additionalLinkTags?.length}\n    {#each additionalLinkTags as tag}\n      <link {...tag} />\n    {/each}\n  {/if}\n</svelte:head>\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n","/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nmodule.exports = safeGet;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;\n","var assignMergeValue = require('./_assignMergeValue'),\n    cloneBuffer = require('./_cloneBuffer'),\n    cloneTypedArray = require('./_cloneTypedArray'),\n    copyArray = require('./_copyArray'),\n    initCloneObject = require('./_initCloneObject'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isPlainObject = require('./isPlainObject'),\n    isTypedArray = require('./isTypedArray'),\n    safeGet = require('./_safeGet'),\n    toPlainObject = require('./toPlainObject');\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nmodule.exports = baseMergeDeep;\n","var Stack = require('./_Stack'),\n    assignMergeValue = require('./_assignMergeValue'),\n    baseFor = require('./_baseFor'),\n    baseMergeDeep = require('./_baseMergeDeep'),\n    isObject = require('./isObject'),\n    keysIn = require('./keysIn'),\n    safeGet = require('./_safeGet');\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nmodule.exports = baseMerge;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n","var baseMerge = require('./_baseMerge'),\n    createAssigner = require('./_createAssigner');\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nmodule.exports = merge;\n","<script>\n  /**\n   * @event {null} save\n   * @event {{ prevValue: any; value: any; }} update\n   */\n\n  /**\n   * Specify the local storage key\n   */\n  export let key = \"local-storage-key\";\n\n  /**\n   * Provide a value to persist\n   * @type {any}\n   */\n  export let value = \"\";\n\n  /**\n   * Remove the persisted key value from the browser's local storage\n   * @type {() => void}\n   */\n  export function clearItem() {\n    localStorage.removeItem(key);\n  }\n\n  /**\n   * Clear all key values from the browser's local storage\n   * @type {() => void}\n   */\n  export function clearAll() {\n    localStorage.clear();\n  }\n\n  import { onMount, afterUpdate, createEventDispatcher } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  let prevValue = value;\n\n  function setItem() {\n    if (typeof value === \"object\") {\n      localStorage.setItem(key, JSON.stringify(value));\n    } else {\n      localStorage.setItem(key, value);\n    }\n  }\n\n  onMount(() => {\n    const item = localStorage.getItem(key);\n\n    if (item != null) {\n      try {\n        value = JSON.parse(item);\n      } catch (e) {\n        value = item;\n      }\n    } else {\n      setItem(value);\n      dispatch(\"save\");\n    }\n  });\n\n  afterUpdate(() => {\n    if (prevValue !== value) {\n      setItem(value);\n      dispatch(\"update\", { prevValue, value });\n    }\n\n    prevValue = value;\n  });\n</script>\n","<script>\n  /**\n   * Set the type of notification\n   * @type {\"toast\" | \"inline\"}\n   */\n  export let notificationType = \"toast\";\n\n  /**\n   * Specify the icon to render\n   * @type {typeof import(\"svelte\").SvelteComponent<any>}\n   */\n  export let icon = Close;\n\n  /**\n   * Specify the title of the icon\n   * @type {string}\n   */\n  export let title = undefined;\n\n  /** Specify the ARIA label for the icon */\n  export let iconDescription = \"Close icon\";\n\n  import Close from \"../icons/Close.svelte\";\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<button\n  type=\"button\"\n  aria-label=\"{iconDescription}\"\n  title=\"{iconDescription}\"\n  class:bx--toast-notification__close-button=\"{notificationType === 'toast'}\"\n  class:bx--inline-notification__close-button=\"{notificationType === 'inline'}\"\n  {...$$restProps}\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n>\n  <svelte:component\n    this=\"{icon}\"\n    size=\"{20}\"\n    title=\"{title}\"\n    class=\"{notificationType === 'toast' &&\n      'bx--toast-notification__close-icon'} {notificationType === 'inline' &&\n      'bx--inline-notification__close-icon'}\"\n  />\n</button>\n","<script>\n  export let size = 16;\n\n  export let title = undefined;\n\n  $: labelled = $$props[\"aria-label\"] || $$props[\"aria-labelledby\"] || title;\n  $: attributes = {\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: Number($$props[\"tabindex\"]) === 0 ? true : undefined,\n  };\n</script>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  width=\"{size}\"\n  height=\"{size}\"\n  {...attributes}\n  {...$$restProps}\n>\n  {#if title}<title>{title}</title>{/if}\n  <path\n    fill=\"none\"\n    d=\"M16,8a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,16,8Zm4,13.875H17.125v-8H13v2.25h1.875v5.75H12v2.25h8Z\"\n    data-icon-path=\"inner-path\"></path><path\n    d=\"M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm0,6a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,16,8Zm4,16.125H12v-2.25h2.875v-5.75H13v-2.25h4.125v8H20Z\"\n  ></path>\n</svg>\n","<script>\n  export let size = 16;\n\n  export let title = undefined;\n\n  $: labelled = $$props[\"aria-label\"] || $$props[\"aria-labelledby\"] || title;\n  $: attributes = {\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: Number($$props[\"tabindex\"]) === 0 ? true : undefined,\n  };\n</script>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  width=\"{size}\"\n  height=\"{size}\"\n  {...attributes}\n  {...$$restProps}\n>\n  {#if title}<title>{title}</title>{/if}\n  <path\n    fill=\"none\"\n    d=\"M16,8a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,16,8Zm4,13.875H17.125v-8H13v2.25h1.875v5.75H12v2.25h8Z\"\n    data-icon-path=\"inner-path\"></path><path\n    d=\"M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM16,8a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,16,8Zm4,16.125H12v-2.25h2.875v-5.75H13v-2.25h4.125v8H20Z\"\n  ></path>\n</svg>\n","<script>\n  /**\n   * Specify the kind of notification icon\n   * @type {\"error\" | \"info\" | \"info-square\" | \"success\" | \"warning\" | \"warning-alt\"}\n   */\n  export let kind = \"error\";\n\n  /**\n   * Set the type of notification\n   * @type {\"toast\" | \"inline\"}\n   */\n  export let notificationType = \"toast\";\n\n  /** Specify the ARIA label for the icon */\n  export let iconDescription;\n\n  import CheckmarkFilled from \"../icons/CheckmarkFilled.svelte\";\n  import ErrorFilled from \"../icons/ErrorFilled.svelte\";\n  import InformationFilled from \"../icons/InformationFilled.svelte\";\n  import InformationSquareFilled from \"../icons/InformationSquareFilled.svelte\";\n  import WarningFilled from \"../icons/WarningFilled.svelte\";\n  import WarningAltFilled from \"../icons/WarningAltFilled.svelte\";\n\n  const icons = {\n    error: ErrorFilled,\n    \"info-square\": InformationSquareFilled,\n    info: InformationFilled,\n    success: CheckmarkFilled,\n    warning: WarningFilled,\n    \"warning-alt\": WarningAltFilled,\n  };\n</script>\n\n<svelte:component\n  this=\"{icons[kind]}\"\n  size=\"{20}\"\n  title=\"{iconDescription}\"\n  class=\"{notificationType === 'toast' &&\n    'bx--toast-notification__icon'} {notificationType === 'inline' &&\n    'bx--inline-notification__icon'}\"\n/>\n","<script>\n  /**\n   * @event {{ timeout: boolean }} close\n   */\n\n  /**\n   * Specify the kind of notification\n   * @type {\"error\" | \"info\" | \"info-square\" | \"success\" | \"warning\" | \"warning-alt\"}\n   */\n  export let kind = \"error\";\n\n  /** Set to `true` to use the low contrast variant */\n  export let lowContrast = false;\n\n  /** Set the timeout duration (ms) to hide the notification after opening it */\n  export let timeout = 0;\n\n  /** Set the `role` attribute */\n  export let role = \"alert\";\n\n  /** Specify the title text */\n  export let title = \"\";\n\n  /** Specify the subtitle text */\n  export let subtitle = \"\";\n\n  /** Specify the caption text */\n  export let caption = \"\";\n\n  /**\n   * Specify the ARIA label for the status icon\n   * @type {string}\n   * */\n  export let statusIconDescription = kind + \" icon\";\n\n  /** Specify the ARIA label for the close button */\n  export let closeButtonDescription = \"Close notification\";\n\n  /** Set to `true` to hide the close button */\n  export let hideCloseButton = false;\n\n  /**\n   * Set to `true` for the notification to span\n   * the full width of its containing element.\n   */\n  export let fullWidth = false;\n\n  import { createEventDispatcher, onMount } from \"svelte\";\n  import NotificationButton from \"./NotificationButton.svelte\";\n  import NotificationIcon from \"./NotificationIcon.svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  let open = true;\n  let timeoutId = undefined;\n\n  function close(closeFromTimeout) {\n    const shouldContinue = dispatch(\n      \"close\",\n      { timeout: closeFromTimeout === true },\n      { cancelable: true }\n    );\n    if (shouldContinue) {\n      open = false;\n    }\n  }\n\n  onMount(() => {\n    if (timeout) {\n      timeoutId = setTimeout(() => close(true), timeout);\n    }\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  });\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n{#if open}\n  <div\n    role=\"{role}\"\n    kind=\"{kind}\"\n    class:bx--toast-notification=\"{true}\"\n    class:bx--toast-notification--low-contrast=\"{lowContrast}\"\n    class:bx--toast-notification--error=\"{kind === 'error'}\"\n    class:bx--toast-notification--info=\"{kind === 'info'}\"\n    class:bx--toast-notification--info-square=\"{kind === 'info-square'}\"\n    class:bx--toast-notification--success=\"{kind === 'success'}\"\n    class:bx--toast-notification--warning=\"{kind === 'warning'}\"\n    class:bx--toast-notification--warning-alt=\"{kind === 'warning-alt'}\"\n    style:width=\"{fullWidth ? \"100%\" : undefined}\"\n    {...$$restProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n  >\n    <NotificationIcon kind=\"{kind}\" iconDescription=\"{statusIconDescription}\" />\n    <div class:bx--toast-notification__details=\"{true}\">\n      <h3 class:bx--toast-notification__title=\"{true}\">\n        <slot name=\"title\">{title}</slot>\n      </h3>\n      <div class:bx--toast-notification__subtitle=\"{true}\">\n        <slot name=\"subtitle\">{subtitle}</slot>\n      </div>\n      <div class:bx--toast-notification__caption=\"{true}\">\n        <slot name=\"caption\">{caption}</slot>\n      </div>\n      <slot />\n    </div>\n    {#if !hideCloseButton}\n      <NotificationButton\n        iconDescription=\"{closeButtonDescription}\"\n        on:click=\"{close}\"\n      />\n    {/if}\n  </div>\n{/if}\n","<script>\n  /**\n   * @event {{ timeout: boolean }} close\n   */\n\n  /**\n   * Specify the kind of notification\n   * @type {\"error\" | \"info\" | \"info-square\" | \"success\" | \"warning\" | \"warning-alt\"}\n   */\n  export let kind = \"error\";\n\n  /** Set to `true` to use the low contrast variant */\n  export let lowContrast = false;\n\n  /** Set the timeout duration (ms) to hide the notification after opening it */\n  export let timeout = 0;\n\n  /** Set the `role` attribute */\n  export let role = \"alert\";\n\n  /** Specify the title text */\n  export let title = \"\";\n\n  /** Specify the subtitle text */\n  export let subtitle = \"\";\n\n  /** Set to `true` to hide the close button */\n  export let hideCloseButton = false;\n\n  /**\n   * Specify the ARIA label for the status icon\n   * @type {string}\n   * */\n  export let statusIconDescription = kind + \" icon\";\n\n  /** Specify the ARIA label for the close button */\n  export let closeButtonDescription = \"Close notification\";\n\n  import { createEventDispatcher, onMount } from \"svelte\";\n  import NotificationIcon from \"./NotificationIcon.svelte\";\n  import NotificationButton from \"./NotificationButton.svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  let open = true;\n  let timeoutId = undefined;\n\n  function close(closeFromTimeout) {\n    const shouldContinue = dispatch(\n      \"close\",\n      { timeout: closeFromTimeout === true },\n      { cancelable: true }\n    );\n    if (shouldContinue) {\n      open = false;\n    }\n  }\n\n  onMount(() => {\n    if (timeout) {\n      timeoutId = setTimeout(() => close(true), timeout);\n    }\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  });\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n{#if open}\n  <div\n    role=\"{role}\"\n    kind=\"{kind}\"\n    class:bx--inline-notification=\"{true}\"\n    class:bx--inline-notification--low-contrast=\"{lowContrast}\"\n    class:bx--inline-notification--hide-close-button=\"{hideCloseButton}\"\n    class:bx--inline-notification--error=\"{kind === 'error'}\"\n    class:bx--inline-notification--info=\"{kind === 'info'}\"\n    class:bx--inline-notification--info-square=\"{kind === 'info-square'}\"\n    class:bx--inline-notification--success=\"{kind === 'success'}\"\n    class:bx--inline-notification--warning=\"{kind === 'warning'}\"\n    class:bx--inline-notification--warning-alt=\"{kind === 'warning-alt'}\"\n    {...$$restProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n  >\n    <div class:bx--inline-notification__details=\"{true}\">\n      <NotificationIcon\n        notificationType=\"inline\"\n        kind=\"{kind}\"\n        iconDescription=\"{statusIconDescription}\"\n      />\n      <div class:bx--inline-notification__text-wrapper=\"{true}\">\n        <p class:bx--inline-notification__title=\"{true}\">\n          <slot name=\"title\">{title}</slot>\n        </p>\n        <div class:bx--inline-notification__subtitle=\"{true}\">\n          <slot name=\"subtitle\">{subtitle}</slot>\n        </div>\n        <slot />\n      </div>\n    </div>\n    <slot name=\"actions\" />\n    {#if !hideCloseButton}\n      <NotificationButton\n        iconDescription=\"{closeButtonDescription}\"\n        notificationType=\"inline\"\n        on:click=\"{close}\"\n      />\n    {/if}\n  </div>\n{/if}\n","<script>\n  /**\n   * Dynamic, client-side theming using CSS variables\n   * Only works with `carbon-components-svelte/css/all.css`\n   */\n\n  /**\n   * @typedef {\"white\" | \"g10\" | \"g80\" | \"g90\" | \"g100\"} CarbonTheme\n   * @event {{ theme: CarbonTheme; }} update\n   * @slot {{ theme: CarbonTheme; }}\n   */\n\n  /**\n   * Set the current Carbon theme\n   * @type {CarbonTheme}\n   */\n  export let theme = \"white\";\n\n  /**\n   * Customize a theme with your own tokens\n   * @see https://carbondesignsystem.com/guidelines/themes/overview#customizing-a-theme\n   * @type {{ [token: string]: any; }}\n   */\n  export let tokens = {};\n\n  /** Set to `true` to persist the theme using window.localStorage */\n  export let persist = false;\n\n  /** Specify the local storage key */\n  export let persistKey = \"theme\";\n\n  /**\n   * Render a toggle or select dropdown to control the theme\n   * @type {\"toggle\" | \"select\"}\n   */\n  export let render = undefined;\n\n  /**\n   * Override the default toggle props\n   * @type {import(\"../Toggle/Toggle\").ToggleProps & { themes?: [labelA: CarbonTheme, labelB: CarbonTheme]; }}\n   */\n  export let toggle = {\n    themes: [\"white\", \"g100\"],\n    labelA: \"\",\n    labelB: \"\",\n    labelText: \"Dark mode\",\n    hideLabel: false,\n  };\n\n  /** @type {Record<CarbonTheme, string>} */\n  const themes = {\n    white: \"White\",\n    g10: \"Gray 10\",\n    g80: \"Gray 80\",\n    g90: \"Gray 90\",\n    g100: \"Gray 100\",\n  };\n\n  /** @type {CarbonTheme} */\n  const themeKeys = Object.keys(themes);\n\n  /**\n   * Override the default select props\n   * @type {import(\"../Select/Select\").SelectProps & { themes?: CarbonTheme[]; }}\n   */\n  export let select = {\n    themes: themeKeys,\n    labelText: \"Themes\",\n    hideLabel: false,\n  };\n\n  import { createEventDispatcher } from \"svelte\";\n  import Toggle from \"../Toggle/Toggle.svelte\";\n  import Select from \"../Select/Select.svelte\";\n  import SelectItem from \"../Select/SelectItem.svelte\";\n  import LocalStorage from \"../LocalStorage/LocalStorage.svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  $: if (typeof window !== \"undefined\") {\n    Object.entries(tokens).forEach(([token, value]) => {\n      document.documentElement.style.setProperty(`--cds-${token}`, value);\n    });\n\n    if (theme in themes) {\n      document.documentElement.setAttribute(\"theme\", theme);\n      dispatch(\"update\", { theme });\n    } else {\n      console.warn(\n        `[Theme.svelte] invalid theme \"${theme}\". Value must be one of: ${JSON.stringify(\n          Object.keys(themes)\n        )}`\n      );\n    }\n  }\n</script>\n\n{#if persist}\n  <LocalStorage bind:value=\"{theme}\" key=\"{persistKey}\" />\n{/if}\n\n{#if render === \"toggle\"}\n  <Toggle\n    {...toggle}\n    toggled=\"{theme === toggle.themes[1]}\"\n    on:toggle=\"{({ detail }) => {\n      theme = detail.toggled ? toggle.themes[1] : toggle.themes[0];\n    }}\"\n  />\n{:else if render === \"select\"}\n  <Select {...select} bind:selected=\"{theme}\">\n    {#each select.themes as theme (theme)}\n      <SelectItem value=\"{theme}\" text=\"{themes[theme]}\" />\n    {/each}\n  </Select>\n{/if}\n\n<slot theme=\"{theme}\" />\n","<script>\n  export let size = 16;\n\n  export let title = undefined;\n\n  $: labelled = $$props[\"aria-label\"] || $$props[\"aria-labelledby\"] || title;\n  $: attributes = {\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: Number($$props[\"tabindex\"]) === 0 ? true : undefined\n  };\n</script>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  width={size}\n  height={size}\n  {...attributes}\n  {...$$restProps}>\n  {#if title}<title>{title}</title>{/if}\n  <path d=\"M28.7071,19.293,26,16.5859V13a10.0136,10.0136,0,0,0-9-9.9492V1H15V3.0508A10.0136,10.0136,0,0,0,6,13v3.5859L3.2929,19.293A1,1,0,0,0,3,20v3a1,1,0,0,0,1,1h7v.7768a5.152,5.152,0,0,0,4.5,5.1987A5.0057,5.0057,0,0,0,21,25V24h7a1,1,0,0,0,1-1V20A1,1,0,0,0,28.7071,19.293ZM19,25a3,3,0,0,1-6,0V24h6Zm8-3H5V20.4141L7.707,17.707A1,1,0,0,0,8,17V13a8,8,0,0,1,16,0v4a1,1,0,0,0,.293.707L27,20.4141Z\"></path>\n</svg>","<script>\n  export let size = 16;\n\n  export let title = undefined;\n\n  $: labelled = $$props[\"aria-label\"] || $$props[\"aria-labelledby\"] || title;\n  $: attributes = {\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: Number($$props[\"tabindex\"]) === 0 ? true : undefined\n  };\n</script>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  width={size}\n  height={size}\n  {...attributes}\n  {...$$restProps}>\n  {#if title}<title>{title}</title>{/if}\n  <path d=\"M13.5025,5.4136A15.0755,15.0755,0,0,0,25.096,23.6082a11.1134,11.1134,0,0,1-7.9749,3.3893c-.1385,0-.2782.0051-.4178,0A11.0944,11.0944,0,0,1,13.5025,5.4136M14.98,3a1.0024,1.0024,0,0,0-.1746.0156A13.0959,13.0959,0,0,0,16.63,28.9973c.1641.006.3282,0,.4909,0a13.0724,13.0724,0,0,0,10.702-5.5556,1.0094,1.0094,0,0,0-.7833-1.5644A13.08,13.08,0,0,1,15.8892,4.38,1.0149,1.0149,0,0,0,14.98,3Z\"></path>\n</svg>","<script>\n  export let size = 16;\n\n  export let title = undefined;\n\n  $: labelled = $$props[\"aria-label\"] || $$props[\"aria-labelledby\"] || title;\n  $: attributes = {\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: Number($$props[\"tabindex\"]) === 0 ? true : undefined\n  };\n</script>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  width={size}\n  height={size}\n  {...attributes}\n  {...$$restProps}>\n  {#if title}<title>{title}</title>{/if}\n  <path d=\"M16,12a4,4,0,1,1-4,4,4.0045,4.0045,0,0,1,4-4m0-2a6,6,0,1,0,6,6,6,6,0,0,0-6-6Z\" transform=\"translate(0 .005)\"></path><path d=\"M6.854 5.375H8.854V10.333H6.854z\" transform=\"rotate(-45 7.86 7.856)\"></path><path d=\"M2 15.005H7V17.005000000000003H2z\"></path><path d=\"M5.375 23.147H10.333V25.147H5.375z\" transform=\"rotate(-45 7.86 24.149)\"></path><path d=\"M15 25.005H17V30.005H15z\"></path><path d=\"M23.147 21.668H25.147V26.625999999999998H23.147z\" transform=\"rotate(-45 24.152 24.149)\"></path><path d=\"M25 15.005H30V17.005000000000003H25z\"></path><path d=\"M21.668 6.854H26.625999999999998V8.854H21.668z\" transform=\"rotate(-45 24.152 7.856)\"></path><path d=\"M15 2.005H17V7.005H15z\"></path>\n</svg>","<script>\n  export let size = 16;\n\n  export let title = undefined;\n\n  $: labelled = $$props[\"aria-label\"] || $$props[\"aria-labelledby\"] || title;\n  $: attributes = {\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: Number($$props[\"tabindex\"]) === 0 ? true : undefined\n  };\n</script>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  width={size}\n  height={size}\n  {...attributes}\n  {...$$restProps}>\n  {#if title}<title>{title}</title>{/if}\n  <path d=\"M4 6H28V8H4zM4 24H28V26H4zM4 12H28V14H4zM4 18H28V20H4z\"></path>\n</svg>","<script>\n  import { goto } from '$app/navigation';\n  import { browser } from '$app/environment';\n  import NotificationIcon from 'carbon-icons-svelte/lib/Notification.svelte';\n  import Moon from 'carbon-icons-svelte/lib/Moon.svelte';\n  import Sun from 'carbon-icons-svelte/lib/Sun.svelte';\n  import Menu from 'carbon-icons-svelte/lib/Menu.svelte';\n  import Close from 'carbon-icons-svelte/lib/Close.svelte';\n  import ArrowLeft from 'carbon-icons-svelte/lib/ArrowLeft.svelte';\n\n  import IconButton from '$lib/components/IconButton/index.svelte';\n  import { globalStore } from '$lib/utils/store/app';\n  import { currentOrgPath } from '$lib/utils/store/org';\n  import { toggleBodyByMode } from '$lib/utils/functions/app';\n  import { sideBar } from '../Org/store';\n  import { t } from '$lib/utils/functions/translations';\n\n  export let title = '';\n  export let navClass = '';\n  export let isCoursePage = false;\n\n  const toggleSidebar = () => {\n    $sideBar.hidden = !$sideBar.hidden;\n  };\n\n  function toggleDarkMode() {\n    $globalStore.isDark = !$globalStore.isDark;\n\n    toggleBodyByMode($globalStore.isDark);\n\n    if (browser) {\n      localStorage.setItem('mode', $globalStore.isDark ? 'dark' : '');\n    }\n  }\n\n  $: coursesPath = $globalStore.isOrgSite\n    ? '/lms/mylearning'\n    : isCoursePage\n      ? `${$currentOrgPath}/courses`\n      : $currentOrgPath;\n</script>\n\n<nav\n  class=\"{navClass} flex w-full p-1 md:px-6 bg-primary-700 transition delay-150 duration-300 ease-in-out h-[48px]\"\n>\n  <ul class=\"flex w-full items-center\">\n    <div class=\"flex items-center text-white\">\n      <li class=\"md:hidden\">\n        <IconButton\n          onClick={() => {\n            toggleSidebar();\n          }}\n        >\n          {#if $sideBar.hidden}\n            <Menu size={16} class=\" text-white\" />\n          {:else}\n            <Close size={16} class=\" text-white\" />\n          {/if}\n        </IconButton>\n      </li>\n\n      {#if isCoursePage}\n        <li class=\"hidden md:block\">\n          <IconButton\n            onClick={() => {\n              toggleSidebar();\n            }}\n          >\n            <Menu size={16} class=\" text-white\" />\n          </IconButton>\n        </li>\n        <li class=\"hidden md:block\">\n          <IconButton onClick={() => goto(coursesPath)}>\n            <ArrowLeft size={16} class=\"text-white\" />\n          </IconButton>\n        </li>\n      {/if}\n      <a\n        href={coursesPath}\n        title=\"{$t('navigation.goto')} {isCoursePage\n          ? $t('navigation.courses')\n          : $t('navigation.classroomio_home')}\"\n        id=\"logo\"\n        class=\"text-lg line-clamp-1\"\n      >\n        {isCoursePage ? title : 'KinetsHub'}\n      </a>\n    </div>\n\n    <span class=\"flex-grow\" />\n\n    <li>\n      <NotificationIcon size={20} class=\"text-white mr-2\" />\n    </li>\n    <li>\n      <IconButton size=\"small\" onClick={toggleDarkMode}>\n        {#if $globalStore.isDark}\n          <Sun size={16} class=\"text-white\" />\n        {:else}\n          <Moon size={16} class=\"text-white\" />\n        {/if}\n      </IconButton>\n    </li>\n\n    <li />\n  </ul>\n</nav>\n\n<style>\n  ul {\n    padding: 0;\n  }\n\n  /* clearfix */\n  ul::after {\n    content: '';\n    display: block;\n    clear: both;\n  }\n\n  /* li.new-question {\n    margin-top: 10px;\n  } */\n\n  a {\n    text-decoration: none;\n    color: #fff;\n    font-weight: 700;\n  }\n\n  @media only screen and (max-width: 1002px) {\n    nav.hide {\n      display: none;\n    }\n    ul {\n      align-items: center;\n    }\n\n    a {\n      padding: 0 0.5em;\n    }\n  }\n</style>\n","<script>\n  export let size = 16;\n\n  export let title = undefined;\n\n  $: labelled = $$props[\"aria-label\"] || $$props[\"aria-labelledby\"] || title;\n  $: attributes = {\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: Number($$props[\"tabindex\"]) === 0 ? true : undefined\n  };\n</script>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  width={size}\n  height={size}\n  {...attributes}\n  {...$$restProps}>\n  {#if title}<title>{title}</title>{/if}\n  <path d=\"M16,4A12,12,0,1,0,28,16,12,12,0,0,0,16,4ZM26,15H17V6.05A10,10,0,0,1,26,15ZM15.42,26A10,10,0,0,1,15,6.05v9a2,2,0,0,0,2,2h9A10,10,0,0,1,15.42,26Z\"></path>\n</svg>","<script>\n  export let size = 16;\n\n  export let title = undefined;\n\n  $: labelled = $$props[\"aria-label\"] || $$props[\"aria-labelledby\"] || title;\n  $: attributes = {\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: Number($$props[\"tabindex\"]) === 0 ? true : undefined\n  };\n</script>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  width={size}\n  height={size}\n  {...attributes}\n  {...$$restProps}>\n  {#if title}<title>{title}</title>{/if}\n  <path d=\"M13 24L4 15 5.414 13.586 13 21.171 26.586 7.586 28 9 13 24z\"></path>\n</svg>","<script lang=\"ts\">\n  import { page } from '$app/stores';\n  import { browser } from '$app/environment';\n  import NotificationIcon from 'carbon-icons-svelte/lib/Notification.svelte';\n  import MoonIcon from 'carbon-icons-svelte/lib/Moon.svelte';\n  import SunIcon from 'carbon-icons-svelte/lib/Sun.svelte';\n  import Avatar from '$lib/components/Avatar/index.svelte';\n  import TextChip from '$lib/components/Chip/Text.svelte';\n\n  import IconButton from '$lib/components/IconButton/index.svelte';\n  import { globalStore } from '$lib/utils/store/app';\n  import { Close, Menu } from 'carbon-icons-svelte';\n  import { sideBar } from '$lib/components/Org/store';\n  import { currentOrg } from '$lib/utils/store/org';\n  import { toggleBodyByMode } from '$lib/utils/functions/app';\n  import { t } from '$lib/utils/functions/translations';\n\n  export let navClass = '';\n\n  const toggleSidebar = () => {\n    $sideBar.hidden = !$sideBar.hidden;\n  };\n\n  function toggleDarkMode() {\n    $globalStore.isDark = !$globalStore.isDark;\n\n    toggleBodyByMode($globalStore.isDark);\n    if (browser) {\n      localStorage.setItem('mode', $globalStore.isDark ? 'dark' : '');\n    }\n  }\n\n  function shortenName(name: string) {\n    return name?.substring(0, 2)?.toUpperCase() || '';\n  }\n</script>\n\n<nav class=\"{navClass} flex w-full p-2 md:px-6 bg-primary-700 h-[48px]\">\n  <ul class=\"flex w-full items-center\">\n    <li class=\"md:hidden\">\n      <IconButton onClick={toggleSidebar}>\n        {#if $sideBar.hidden}\n          <Menu size={16} class=\" text-white\" />\n        {:else}\n          <Close size={16} class=\" text-white\" />\n        {/if}\n      </IconButton>\n    </li>\n    <div class=\"\">\n      <a\n        href={$page.url.pathname}\n        title={$t('navigation.goto_home')}\n        id=\"logo\"\n        class=\"text-lg flex items-center\"\n      >\n        {#if $currentOrg.avatar_url}\n          <Avatar\n            src={$currentOrg.avatar_url}\n            name={$currentOrg.name}\n            shape=\"rounded-md\"\n            width=\"w-7\"\n            height=\"h-7\"\n            className=\"mr-2\"\n          />\n        {:else}\n          <TextChip\n            value={shortenName($currentOrg.name)}\n            className=\"bg-primary-200 font-bold mr-2 dark:text-black\"\n          />\n        {/if}\n        <span class=\"line-clamp-1\">\n          {$currentOrg.name}\n        </span>\n      </a>\n    </div>\n\n    <span class=\"flex-grow\" />\n\n    <li>\n      <NotificationIcon size={20} class=\"text-white mr-2\" />\n    </li>\n    <li>\n      <IconButton size=\"small\" onClick={toggleDarkMode}>\n        {#if $globalStore.isDark}\n          <SunIcon size={16} class=\"text-white\" />\n        {:else}\n          <MoonIcon size={16} class=\"text-white\" />\n        {/if}\n      </IconButton>\n    </li>\n    <li />\n  </ul>\n</nav>\n\n<style>\n  ul {\n    padding: 0;\n  }\n\n  /* clearfix */\n  ul::after {\n    content: '';\n    display: block;\n    clear: both;\n  }\n\n  /* li.new-question {\n    margin-top: 10px;\n  } */\n\n  a {\n    text-decoration: none;\n    color: #fff;\n    font-weight: 700;\n  }\n\n  /* [aria-current] {\n    color: var(--main-primary-color);\n    position: relative;\n    display: inline-block;\n  }\n  [aria-current]::after {\n    position: absolute;\n    content: '';\n    width: calc(100% - 3em);\n    height: 2px;\n    background-color: var(--main-primary-color);\n    display: block;\n    bottom: -17px;\n  } */\n\n  @media only screen and (max-width: 1002px) {\n    nav.hide {\n      display: none;\n    }\n    ul {\n      align-items: center;\n    }\n\n    a {\n      padding: 0 0.5em;\n    }\n  }\n</style>\n","export function capitalizeFirstLetter(val: string): string {\n  return val.charAt(0).toUpperCase() + val.slice(1);\n}\n","<script lang=\"ts\">\n  import { fly } from 'svelte/transition';\n  import { InlineNotification } from 'carbon-components-svelte';\n  import { capitalizeFirstLetter } from '$lib/utils/functions/string';\n\n  import { SNACKBAR_SEVERITY } from './constants';\n  import { snackbarStore, snackbarStoreInitialState } from './store';\n  import { t } from '$lib/utils/functions/translations';\n\n  let timeoutId: NodeJS.Timeout | undefined;\n  let kind: 'error' | 'info' | 'info-square' | 'success' | 'warning' | 'warning-alt' = 'info';\n\n  function handleClose() {\n    if (typeof $snackbarStore.handleClose === 'function') {\n      $snackbarStore.handleClose();\n    }\n\n    snackbarStore.update((_s) => ({\n      ..._s,\n      ...snackbarStoreInitialState\n    }));\n    clearTimeout(timeoutId);\n    timeoutId = undefined;\n  }\n\n  // When open is true trigger autoHideDuration\n  function handleOpen(open: boolean) {\n    if (!open) {\n      return;\n    }\n\n    const { autoHideDuration } = $snackbarStore;\n\n    if (typeof autoHideDuration === 'number' && !timeoutId) {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(handleClose, autoHideDuration);\n    }\n  }\n\n  $: handleOpen($snackbarStore.open);\n  $: kind =\n    $snackbarStore.severity === SNACKBAR_SEVERITY.SUCCESS\n      ? 'success'\n      : $snackbarStore.severity === SNACKBAR_SEVERITY.ERROR\n        ? 'error'\n        : 'info';\n</script>\n\n{#if $snackbarStore.open}\n  {#key $snackbarStore.message}\n    <div transition:fly={{ x: 200, duration: 500 }} class=\"root absolute\">\n      <InlineNotification\n        {kind}\n        title={capitalizeFirstLetter(kind || '')}\n        subtitle={$t($snackbarStore.message)}\n        on:close={(e) => {\n          e.preventDefault();\n          handleClose();\n        }}\n      />\n    </div>\n  {/key}\n{/if}\n\n<style>\n  .root {\n    right: 5%;\n    left: auto;\n    top: 24px;\n    transform: translateX(-5%);\n    min-width: 288px;\n    z-index: 51;\n  }\n</style>\n","<script>\n  import { goto } from '$app/navigation';\n  import PrimaryButton from '$lib/components/PrimaryButton/index.svelte';\n  import { VARIANTS } from '$lib/components/PrimaryButton/constants';\n  import Locked from 'carbon-icons-svelte/lib/Locked.svelte';\n\n  function handleClick() {\n    return goto('https://KinetsHub.com');\n  }\n</script>\n\n<div class=\"root flex items-center justify-center flex-col w-screen\">\n  <Locked size={32} />\n  <div class=\"flex flex-col items-center justify-center dark:text-white gap-3 w-4/5 lg:w-2/5\">\n    <p class=\"text-4xl dark:text-white font-semibold mt-5\">Restricted Page</p>\n    <p class=\" text-gray-700 text-lg text-center dark:text-white mb-5\">\n      This organization is restricted. In the mean time, you can checkout our features.\n    </p>\n    <PrimaryButton\n      variant={VARIANTS.CONTAINED_DARK}\n      label=\"Go to Home\"\n      className=\"text-lg\"\n      onClick={handleClick}\n    />\n  </div>\n</div>\n\n<style>\n  .root {\n    height: calc(100vh - 45px);\n  }\n</style>\n","<script>\n  import CheckmarkOutline from 'carbon-icons-svelte/lib/CheckmarkOutline.svelte';\n  import PageNav from '$lib/components/PageNav/index.svelte';\n  import CloseButton from '$lib/components/Buttons/Close/index.svelte';\n  import Vote from '$lib/components/Vote/index.svelte';\n  import TextField from '$lib/components/Form/TextField.svelte';\n\n  export let handleClose;\n  let bodyRef;\n  let question;\n\n  let questions = [\n    {\n      id: 1,\n      name: 'Evgeniy',\n      question: \"I'am looking at this and it looks great\",\n      vote: 1,\n      answered: false\n    },\n    {\n      id: 2,\n      name: 'Sergey Semko',\n      question:\n        'Thanks for the feedback, what do you think about my website. https://rotimibest.com',\n      vote: 4,\n      answered: false\n    },\n    {\n      id: 3,\n      name: 'Vitalii Marushko',\n      question: 'Всем привет',\n      vote: 20,\n      answered: false\n    },\n    {\n      id: 4,\n      name: 'Natasha',\n      question: 'Привет Виталий',\n      vote: 0,\n      answered: false\n    }\n  ];\n\n  function handleSend() {\n    if (!question) {\n      return;\n    }\n\n    questions = [\n      ...questions,\n      {\n        id: questions.length,\n        name: 'You',\n        question,\n        vote: 0,\n        answered: false\n      }\n    ];\n\n    question = null;\n\n    setTimeout(() => {\n      bodyRef.scrollTo({\n        top: bodyRef.scrollHeight\n      });\n    }, 100);\n  }\n\n  function handleMarkAnswered(id) {\n    return () => {\n      questions = questions\n        .map((question) => {\n          if (question.id === id) {\n            question.answered = !question.answered;\n          }\n\n          return question;\n        })\n        .sort((a, b) => Number(a.answered) - Number(b.answered));\n    };\n  }\n\n  function handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      handleSend();\n    }\n  }\n</script>\n\n<PageNav title=\"Q/A\" overidableStyle=\"padding: 0 10px\">\n  <div slot=\"widget\">\n    <CloseButton onClick={handleClose} />\n  </div>\n</PageNav>\n\n<div bind:this={bodyRef} class=\"body\">\n  {#each questions as question}\n    <div class=\"flex items-start ml-2 mb-2 mt-2\">\n      <Vote bind:value={question.vote} />\n      <div class=\"ml-2 flex-grow\">\n        <p class=\"dark:text-white text-sm font-bold\">{question.name}</p>\n        <article class=\"prose prose-sm sm:prose\">\n          {question.question}\n        </article>\n      </div>\n      <button class={`${question.answered && 'active'}`} on:click={handleMarkAnswered(question.id)}>\n        <CheckmarkOutline size={20} class=\"carbon-icon dark:text-white\" />\n      </button>\n    </div>\n  {/each}\n</div>\n\n<div class=\"footer\">\n  <TextField placeholder=\"Say something\" bind:value={question} onKeyDown={handleKeyDown} />\n</div>\n\n<style lang=\"scss\">\n  .body {\n    overflow: auto;\n    height: 80%;\n\n    & button {\n      display: none;\n    }\n    & div:hover button,\n    & button.active {\n      display: block;\n    }\n  }\n  .footer {\n    position: absolute;\n    bottom: 0px;\n    width: 100%;\n  }\n</style>\n","<script lang=\"ts\">\n  import { onMount, onDestroy } from 'svelte';\n  import PageNav from '$lib/components/PageNav/index.svelte';\n  import CloseButton from '$lib/components/Buttons/Close/index.svelte';\n  import TextField from '$lib/components/Form/TextField.svelte';\n  import { getSupabase } from '$lib/utils/functions/supabase';\n  import type {\n    RealtimeChannel,\n    RealtimePostgresChangesPayload,\n    PostgrestSingleResponse\n  } from '@supabase/supabase-js';\n  import type { LessonCommentInsertPayload, GroupPerson, LessonComment } from '$lib/utils/types';\n  import { lesson } from '$lib/components/Course/components/Lesson/store/lessons';\n  import { group } from '$lib/components/Course/store';\n  import { profile } from '$lib/utils/store/user';\n  import { calDateDiff } from '$lib/utils/functions/date';\n  import { t } from '$lib/utils/functions/translations';\n\n  export let handleClose = () => {};\n\n  const supabase = getSupabase();\n\n  let comment = '';\n  let bodyRef: HTMLDivElement;\n  let lessonCommentChannel: RealtimeChannel;\n  let comments: LessonComment[] = [];\n  let groupmember: GroupPerson | undefined;\n  let isSaving: boolean = false;\n  let isFetched = false;\n\n  interface FetchComments {\n    comment: string;\n    created_at: string;\n    groupmember: {\n      id: string;\n      profile: {\n        avatar_url: string;\n        fullname: string;\n      };\n    };\n  }\n\n  async function handleSend() {\n    console.log('groupmember', groupmember);\n    if (!comment || !groupmember) {\n      return;\n    }\n\n    comments = [\n      ...comments,\n      {\n        comment: comment,\n        name: $t('course.navItem.lessons.comments.you'),\n        avatar: $profile.avatar_url,\n        commentAt: new Date()\n      }\n    ];\n    $lesson.totalComments = comments.length;\n    scrollToBottom();\n\n    isSaving = true;\n    supabase\n      .from('lesson_comment')\n      .insert({\n        lesson_id: $lesson.id,\n        groupmember_id: groupmember.id,\n        comment\n      })\n      .then(() => {\n        isSaving = false;\n        comment = '';\n      });\n  }\n\n  function handleKeyDown(e: KeyboardEvent) {\n    if (e.key === 'Enter') {\n      handleSend();\n    }\n  }\n\n  function scrollToBottom() {\n    setTimeout(() => {\n      bodyRef.scrollTo({\n        top: bodyRef.scrollHeight\n      });\n    }, 100);\n  }\n\n  async function handleInsert(payload: RealtimePostgresChangesPayload<LessonCommentInsertPayload>) {\n    const insertedComment = payload.new as LessonCommentInsertPayload;\n\n    if (groupmember && groupmember.id === insertedComment.groupmember_id) {\n      console.log('is my comment');\n      return;\n    }\n\n    const {\n      data,\n      error\n    }: PostgrestSingleResponse<{\n      id: string;\n      profile: {\n        fullname: string;\n        avatar_url: string;\n      };\n    }> = await supabase\n      .from('groupmember')\n      .select('id, profile:profile_id(fullname, avatar_url)')\n      .eq('id', insertedComment.groupmember_id)\n      .single();\n\n    console.log('data', data);\n    console.log('error', error);\n\n    if (error || !data) {\n      return;\n    }\n\n    comments = [\n      ...comments,\n      {\n        comment: insertedComment.comment,\n        name: data.profile.fullname,\n        avatar: data.profile.avatar_url,\n        commentAt: insertedComment.created_at\n      }\n    ];\n    $lesson.totalComments = comments.length;\n\n    scrollToBottom();\n  }\n\n  async function fetchComments(people: GroupPerson[], lessonId?: string | null) {\n    groupmember = people.find((person) => person.profile_id === $profile.id);\n\n    if (!groupmember || !lessonId) return;\n\n    const { data, error } = await supabase\n      .from('lesson_comment')\n      .select(\n        `\n          groupmember_id,\n          created_at,\n          comment,\n          groupmember:groupmember_id(\n            id,\n            profile:profile_id(fullname, avatar_url)\n          )\n        `\n      )\n      .match({\n        lesson_id: lessonId\n      })\n      .returns<FetchComments[]>();\n\n    if (error || !data) {\n      console.error('error');\n      return;\n    }\n    console.log('fetch comments', data);\n\n    comments = data.map((lessonComment) => {\n      return {\n        comment: lessonComment.comment,\n        avatar: lessonComment.groupmember.profile.avatar_url,\n        commentAt: lessonComment.created_at,\n        name:\n          lessonComment.groupmember.id === groupmember?.id\n            ? $t('course.navItem.lessons.comments.you')\n            : lessonComment.groupmember.profile.fullname\n      };\n    });\n    isFetched = true;\n    scrollToBottom();\n  }\n\n  onMount(async () => {\n    lessonCommentChannel = supabase\n      .channel('any')\n      .on(\n        'postgres_changes',\n        { event: '*', schema: 'public', table: 'lesson_comment' },\n        handleInsert\n      )\n      .subscribe();\n  });\n\n  onDestroy(() => {\n    supabase.removeChannel(lessonCommentChannel);\n  });\n\n  $: !isFetched && fetchComments($group.people, $lesson.id);\n</script>\n\n<PageNav title={$t('course.navItem.lessons.comments.title')} overidableStyle=\"padding: 0 10px\">\n  <div slot=\"widget\">\n    <CloseButton onClick={handleClose} />\n  </div>\n</PageNav>\n\n<div bind:this={bodyRef} class=\"overflow-y-auto h-[87%] pb-10 px-2 md:min-w-[350px] w-full\">\n  {#each comments as comment}\n    <div class=\"pb-2 mt-2\">\n      <div class=\"flex items-start\">\n        <img\n          alt=\"Placeholder\"\n          class=\"block rounded-full\"\n          width=\"24\"\n          height=\"20\"\n          src={comment.avatar}\n        />\n        <div class=\"ml-2\">\n          <p class=\"dark:text-white text-sm font-bold\">{comment.name}</p>\n          <p class=\"dark:text-white text-xs font-normal text-gray-800\">\n            {calDateDiff(comment.commentAt)}\n          </p>\n        </div>\n      </div>\n      <article class=\"prose prose-sm sm:prose ml-8 max-w-[300px] dark:text-white\">\n        {comment.comment}\n      </article>\n    </div>\n  {/each}\n</div>\n\n<div class=\"footer\">\n  <TextField\n    placeholder={$t('course.navItem.lessons.comments.placeholder')}\n    bind:value={comment}\n    onKeyDown={handleKeyDown}\n    isDisabled={isSaving}\n  />\n</div>\n\n<style>\n  .footer {\n    position: absolute;\n    bottom: 0px;\n    width: 100%;\n  }\n</style>\n","<script lang=\"ts\">\n  import PrimaryButton from '$lib/components/PrimaryButton/index.svelte';\n  import { VARIANTS } from '$lib/components/PrimaryButton/constants';\n  import DateTime from '$lib/components/Form/DateTime.svelte';\n  import type { PollType } from '../types';\n  import { course } from '$lib/components/Course/store';\n  import { profile } from '$lib/utils/store/user';\n  import TextField from '$lib/components/Form/TextField.svelte';\n  import { Add, TrashCan } from 'carbon-icons-svelte';\n  import IconButton from '$lib/components/IconButton/index.svelte';\n  import { t } from '$lib/utils/functions/translations';\n\n  export let title = 'Poll';\n  export let isSaving = false;\n  export let onSubmit = (p: PollType) => {};\n  export let onCancel = () => {};\n\n  let poll: PollType = {\n    id: new Date().getTime().toString(),\n    courseId: $course.id || '',\n    question: '',\n    expiration: new Date().toDateString(),\n    isPublic: false,\n    status: $t('course.navItem.lessons.poll.draft'),\n    author: {\n      id: $profile.id || '',\n      username: $profile.username || '',\n      fullname: $profile.fullname || '',\n      avatarUrl: $profile.avatar_url || ''\n    },\n    options: [\n      {\n        id: '',\n        label: '',\n        selectedBy: []\n      }\n    ]\n  };\n  let isCreateDisabled = false;\n\n  function handleAddOptions() {\n    poll = {\n      ...poll,\n      options: [\n        ...poll.options,\n        {\n          id: '',\n          label: '',\n          selectedBy: []\n        }\n      ]\n    };\n  }\n\n  function handleRemoveOptions(index: string | number) {\n    return () => {\n      poll.options = poll.options.filter((_, i) => i !== index);\n    };\n  }\n\n  function finishPoll() {\n    onSubmit(poll);\n  }\n\n  $: isCreateDisabled = poll.question === '' || poll.options.length < 2;\n</script>\n\n<div class=\"border rounded-md\">\n  <div class=\"border-b-2 p-4 text-center\">\n    {title}\n  </div>\n  <div class=\"p-3\">\n    <TextField\n      label={$t('course.navItem.lessons.poll.question')}\n      className=\"w-full mb-3\"\n      bind:value={poll.question}\n      placeholder={$t('course.navItem.lessons.poll.poll_question')}\n      isRequired={true}\n    />\n    <DateTime\n      label={$t('course.navItem.lessons.poll.expiration')}\n      className=\"w-full mb-3\"\n      bind:value={poll.expiration}\n      isRequired={true}\n    />\n\n    <div>\n      <p class=\"dark:text-white p-0 m-0 mb-1 text-md flex items-center gap-2\">\n        {$t('course.navItem.lessons.poll.options')}\n\n        <IconButton onClick={handleAddOptions} contained={true} size=\"small\">\n          <Add size={16} />\n        </IconButton>\n      </p>\n    </div>\n\n    {#each poll.options as option, index}\n      <div class=\"flex items-center gap-2 mb-3\">\n        <TextField\n          label=\"\"\n          className=\"w-full\"\n          bind:value={option.label}\n          placeholder={$t('course.navItem.lessons.poll.option_label')}\n          isRequired={true}\n        />\n        <IconButton onClick={handleRemoveOptions(index)} contained={true} size=\"small\">\n          <TrashCan size={16} />\n        </IconButton>\n      </div>\n    {/each}\n  </div>\n\n  <div class=\"w-full flex justify-center gap-2 mb-3\">\n    <PrimaryButton\n      label={$t('course.navItem.lessons.poll.create_poll')}\n      onClick={finishPoll}\n      isLoading={isSaving}\n      isDisabled={isCreateDisabled}\n    />\n    <PrimaryButton\n      label={$t('course.navItem.lessons.poll.cancel')}\n      variant={VARIANTS.OUTLINED}\n      onClick={onCancel}\n    />\n  </div>\n</div>\n","import { writable, type Writable } from 'svelte/store';\nimport type { PollType } from './types';\n\nexport const polls: Writable<PollType[]> = writable([]);\n","import { snackbar } from '$lib/components/Snackbar/store';\nimport type { PollType, PollOptionType, FetchPollsResponse } from './types';\nimport { getSupabase } from '$lib/utils/functions/supabase';\nimport { polls } from './store';\n\nconst supabase = getSupabase();\n\nexport async function fetchPolls(courseId: string) {\n  return await supabase\n    .from('apps_poll')\n    .select(\n      `\n      *,\n      created_at,\n      author:groupmember(\n        profile(\n          username,\n          fullname,\n          avatar_url\n        )\n      ),\n      options: apps_poll_option (\n        id,\n        label,\n        submissions:apps_poll_submission(\n          selectedBy:groupmember(\n            id,\n            profile(\n              username,\n              fullname,\n              avatar_url\n            )\n          )\n        )\n      )\n    `\n    )\n    .match({ courseId })\n    .order('created_at', { ascending: false })\n    .returns<FetchPollsResponse>();\n}\n\nexport const updatePollStatus = async (pollId: string, status: PollType['status']) => {\n  const { error } = await supabase.from('apps_poll').update({ status }).match({ id: pollId });\n\n  if (error) {\n    console.log(error);\n    snackbar.error('snackbar.poll.error.updating_poll');\n    return;\n  }\n};\n\nexport const togglePollSubmission = async (\n  pollId: PollType['id'],\n  pollOptionId: PollOptionType['id'],\n  groupmemberId: string,\n  add: boolean\n) => {\n  if (add) {\n    const { error } = await supabase.from('apps_poll_submission').insert({\n      poll_id: pollId,\n      poll_option_id: pollOptionId,\n      selected_by_id: groupmemberId\n    });\n    if (error) {\n      console.log(error);\n      snackbar.error('snackbar.poll.error.submitting_poll');\n      return;\n    }\n  } else {\n    const { error } = await supabase.from('apps_poll_submission').delete().match({\n      poll_id: pollId,\n      poll_option_id: pollOptionId,\n      selected_by_id: groupmemberId\n    });\n\n    if (error) {\n      console.log(error);\n      snackbar.error('snackbar.poll.error.submitting_poll');\n      return;\n    }\n  }\n};\n\nfunction isOptionSelectedByCurrentUser(option: PollOptionType, groupmemberId: string) {\n  return option.selectedBy.some((gmember) => gmember.id === groupmemberId);\n}\n\nexport function handleVote(pollId: string, groupmemberId: string, author: PollType['author']) {\n  return (optionId: string) => {\n    // we have the pollId and the optionId\n    polls.update((_polls) => {\n      return [\n        ..._polls.map((poll) => {\n          // Prevent user from voting on their own poll\n          // if (poll.author.id === currentGroupMember?.id) return poll;\n\n          // Prevent user from voting on a poll that has expired\n          if (poll.expiration && new Date(poll.expiration) < new Date()) return poll;\n\n          if (poll.id === pollId) {\n            // Prevent user from voting on a poll that the status is not published\n            if (poll.status !== 'published') {\n              snackbar.info('snackbar.poll.info.not_published');\n              return poll;\n            }\n\n            // Prevent user from voting twice\n            if (\n              poll.options.some((option) => isOptionSelectedByCurrentUser(option, groupmemberId))\n            ) {\n              snackbar.info('snackbar.poll.info.vote_once');\n              return poll;\n            }\n\n            poll.options = poll.options.map((option) => {\n              const isSelected = isOptionSelectedByCurrentUser(option, groupmemberId);\n\n              // If user has not voted on this option, add their vote\n              if (option.id === optionId && !isSelected) {\n                option.selectedBy = [...option.selectedBy, author];\n\n                togglePollSubmission(pollId, optionId, groupmemberId, true);\n              }\n              // else if (isSelected) {\n              //   // If user has voted on this option, remove their vote\n              //   option.selectedBy = option.selectedBy.filter(\n              //     (gmember) => gmember.id !== groupmemberId\n              //   );\n              // }\n\n              return option;\n            });\n          }\n\n          return poll;\n        })\n      ];\n    });\n  };\n}\n","<script script lang=\"ts\">\n  import PrimaryButton from '$lib/components/PrimaryButton/index.svelte';\n  import { VARIANTS } from '$lib/components/PrimaryButton/constants';\n  import Label from './Label.svelte';\n  import Avatar from './Avatar.svelte';\n  import type { PollType } from '../types';\n  import { updatePollStatus } from '../service';\n  import { t } from '$lib/utils/functions/translations';\n  import { Dashboard } from 'carbon-icons-svelte';\n\n  export let poll: PollType;\n  export let onSelect: (a: string) => void;\n  export let handlePollDelete = () => {};\n  export let currentUserId: number | string;\n\n  let viewResult = false;\n  let selectedOptionToView: { selectedBy: PollType['options'][0]['selectedBy'] } | null;\n  let isAuthor = false;\n  let totalVotes = 0;\n  let isThereAnyVote = false;\n\n  function getTotalVotes(options: PollType['options']) {\n    return options.reduce((acc, cur) => acc + cur.selectedBy.length, 0);\n  }\n\n  function calculatePercent(\n    options: PollType['options'],\n    currentOption: { selectedBy: string | PollType['options'][0]['selectedBy'] }\n  ) {\n    const totalVoteOfAllOptions = getTotalVotes(options);\n    const totalVotesOfCurrentOption = currentOption.selectedBy.length;\n\n    return Math.round((totalVotesOfCurrentOption / totalVoteOfAllOptions) * 100) || 0;\n  }\n\n  function didUserSelect(\n    option: { selectedBy: PollType['options'][0]['selectedBy'] },\n    userId: number | string\n  ) {\n    return option.selectedBy.find((user) => user.id === userId);\n  }\n\n  let prevStatus = poll.status;\n  function onStatusChange(status: string) {\n    if (status === prevStatus || !status) return;\n\n    updatePollStatus(poll.id, status);\n    prevStatus = status;\n  }\n\n  $: onStatusChange(poll.status);\n  $: isAuthor = currentUserId === poll.author.id;\n  $: totalVotes = getTotalVotes(poll.options);\n  $: {\n    isThereAnyVote = poll?.options?.some((option) => option.selectedBy.length) || false;\n  }\n</script>\n\n<div class=\"p-4 flex-wrap bg-white dark:bg-black border-2 rounded-md mb-3 w-full\">\n  {#if selectedOptionToView}\n    <div>\n      <div class=\"flex items-center mb-5\">\n        <button class=\"text-xl w-10 px-3\" on:click={() => (selectedOptionToView = null)}>\n          {`<`}\n        </button>\n        <div class=\"flex-grow text-center\">\n          <h3 class=\"dark:text-white font-bold\">{$t('course.navItem.lessons.poll.voted')}</h3>\n        </div>\n      </div>\n      {#each selectedOptionToView.selectedBy as user}\n        <div class=\"flex items-center mb-2\">\n          <Avatar src={user.avatarUrl} name={user.username} className=\"mr-2\" />\n          <p class=\"dark:text-white\">\n            {user.fullname}\n          </p>\n        </div>\n      {/each}\n    </div>\n  {:else}\n    <div class=\"flex flex-wrap gap-2 mb-3 justify-between\">\n      <div>\n        <h3 class=\"dark:text-white font-bold\">\n          {poll.question}\n        </h3>\n        <p class=\"dark:text-white text-sm italic\">\n          {$t('course.navItem.lessons.poll.created_by')}\n          <span class=\"text-primary-500\">@{poll.author.username}</span>\n        </p>\n      </div>\n\n      {#if isAuthor}\n        <div class=\"flex mb-3 justify-end items-center\">\n          <label class=\"mr-2 font-bold\" for=\"user-select\"\n            >{$t('course.navItem.lessons.poll.status')}:</label\n          >\n\n          <select\n            name=\"users\"\n            id=\"user-select\"\n            class=\"dark:text-white dark:bg-black\"\n            bind:value={poll.status}\n          >\n            <option value=\"draft\">{$t('course.navItem.lessons.poll.draft')}</option>\n            <option value=\"published\">{$t('course.navItem.lessons.poll.publish')}</option>\n          </select>\n        </div>\n      {/if}\n    </div>\n\n    {#if viewResult}\n      <div class=\"flex items-center justify-between\">\n        <div class=\"mr-5\">\n          <Label>{$t('course.navItem.lessons.poll.expiration')}</Label>\n          <p class=\"dark:text-white text-sm text-gray-600 mb-4\">\n            {poll.expiration || $t('dashboard.today')}\n          </p>\n        </div>\n        <div class=\"flex flex-col items-center\">\n          <Label>{$t('course.navItem.lessons.poll.total_voted')}</Label>\n          <p class=\"dark:text-white text-sm text-gray-600 mb-4\">\n            {totalVotes}\n          </p>\n        </div>\n      </div>\n\n      <Label>{$t('course.navItem.lessons.poll.responses')}</Label>\n      {#each poll.options as option}\n        <div class=\"border-b p-5\">\n          <p class=\"dark:text-white\">\n            {option.label}\n          </p>\n\n          <div class=\"flex items-center\">\n            <div class=\"w-4/5 h-2 bg-gray-200 relative\">\n              <span\n                class=\"absolute top-0 left-0 bg-primary-700 h-full\"\n                style=\"width: {calculatePercent(poll.options, option)}%;\"\n              />\n            </div>\n            {#if option.selectedBy.length}\n              <button class=\"text-xl px-3 ml-5\" on:click={() => (selectedOptionToView = option)}>\n                >\n              </button>\n            {/if}\n          </div>\n\n          <div class=\"flex items-center\">\n            {#each option.selectedBy.slice(0, 3) as user}\n              <Avatar src={user.avatarUrl} name={user.username} className=\"mr-2\" />\n            {/each}\n          </div>\n        </div>\n      {/each}\n    {:else}\n      {#each poll.options as option, index}\n        <button\n          class=\"bg-white dark:bg-black rounded-md border-2 border-gray-100 dark:border-neutral-600 h-[50px] {didUserSelect(\n            option,\n            currentUserId\n          ) &&\n            'focus:border-primary-700 border-primary-700'} text-black dark:text-white p-2 w-full mb-3 text-left relative\"\n          on:click={() => onSelect(option.id)}\n        >\n          {#if isThereAnyVote}\n            <span\n              class=\"progress absolute top-0 text-black left-0 {didUserSelect(option, currentUserId)\n                ? 'bg-primary-700'\n                : 'bg-gray-300'} h-full bg-opacity-25\"\n              style=\"width: {calculatePercent(poll.options, option)}%;\"\n            />\n          {/if}\n          <p\n            class=\"absolute top-3 {didUserSelect(option, currentUserId)\n              ? 'text-white'\n              : 'dark:text-white text-black'} left-2\"\n          >\n            {option.label}\n            ({calculatePercent(poll.options, option)}%)\n          </p>\n        </button>\n      {/each}\n      <div class=\"flex items-center\">\n        <p class=\"dark:text-white text-sm text-gray-600\">\n          {$t('course.navItem.lessons.poll.expires')}: {poll.expiration || $t('dashboard.today')}\n        </p>\n        <span class=\"mx-2\">|</span>\n        <p class=\"dark:text-white text-sm text-gray-600\">\n          {$t('course.navItem.lessons.poll.voted')}: {totalVotes}\n        </p>\n      </div>\n    {/if}\n\n    {#if isAuthor}\n      <div class=\"w-full flex items-center mt-3\">\n        <PrimaryButton\n          label={viewResult\n            ? $t('course.navItem.lessons.poll.back')\n            : $t('course.navItem.lessons.poll.result')}\n          onClick={() => (viewResult = !viewResult)}\n        />\n        <PrimaryButton\n          label={$t('course.navItem.lessons.poll.delete')}\n          variant={VARIANTS.TEXT_DANGER}\n          onClick={handlePollDelete}\n        />\n      </div>\n    {/if}\n  {/if}\n</div>\n\n<style>\n  .progress {\n    transition: width 0.5s linear;\n  }\n</style>\n","<script lang=\"ts\">\n  import Chip from '$lib/components/Chip/index.svelte';\n  import RoleBaseSecurity from '$lib/components/RoleBasedSecurity/index.svelte';\n  import { Add } from 'carbon-icons-svelte';\n  import IconButton from '$lib/components/IconButton/index.svelte';\n  import type { TabsType } from '../types';\n\n  export let onCreate: () => void;\n  export let tabs: TabsType = [];\n\n  export let selectedTab: number;\n</script>\n\n<div class=\"mb-3 flex items-center justify-between\">\n  <div>\n    {#each tabs as tab}\n      <button\n        class=\"mr-3 pb-2 border-t-0 border-l-0 border-r-0 {selectedTab === tab.value\n          ? 'border-b-4 border-primary-600 focus:border-primary-600'\n          : 'border-b-0'}\"\n        on:click={() => (selectedTab = tab.value)}\n      >\n        {tab.label}\n        <Chip bind:value={tab.number} />\n      </button>\n    {/each}\n  </div>\n\n  <RoleBaseSecurity allowedRoles={[1, 2]}>\n    <IconButton onClick={onCreate} contained={true} size=\"large\">\n      <Add size={16} />\n    </IconButton>\n  </RoleBaseSecurity>\n</div>\n","import type { PollType, FetchPollsResponse } from './types';\n\nexport const getPollsData = (data: FetchPollsResponse, isStudent?: boolean) => {\n  const pollsData: PollType[] = data.map((appsPollItem) => ({\n    id: appsPollItem.id,\n    courseId: appsPollItem.courseId,\n    expiration: appsPollItem.expiration,\n    status: appsPollItem.status,\n    question: appsPollItem.question,\n    author: {\n      id: appsPollItem.authorId,\n      username: appsPollItem.author.profile.username,\n      fullname: appsPollItem.author.profile.fullname,\n      avatarUrl: appsPollItem.author.profile.avatar_url\n    },\n    options: appsPollItem.options.map((option) => ({\n      id: option.id,\n      label: option.label,\n      selectedBy: option.submissions.map((submission) => {\n        return {\n          id: submission.selectedBy.id,\n          username: submission.selectedBy.profile.username,\n          fullname: submission.selectedBy.profile.fullname,\n          avatarUrl: submission.selectedBy.profile.avatar_url\n        };\n      })\n    }))\n  }));\n\n  return pollsData.filter((p) => (isStudent ? p.status === 'published' : true));\n};\n","<script lang=\"ts\">\n  import PageNav from '$lib/components/PageNav/index.svelte';\n  import CloseButton from '$lib/components/Buttons/Close/index.svelte';\n  import CreatePollForm from './components/CreatePollForm.svelte';\n  import Poll from './components/Poll.svelte';\n  import Tabs from './components/Tabs.svelte';\n  import { polls } from './store';\n  import type { PollType, TabsType, PollOptionsSubmissionType } from './types';\n  import { globalStore } from '$lib/utils/store/app';\n  import { getSupabase } from '$lib/utils/functions/supabase';\n  import { profile } from '$lib/utils/store/user';\n  import { group, course } from '$lib/components/Course/store';\n  import type { Groupmember } from '$lib/utils/types';\n  import { fetchPolls, handleVote } from './service';\n  import { getPollsData } from './utils';\n  import { snackbar } from '$lib/components/Snackbar/store';\n  import { onMount, onDestroy } from 'svelte';\n  import type {\n    RealtimeChannel,\n    RealtimePostgresChangesPayload,\n    PostgrestSingleResponse\n  } from '@supabase/supabase-js';\n  import { t } from '$lib/utils/functions/translations';\n\n  export let handleClose = () => {};\n\n  const supabase = getSupabase();\n\n  let selectedTab = 0;\n  let currentGroupMember: Groupmember | undefined;\n  let openCreatePollForm = false;\n  let isCreating = false;\n  let isLoading = false;\n  let author: PollType['author'] = {\n    id: '',\n    username: '',\n    fullname: '',\n    avatarUrl: ''\n  };\n  let pollSubmissionsChannel: RealtimeChannel;\n\n  let tabs: TabsType = [];\n  let activePolls: PollType[] = [];\n  let expiredPolls: PollType[] = [];\n\n  function setCoursePolls() {\n    $course.polls = $polls.map((p) => ({ status: p.status }));\n  }\n\n  async function createPoll(poll: PollType) {\n    if (!currentGroupMember || !$course.id) return;\n\n    const { data, error } = await supabase\n      .from('apps_poll')\n      .insert({\n        question: poll.question,\n        authorId: currentGroupMember.id,\n        status: poll.status,\n        expiration: poll.expiration,\n        courseId: $course.id\n      })\n      .select('id');\n\n    if (error || !data) {\n      console.log(error);\n      snackbar.error('snackbar.poll.error.creating_poll');\n      return;\n    }\n\n    const pollId = data[0].id;\n    const appsPollOptions = poll.options.map((option) => ({\n      poll_id: pollId,\n      label: option.label\n    }));\n    const { data: appsPollOptionsData, error: appsPollOptionsError } = await supabase\n      .from('apps_poll_option')\n      .insert(appsPollOptions)\n      .select();\n\n    if (appsPollOptionsError || !appsPollOptionsData) {\n      console.log({ appsPollOptionsError });\n      snackbar.error('snackbar.poll.error.creating_poll');\n      return;\n    }\n\n    $polls = [\n      {\n        ...poll,\n        id: pollId,\n        courseId: $course.id,\n        author,\n        options: appsPollOptionsData.map((option) => ({\n          ...option,\n          id: option.id,\n          selectedBy: []\n        }))\n      },\n      ...$polls\n    ];\n\n    setCoursePolls();\n  }\n\n  async function handleInsert(payload: RealtimePostgresChangesPayload<PollOptionsSubmissionType>) {\n    const newVote = payload.new as PollOptionsSubmissionType;\n\n    const {\n      data,\n      error\n    }: PostgrestSingleResponse<{\n      profile: {\n        username: string;\n        fullname: string;\n        avatar_url: string;\n      };\n    }> = await supabase\n      .from('groupmember')\n      .select('profile:profile_id(username, fullname, avatar_url)')\n      .eq('id', newVote.selected_by_id)\n      .single();\n\n    console.log('newVote => data', data);\n    console.log('newVote => error', error);\n\n    if (error || !data) {\n      return;\n    }\n\n    $polls = $polls.map((poll) => {\n      if (poll.id === newVote.poll_id) {\n        return {\n          ...poll,\n          options: poll.options.map((option) => {\n            if (option.id === newVote.poll_option_id) {\n              if (option.selectedBy.some((s) => s.id === newVote.selected_by_id)) {\n                return option;\n              }\n\n              return {\n                ...option,\n                selectedBy: [\n                  ...option.selectedBy,\n                  {\n                    id: newVote.selected_by_id,\n                    username: data.profile.username,\n                    fullname: data.profile.fullname,\n                    avatarUrl: data.profile.avatar_url\n                  }\n                ]\n              };\n            }\n\n            return option;\n          })\n        };\n      }\n\n      return poll;\n    });\n  }\n\n  async function handlePollCreate(poll: PollType) {\n    if (!currentGroupMember) return;\n\n    isCreating = true;\n    await createPoll(poll);\n    isCreating = false;\n\n    openCreatePollForm = false;\n  }\n\n  function handlePollDelete(pollId: string) {\n    return async () => {\n      await supabase.from('apps_poll_submission').delete().match({ poll_id: pollId });\n      await supabase.from('apps_poll_option').delete().match({ poll_id: pollId });\n      await supabase.from('apps_poll').delete().match({ id: pollId });\n\n      $polls = [...$polls.filter((p, i) => p.id !== pollId)];\n\n      setCoursePolls();\n    };\n  }\n\n  onMount(async () => {\n    if (!$course.id) return;\n\n    isLoading = true;\n    const { data, error } = await fetchPolls($course.id);\n\n    if (!data || error) {\n      console.log(error);\n      isLoading = false;\n      return;\n    }\n\n    polls.set(getPollsData(data, $globalStore.isStudent));\n\n    setCoursePolls();\n\n    isLoading = false;\n\n    pollSubmissionsChannel = supabase\n      .channel('any')\n      .on(\n        'postgres_changes',\n        { event: 'INSERT', schema: 'public', table: 'apps_poll_submission' },\n        handleInsert\n      )\n      .subscribe();\n  });\n\n  onDestroy(() => {\n    supabase.removeChannel(pollSubmissionsChannel);\n  });\n\n  $: currentGroupMember = $group.people.find((person) => person.profile_id === $profile.id);\n  $: author = {\n    id: currentGroupMember?.id || '',\n    username: $profile.username || '',\n    fullname: $profile.fullname || '',\n    avatarUrl: $profile.avatar_url || ''\n  };\n\n  $: {\n    activePolls = $polls.filter(\n      (poll) => new Date(poll.expiration).getTime() >= new Date().getTime()\n    );\n    expiredPolls = $polls.filter(\n      (poll) => new Date(poll.expiration).getTime() <= new Date().getTime()\n    );\n    tabs = [\n      {\n        label: $t('course.navItem.lessons.polls.active_polls'),\n        value: 0,\n        number: activePolls.length\n      },\n      {\n        label: $t('course.navItem.lessons.polls.expired_polls'),\n        value: 1,\n        number: expiredPolls.length\n      }\n    ];\n  }\n</script>\n\n<PageNav\n  title={$t('course.navItem.lessons.polls.title')}\n  overidableStyle=\"padding: 0 10px\"\n  paddingClass=\"w-full\"\n>\n  <div slot=\"widget\">\n    <CloseButton onClick={handleClose} />\n  </div>\n</PageNav>\n\n<div class=\"p-2 overlow-y-auto md:max-w-[350px] md:min-w-[340px] w-full\">\n  {#if openCreatePollForm}\n    <CreatePollForm\n      onSubmit={handlePollCreate}\n      onCancel={() => (openCreatePollForm = !openCreatePollForm)}\n      bind:isSaving={isCreating}\n    />\n  {:else if currentGroupMember}\n    <div>\n      <Tabs {tabs} bind:selectedTab onCreate={() => (openCreatePollForm = !openCreatePollForm)} />\n\n      {#if isLoading}\n        {$t('course.navItem.lessons.polls.loading')}...\n      {:else}\n        {#each selectedTab === tabs[0].value ? activePolls : expiredPolls as poll}\n          <Poll\n            bind:poll\n            onSelect={handleVote(poll.id, currentGroupMember?.id || '', author)}\n            handlePollDelete={handlePollDelete(poll.id)}\n            bind:currentUserId={currentGroupMember.id}\n          />\n        {:else}\n          <div\n            class=\"bg-gray-100 dark:bg-neutral-800 border rounded-md h-60 flex items-center justify-center\"\n          >\n            <h2 class=\"text-xl font-bold\">{$t('course.navItem.lessons.polls.no_polls')}</h2>\n          </div>\n        {/each}\n      {/if}\n    </div>\n  {/if}\n</div>\n","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { fade } from 'svelte/transition';\n  import SendAlt from 'carbon-icons-svelte/lib/SendAlt.svelte';\n  import ChartPie from 'carbon-icons-svelte/lib/ChartPie.svelte';\n  import IconButton from '$lib/components/IconButton/index.svelte';\n  import Settings from 'carbon-icons-svelte/lib/Settings.svelte';\n  import { apps } from './store';\n  import { globalStore } from '$lib/utils/store/app';\n\n  import Chip from '$lib/components/Chip/index.svelte';\n  import QandA from './components/QandA/index.svelte';\n  import Comments from './components/Comments/index.svelte';\n  import Notes from './components/Notes/index.svelte';\n  import Poll from './components/Poll/index.svelte';\n  import APPS_CONSTANTS from './constants';\n  import { browser } from '$app/environment';\n  import { course } from '$lib/components/Course/store';\n  import { lesson } from '$lib/components/Course/components/Lesson/store/lessons';\n  import { currentOrg } from '$lib/utils/store/org';\n  import { t } from '$lib/utils/functions/translations';\n\n  let appBarRef: HTMLDivElement;\n  let appContentRef: HTMLDivElement;\n  let topPadding = $globalStore.isStudent ? '48px' : '109px';\n\n  const getResizableSidebar = () => {\n    if (!browser) return;\n\n    return window.innerWidth >= 1024;\n  };\n\n  function handleClose() {\n    $apps.selectedApp = undefined;\n    if ($globalStore.isStudent) {\n      $apps.open = false;\n    }\n  }\n\n  function handleAppClick(appName?: string) {\n    if (appName === $apps.selectedApp) {\n      handleClose();\n    } else {\n      $apps.selectedApp = appName;\n    }\n    $apps.dropdown = !$apps.dropdown;\n  }\n\n  function updateTopPadding(isStudent?: boolean) {\n    topPadding = isStudent ? '48px' : '109px';\n  }\n\n  function getAppClass(appName: string, selected: string | undefined) {\n    return `transition duration-500 delay-150 ease-in-out border-t-0 border-b-0 border-r-0 ${\n      appName === selected ? 'border-l-4 border-primary-600 focus:border-primary-600' : 'border-l-0'\n    }`;\n  }\n\n  onMount(() => {\n    updateTopPadding($globalStore.isStudent);\n  });\n\n  $: updateTopPadding($globalStore.isStudent);\n  $: getResizableSidebar();\n</script>\n\n<div\n  style={`--top-padding:${topPadding}`}\n  class={`${$apps.open ? 'open ' : 'close'} root bg-white dark:bg-black`}\n  bind:this={appBarRef}\n>\n  <div class=\"apps\">\n    <div class=\"lg:hidden mb-2\">\n      <IconButton\n        buttonClassName=\"lg:hidden\"\n        toolTipProps={{ title: 'Settings', hotkeys: [] }}\n        onClick={handleAppClick}\n      >\n        <Settings size={24} class=\"carbon-icon dark:text-white lg:hidden\" />\n      </IconButton>\n    </div>\n\n    <div class=\"mb-2 relative {getAppClass(APPS_CONSTANTS.APPS.COMMENTS, $apps.selectedApp)}\">\n      <IconButton\n        toolTipProps={{\n          title: `${\n            $globalStore.isOrgSite && !$currentOrg.customization.apps.comments\n              ? $t('course.navItem.lessons.disabled')\n              : $t('course.navItem.lessons.comments.title')\n          }`,\n          hotkeys: ['Ctrl/Command', '1']\n        }}\n        value={APPS_CONSTANTS.APPS.COMMENTS}\n        onClick={handleAppClick}\n        buttonClassName=\"relative\"\n        disabled={$globalStore.isOrgSite && !$currentOrg.customization.apps.comments}\n      >\n        <Chip\n          value={$lesson.totalComments}\n          className=\"absolute -top-1 right-0 bg-gray-100 text-gray-600 dark:bg-neutral-700 dark:text-white\"\n        />\n        <SendAlt size={24} class=\"carbon-icon dark:text-white\" />\n      </IconButton>\n    </div>\n\n    <div class=\"mb-2 {getAppClass(APPS_CONSTANTS.APPS.POLL, $apps.selectedApp)}\">\n      <IconButton\n        toolTipProps={{\n          title: `${\n            $globalStore.isOrgSite && !$currentOrg.customization.apps.poll\n              ? $t('course.navItem.lessons.disabled')\n              : $t('course.navItem.lessons.polls.title')\n          } `,\n          hotkeys: ['Ctrl/Command', '2']\n        }}\n        value={APPS_CONSTANTS.APPS.POLL}\n        onClick={handleAppClick}\n        disabled={$globalStore.isOrgSite && !$currentOrg.customization.apps.poll}\n      >\n        <Chip\n          value={$course.polls.length}\n          className=\"absolute -top-1 right-0 bg-gray-100 text-gray-600 dark:bg-neutral-700 dark:text-white\"\n        />\n        <ChartPie size={24} class=\"carbon-icon dark:text-white\" />\n      </IconButton>\n    </div>\n\n    <!-- <div class=\"mb-2\">\n      <IconButton\n        toolTipProps={{ title: 'QandA', hotkeys: ['A', '3'] }}\n        value={APPS_CONSTANTS.APPS.QANDA}\n        onClick={handleAppClick}\n        contained={APPS_CONSTANTS.APPS.QANDA === $apps.selectedApp}\n      >\n        <Forum size={24} class=\"carbon-icon dark:text-white\" />\n      </IconButton>\n    </div>\n    <div class=\"mb-2\">\n      <IconButton\n        toolTipProps={{ title: 'Notes', hotkeys: ['A', '3'] }}\n        value={APPS_CONSTANTS.APPS.NOTES}\n        onClick={handleAppClick}\n        contained={APPS_CONSTANTS.APPS.NOTES === $apps.selectedApp}\n      >\n        <AlignBoxTopLeft size={24} class=\"carbon-icon dark:text-white\" />\n      </IconButton>\n    </div> -->\n  </div>\n\n  {#if !!$apps.selectedApp}\n    <div\n      class=\"app max-w-[350px] transition ease-in-out delay-150 duration-100\"\n      bind:this={appContentRef}\n    >\n      {#key $apps.selectedApp}\n        <div class=\"h-full w-full\" transition:fade={{ duration: 200 }}>\n          {#if $apps.selectedApp === APPS_CONSTANTS.APPS.QANDA}\n            <QandA {handleClose} />\n          {:else if $apps.selectedApp === APPS_CONSTANTS.APPS.COMMENTS}\n            <Comments {handleClose} />\n          {:else if $apps.selectedApp === APPS_CONSTANTS.APPS.POLL}\n            <Poll {handleClose} />\n          {:else if $apps.selectedApp === APPS_CONSTANTS.APPS.NOTES}\n            <Notes {handleClose} />\n          {/if}\n        </div>\n      {/key}\n    </div>\n  {/if}\n</div>\n\n<style lang=\"scss\">\n  .root {\n    height: calc(100vh - 48px);\n    position: sticky;\n    top: 0;\n    border-left: 1px solid var(--border-color);\n    display: flex;\n    flex-direction: row;\n    z-index: 1;\n\n    & .apps {\n      padding-top: 20px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      width: 60px;\n      border-right: 1px solid var(--border-color);\n      height: 100%;\n    }\n\n    & .app {\n      width: 100%;\n      position: relative;\n      overflow: auto;\n    }\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1023px) {\n    .app {\n      width: 50vw;\n      position: relative;\n      overflow: auto;\n    }\n  }\n\n  @media screen and (max-width: 767px) {\n    .app {\n      width: 100vw;\n      min-width: calc(100vw - 60px);\n      position: relative;\n      overflow: auto;\n    }\n  }\n\n  @media screen and (max-width: 1023px) {\n    .root {\n      position: absolute;\n      height: calc(100vh - var(--top-padding));\n      top: var(--top-padding);\n      right: 0;\n      z-index: 999;\n    }\n    .open {\n      position: absolute;\n      transform: translateX(0);\n\n      transition: all 0.2s ease-in-out;\n    }\n    .close {\n      position: absolute;\n      transform: translateX(100%);\n      display: none;\n      transition: all 0.2s ease-in-out;\n    }\n  }\n\n  @media screen and (min-width: 1024px) {\n    .root {\n      height: calc(100vh - 48px);\n      position: sticky;\n      top: 0;\n      border-left: 1px solid var(--border-color);\n      display: flex;\n      flex-direction: row;\n      z-index: 1;\n\n      & .apps {\n        padding-top: 20px;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        width: 60px;\n        border-right: 1px solid var(--border-color);\n        height: 100%;\n      }\n\n      & .app {\n        width: 100%;\n        position: relative;\n        overflow: auto;\n      }\n    }\n  }\n</style>\n","export const durationUnitRegex = /[a-zA-Z]/;\r\nexport const calculateRgba = (color, opacity) => {\r\n    if (color[0] === '#') {\r\n        color = color.slice(1);\r\n    }\r\n    if (color.length === 3) {\r\n        let res = '';\r\n        color.split('').forEach((c) => {\r\n            res += c;\r\n            res += c;\r\n        });\r\n        color = res;\r\n    }\r\n    const rgbValues = (color.match(/.{2}/g) || []).map((hex) => parseInt(hex, 16)).join(', ');\r\n    return `rgba(${rgbValues}, ${opacity})`;\r\n};\r\nexport const range = (size, startAt = 0) => [...Array(size).keys()].map((i) => i + startAt);\r\n// export const characterRange = (startChar, endChar) =>\r\n//   String.fromCharCode(\r\n//     ...range(\r\n//       endChar.charCodeAt(0) - startChar.charCodeAt(0),\r\n//       startChar.charCodeAt(0)\r\n//     )\r\n//   );\r\n// export const zip = (arr, ...arrs) =>\r\n//   arr.map((val, i) => arrs.reduce((list, curr) => [...list, curr[i]], [val]));\r\n","<script>import { range, durationUnitRegex } from './utils';\r\nexport let color = '#FF3E00';\r\nexport let unit = 'px';\r\nexport let duration = '0.6s';\r\nexport let size = '60';\r\nexport let pause = false;\r\nlet durationUnit = duration.match(durationUnitRegex)?.[0] ?? 's';\r\nlet durationNum = duration.replace(durationUnitRegex, '');\r\n</script>\n\n<div class=\"wrapper\" style=\"--size:{size}{unit}; --duration: {duration};\">\n\t{#each range(3, 1) as i}\n\t\t<div\n\t\t\tclass=\"dot\"\n\t\t\tclass:pause-animation={pause}\n\t\t\tstyle=\"--dotSize:{+size * 0.25}{unit}; --color:{color}; animation-delay:  {i *\n\t\t\t\t(+durationNum / 10)}{durationUnit};\"\n\t\t/>\n\t{/each}\n</div>\n\n<style>\n\t.wrapper {\n\t\theight: var(--size);\n\t\twidth: var(--size);\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n\n\t.dot {\n\t\theight: var(--dotSize);\n\t\twidth: var(--dotSize);\n\t\tbackground-color: var(--color);\n\t\tmargin: 2px;\n\t\tdisplay: inline-block;\n\t\tborder-radius: 100%;\n\t\tanimation: sync var(--duration) ease-in-out infinite alternate both running;\n\t}\n\t.pause-animation {\n\t\tanimation-play-state: paused;\n\t}\n\n\t@-webkit-keyframes sync {\n\t\t33% {\n\t\t\t-webkit-transform: translateY(10px);\n\t\t\ttransform: translateY(10px);\n\t\t}\n\t\t66% {\n\t\t\t-webkit-transform: translateY(-10px);\n\t\t\ttransform: translateY(-10px);\n\t\t}\n\t\t100% {\n\t\t\t-webkit-transform: translateY(0);\n\t\t\ttransform: translateY(0);\n\t\t}\n\t}\n\t@keyframes sync {\n\t\t33% {\n\t\t\t-webkit-transform: translateY(10px);\n\t\t\ttransform: translateY(10px);\n\t\t}\n\t\t66% {\n\t\t\t-webkit-transform: translateY(-10px);\n\t\t\ttransform: translateY(-10px);\n\t\t}\n\t\t100% {\n\t\t\t-webkit-transform: translateY(0);\n\t\t\ttransform: translateY(0);\n\t\t}\n\t}\n</style>\n","<script>\n  import { onMount } from 'svelte';\n  import { SyncLoader } from 'svelte-loading-spinners';\n  import PlayContainer from './Container.svelte';\n  import PlayHeader from './Header/index.svelte';\n  import { quizStore, playQuizStore } from '$lib/utils/store/org';\n  import { STEPS } from '$lib/utils/constants/quiz';\n  import { genQuizPin } from '$lib/utils/functions/org';\n  import PrimaryButton from '$lib/components/PrimaryButton/index.svelte';\n  import { VARIANTS } from '$lib/components/PrimaryButton/constants';\n\n  let isGettingPin = true;\n\n  function getPin() {\n    setTimeout(() => {\n      $quizStore.pin = genQuizPin();\n      isGettingPin = false;\n    }, 3000);\n  }\n\n  function goToPlayersStep() {\n    $playQuizStore.step = STEPS.WAIT_FOR_PLAYERS;\n  }\n\n  onMount(() => {\n    getPin();\n  });\n</script>\n\n<PlayContainer>\n  <div slot=\"header\">\n    <PlayHeader startCount={true} showCountDown={true} />\n  </div>\n\n  <div slot=\"body\" class=\"w-full rounded-md bg-white dark:bg-neutral-800 py-7 px-5\">\n    <div class=\"mb-3\">\n      <p>1. Visit</p>\n      <h3>play.KinetsHub.com</h3>\n    </div>\n    <div class=\"\">\n      <p>2. Enter Pin</p>\n      {#if isGettingPin}\n        <SyncLoader size=\"50\" color=\"#1d4ed8\" unit=\"px\" duration=\"1s\" />\n      {:else}\n        <h3>{$quizStore.pin}</h3>\n      {/if}\n    </div>\n  </div>\n\n  <div slot=\"footer\" class=\"flex justify-center items-center\">\n    <p class=\"font-bold mr-3\">Let's go</p>\n    <PrimaryButton label=\"View Players\" variant={VARIANTS.OUTLINED} onClick={goToPlayersStep} />\n  </div>\n</PlayContainer>\n","players\n","Question","Scoreboard","Podium","<script>\n  import { onMount } from 'svelte';\n  import { fly } from 'svelte/transition';\n  import { SyncLoader } from 'svelte-loading-spinners';\n  import { themeImages, STEPS } from '$lib/utils/constants/quiz';\n  import { quizStore, playQuizStore } from '$lib/utils/store/org';\n  import ConnectToPlay from './ConnectToPlay.svelte';\n  import Players from './Players.svelte';\n  import Question from './Question.svelte';\n  import Scoreboard from './Scoreboard.svelte';\n  import Podium from './Podium.svelte';\n\n  let bgImg;\n\n  onMount(() => {\n    bgImg = themeImages[$quizStore.theme].play;\n  });\n</script>\n\n{#if bgImg}\n  <div\n    class=\"absolute inset-0 z-50 bg-white h-screen w-screen\"\n    in:fly={{ y: 500, duration: 500 }}\n    out:fly={{ y: 500, duration: 500 }}\n  >\n    <div\n      class=\"p-5 h-full w-full\"\n      style=\"background: url({bgImg}) no-repeat center center fixed; -webkit-background-size: cover;-moz-background-size: cover;-o-background-size: cover;background-size: cover;min-height: 100vh;height: fit-content;\"\n    >\n      {#if $playQuizStore.step === STEPS.CONNECT_TO_PLAY}\n        <ConnectToPlay />\n      {:else if $playQuizStore.step === STEPS.WAIT_FOR_PLAYERS}\n        <Players />\n      {:else if $playQuizStore.step === STEPS.SHOW_NEXT_QUESTION}\n        <Question />\n      {:else if $playQuizStore.step === STEPS.SCOREBOARD}\n        <Scoreboard />\n      {:else if $playQuizStore.step === STEPS.PODIUM}\n        <Podium />\n      {:else}\n        <div class=\"w-full m-auto\">\n          <SyncLoader size=\"20\" color=\"#1d4ed8\" unit=\"px\" duration=\"1s\" />\n        </div>\n      {/if}\n    </div>\n  </div>\n{/if}\n","function showAppsSideBar(path) {\n  return path?.includes('/lessons/') && !path?.includes('landingpage');\n}\n\nexport default showAppsSideBar;\n","import { PUBLIC_ROUTES } from '$lib/utils/constants/routes';\n\nexport default (route = '') => {\n  return PUBLIC_ROUTES.some((publicRoute) => {\n    const regex = new RegExp(publicRoute, 'g');\n    return regex.test(route);\n  });\n};\n","import { ROUTES_TO_HIDE_NAV } from '$lib/utils/constants/routes';\n\nexport default (route: string): boolean => {\n  return ROUTES_TO_HIDE_NAV.some((publicRoute) => {\n    const regex = new RegExp(publicRoute, 'g');\n    return regex.test(route);\n  });\n};\n","export default (path: string): boolean => {\n  return ['login', 'signup', 'onboarding'].some((r) => path.includes(r)) || path === '';\n};\n","// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\nexport { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isNaN, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable };\n//# sourceMappingURL=is.js.map\n","import { isString, isRegExp } from './is.js';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nfunction isMatchingPattern(\n  value,\n  pattern,\n  requireExactStringMatch = false,\n) {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nfunction stringMatchesSomePattern(\n  testString,\n  patterns = [],\n  requireExactStringMatch = false,\n) {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n\nexport { isMatchingPattern, safeJoin, snipLine, stringMatchesSomePattern, truncate };\n//# sourceMappingURL=string.js.map\n","import { isInstanceOf } from './is.js';\nimport { truncate } from './string.js';\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nfunction applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation,\n  parser,\n  maxValueLimit = 250,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException ,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation,\n  parser,\n  limit,\n  error,\n  key,\n  prevExceptions,\n  exception,\n  exceptionId,\n) {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  if (isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception, exceptionId) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    is_exception_group: true,\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception,\n  source,\n  exceptionId,\n  parentId,\n) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions, maxValueLength) {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n\nexport { applyAggregateErrorsToEvent };\n//# sourceMappingURL=aggregate-errors.js.map\n","/** Internal global with common properties and Sentry extensions  */\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj) {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nconst GLOBAL_OBJ =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function () {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nfunction getGlobalObject() {\n  return GLOBAL_OBJ ;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  const gbl = (obj || GLOBAL_OBJ) ;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n\nexport { GLOBAL_OBJ, getGlobalObject, getGlobalSingleton };\n//# sourceMappingURL=worldwide.js.map\n","import { isString } from './is.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(\n  elem,\n  options = {},\n) {\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  const elem = el\n\n;\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getDomElement(selector) {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) ;\n  }\n  return null;\n}\n\nexport { getDomElement, getLocationHref, htmlTreeAsString };\n//# sourceMappingURL=browser.js.map\n","import { getGlobalSingleton, GLOBAL_OBJ } from './worldwide.js';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nconst CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'] ;\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const originalConsole = GLOBAL_OBJ.console ;\n  const wrappedLevels = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // TODO(v7): Remove this check as it's only needed for Node 6\n    const originalWrappedFunc =\n      originalConsole[level] && (originalConsole[level] ).__sentry_original__;\n    if (level in originalConsole && originalWrappedFunc) {\n      wrappedLevels[level] = originalConsole[level] ;\n      originalConsole[level] = originalWrappedFunc ;\n    }\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(level => {\n      originalConsole[level] = wrappedLevels[level ];\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  const logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nlet logger;\nif ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n  logger = getGlobalSingleton('logger', makeLogger);\n} else {\n  logger = makeLogger();\n}\n\nexport { CONSOLE_LEVELS, consoleSandbox, logger };\n//# sourceMappingURL=logger.js.map\n","import { logger } from './logger.js';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nfunction dsnFromString(str) {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    // eslint-disable-next-line no-console\n    console.error(`Invalid Sentry Dsn: ${str}`);\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!(typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nfunction makeDsn(from) {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n\nexport { dsnFromString, dsnToString, makeDsn };\n//# sourceMappingURL=dsn.js.map\n","/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n\n   constructor( message, logLevel = 'warn') {\n    super(message);this.message = message;\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n\nexport { SentryError };\n//# sourceMappingURL=error.js.map\n","import { htmlTreeAsString } from './browser.js';\nimport { isError, isEvent, isInstanceOf, isElement, isPlainObject, isPrimitive } from './is.js';\nimport { truncate } from './string.js';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] ;\n  const wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      markFunctionWrapped(wrapped, original);\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n    value: value,\n    writable: true,\n    configurable: true,\n  });\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  const proto = original.prototype || {};\n  wrapped.prototype = original.prototype = proto;\n  addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(value)\n\n {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if (isPlainObject(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\nexport { addNonEnumerableProperty, convertToPlainObject, dropUndefinedKeys, extractExceptionKeysForMessage, fill, getOriginalFunction, markFunctionWrapped, objectify, urlEncode };\n//# sourceMappingURL=object.js.map\n","import { node } from './node-stack-trace.js';\n\nconst STACKTRACE_FRAME_LIMIT = 50;\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirst = 0) => {\n    const frames = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirst; i < lines.length; i++) {\n      const line = lines[i];\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = stack.slice(0, STACKTRACE_FRAME_LIMIT);\n\n  const lastFrameFunction = localStack[localStack.length - 1].function;\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (lastFrameFunction && /sentryWrapped/.test(lastFrameFunction)) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  const firstFrameFunction = localStack[localStack.length - 1].function;\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (firstFrameFunction && /captureMessage|captureException/.test(firstFrameFunction)) {\n    localStack.pop();\n  }\n\n  return localStack.map(frame => ({\n    ...frame,\n    filename: frame.filename || localStack[localStack.length - 1].filename,\n    function: frame.function || '?',\n  }));\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nfunction nodeStackLineParser(getModule) {\n  return [90, node(getModule)];\n}\n\nexport { createStackParser, getFunctionName, nodeStackLineParser, stackParserFromStackParserOptions, stripSentryFramesAndReverse };\n//# sourceMappingURL=stacktrace.js.map\n","import { logger } from './logger.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFetch(func) {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport { isNativeFetch, supportsDOMError, supportsDOMException, supportsErrorEvent, supportsFetch, supportsNativeFetch, supportsReferrerPolicy, supportsReportingObserver };\n//# sourceMappingURL=supports.js.map\n","import { getGlobalObject } from '../worldwide.js';\n\n// Based on https://github.com/angular/angular.js/pull/13945/files\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chrome = (WINDOW ).chrome;\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\nexport { supportsHistory };\n//# sourceMappingURL=supportsHistory.js.map\n","import { isString } from './is.js';\nimport { logger, CONSOLE_LEVELS } from './logger.js';\nimport { fill } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\nimport { supportsNativeFetch } from './supports.js';\nimport { getGlobalObject } from './worldwide.js';\nimport { supportsHistory } from './vendor/supportsHistory.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\nconst SENTRY_XHR_DATA_KEY = '__sentry_xhr_v2__';\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nconst handlers = {};\nconst instrumented = {};\n\n/** Instruments given API */\nfunction instrument(type) {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('unknown instrumentation type:', type);\n      return;\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addInstrumentationHandler(type, callback) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(callback);\n  instrument(type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type, data) {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (const handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole() {\n  if (!('console' in WINDOW)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in WINDOW.console)) {\n      return;\n    }\n\n    fill(WINDOW.console, level, function (originalConsoleMethod) {\n      return function (...args) {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleMethod) {\n          originalConsoleMethod.apply(WINDOW.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch() {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(WINDOW, 'fetch', function (originalFetch) {\n    return function (...args) {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(WINDOW, args).then(\n        (response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp(obj, prop) {\n  return !!obj && typeof obj === 'object' && !!(obj )[prop];\n}\n\nfunction getUrlFromResource(resource) {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request\n */\nfunction parseFetchArgs(fetchArgs) {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs ;\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg ),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n\n/** JSDoc */\nfunction instrumentXHR() {\n  if (!('XMLHttpRequest' in WINDOW)) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen) {\n    return function ( ...args) {\n      const url = args[1];\n      const xhrInfo = (this[SENTRY_XHR_DATA_KEY] = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n        request_headers: {},\n      });\n\n      // if Sentry key appears in URL, don't capture it as a request\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (isString(url) && xhrInfo.method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args: args ,\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr: this,\n          } );\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        fill(this, 'onreadystatechange', function (original) {\n          return function ( ...readyStateArgs) {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      fill(this, 'setRequestHeader', function (original) {\n        return function ( ...setRequestHeaderArgs) {\n          const [header, value] = setRequestHeaderArgs ;\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend) {\n    return function ( ...args) {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n      if (sentryXhrData && args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref;\n\n/** JSDoc */\nfunction instrumentHistory() {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function ( ...args) {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction) {\n    return function ( ...args) {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\nconst debounceDuration = 1000;\nlet debounceTimerID;\nlet lastCapturedEvent;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous, current) {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event) {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    const target = event.target ;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler, globalListener = false) {\n  return (event) => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\n/** JSDoc */\nfunction instrumentDOM() {\n  if (!('document' in WINDOW)) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (WINDOW )[target] && (WINDOW )[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener) {\n      return function (\n\n        type,\n        listener,\n        options,\n      ) {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this ;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener) {\n        return function (\n\n          type,\n          listener,\n          options,\n        ) {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this ;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\nlet _oldOnErrorHandler = null;\n/** JSDoc */\nfunction instrumentError() {\n  _oldOnErrorHandler = WINDOW.onerror;\n\n  WINDOW.onerror = function (msg, url, line, column, error) {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  WINDOW.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\nlet _oldOnUnhandledRejectionHandler = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = WINDOW.onunhandledrejection;\n\n  WINDOW.onunhandledrejection = function (e) {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  WINDOW.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexport { SENTRY_XHR_DATA_KEY, addInstrumentationHandler, parseFetchArgs };\n//# sourceMappingURL=instrument.js.map\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Helper to decycle json objects\n */\nfunction memoBuilder() {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\nexport { memoBuilder };\n//# sourceMappingURL=memo.js.map\n","import { addNonEnumerableProperty } from './object.js';\nimport { snipLine } from './string.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  const gbl = GLOBAL_OBJ ;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  if (crypto && crypto.randomUUID) {\n    return crypto.randomUUID().replace(/-/g, '');\n  }\n\n  const getRandomByte =\n    crypto && crypto.getRandomValues ? () => crypto.getRandomValues(new Uint8Array(1))[0] : () => Math.random() * 16;\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nfunction arrayify(maybeArray) {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n\nexport { addContextToFrame, addExceptionMechanism, addExceptionTypeValue, arrayify, checkOrSetAlreadyCaught, getEventDescription, parseSemver, uuid4 };\n//# sourceMappingURL=misc.js.map\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nfunction getSDKSource() {\n  // @ts-ignore \"npm\" is injected by rollup during build process\n  return \"npm\";\n}\n\nexport { getSDKSource, isBrowserBundle };\n//# sourceMappingURL=env.js.map\n","import { isBrowserBundle } from './env.js';\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nfunction dynamicRequire(mod, request) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\nexport { dynamicRequire, isNodeEnv, loadModule };\n//# sourceMappingURL=node.js.map\n","import { isNaN, isSyntheticEvent } from './is.js';\nimport { memoBuilder } from './memo.js';\nimport { convertToPlainObject } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction normalize(input, depth = 100, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  memo = memoBuilder(),\n) {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))\n  ) {\n    return value ;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value )['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value )['__sentry_override_normalization_depth__'] )\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value );\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value) {\n  const prototype = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\nexport { normalize, normalizeToSize, visit as walk };\n//# sourceMappingURL=normalize.js.map\n","import { isThenable } from './is.js';\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  const PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  const RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  const REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n   __init() {this._state = States.PENDING;}\n   __init2() {this._handlers = [];}\n\n   constructor(\n    executor,\n  ) {SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);SyncPromise.prototype.__init5.call(this);SyncPromise.prototype.__init6.call(this);\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init3() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init4() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init5() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init6() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise };\n//# sourceMappingURL=syncpromise.js.map\n","import { SentryError } from './error.js';\nimport { rejectedSyncPromise, SyncPromise, resolvedSyncPromise } from './syncpromise.js';\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  const buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\nexport { makePromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map\n","/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url) {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nfunction getNumberOfUrlSegments(url) {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span description\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nfunction getSanitizedUrlString(url) {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        .replace(':80', '')\n        .replace(':443', '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n\nexport { getNumberOfUrlSegments, getSanitizedUrlString, parseUrl, stripUrlQueryAndFragment };\n//# sourceMappingURL=url.js.map\n","// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nconst validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nfunction severityFromString(level) {\n  return severityLevelFromString(level) ;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;\n}\n\nexport { severityFromString, severityLevelFromString, validSeverityLevels };\n//# sourceMappingURL=severity.js.map\n","import { isNodeEnv, dynamicRequire } from './node.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance() {\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance() {\n  try {\n    const perfHooks = dynamicRequire(module, 'perf_hooks') ;\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nconst dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nconst timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n/**\n * Re-exported with an old name for backwards-compatibility.\n * TODO (v8): Remove this\n *\n * @deprecated Use `timestampInSeconds` instead.\n */\nconst timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nconst usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nconst browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\nexport { _browserPerformanceTimeOriginMode, browserPerformanceTimeOrigin, dateTimestampInSeconds, timestampInSeconds, timestampWithMs, usingPerformanceAPI };\n//# sourceMappingURL=time.js.map\n","import { dsnToString } from './dsn.js';\nimport { normalize } from './normalize.js';\nimport { dropUndefinedKeys } from './object.js';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nfunction envelopeContainsItemType(envelope, types) {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input, textEncoder) {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope, textEncoder) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nfunction parseEnvelope(\n  env,\n  textEncoder,\n  textDecoder,\n) {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length) {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson() {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) ;\n  }\n\n  const envelopeHeader = readJson();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(\n  attachment,\n  textEncoder,\n) {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from from the metadata or an events */\nfunction getSdkMetadataForEnvelopeHeader(metadataOrEvent) {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n\nexport { addItemToEnvelope, createAttachmentEnvelopeItem, createEnvelope, createEventEnvelopeHeaders, envelopeContainsItemType, envelopeItemTypeToDataCategory, forEachEnvelopeItem, getSdkMetadataForEnvelopeHeader, parseEnvelope, serializeEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { createEnvelope } from './envelope.js';\nimport { dateTimestampInSeconds } from './time.js';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nfunction createClientReportEnvelope(\n  discarded_events,\n  dsn,\n  timestamp,\n) {\n  const clientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope(dsn ? { dsn } : {}, [clientReportItem]);\n}\n\nexport { createClientReportEnvelope };\n//# sourceMappingURL=clientreport.js.map\n","// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nconst DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nfunction disabledUntil(limits, category) {\n  return limits[category] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, category, now = Date.now()) {\n  return disabledUntil(limits, category) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  const updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories] = limit.split(':', 2);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          updatedRateLimits[category] = now + delay;\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\nexport { DEFAULT_RETRY_AFTER, disabledUntil, isRateLimited, parseRetryAfterHeader, updateRateLimits };\n//# sourceMappingURL=ratelimit.js.map\n","const DEFAULT_ENVIRONMENT = 'production';\n\nexport { DEFAULT_ENVIRONMENT };\n//# sourceMappingURL=constants.js.map\n","import { timestampInSeconds, uuid4, dropUndefinedKeys } from '@sentry/utils';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\nexport { closeSession, makeSession, updateSession };\n//# sourceMappingURL=session.js.map\n","import { isPlainObject, dateTimestampInSeconds, SyncPromise, logger, isThenable, arrayify, getGlobalSingleton, uuid4 } from '@sentry/utils';\nimport { updateSession } from './session.js';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nclass Scope  {\n  /** Flag if notifying is happening. */\n\n  /** Callback for client to receive scope changes. */\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n\n  /** Array of breadcrumbs. */\n\n  /** User */\n\n  /** Tags */\n\n  /** Extra */\n\n  /** Contexts */\n\n  /** Attachments */\n\n  /** Propagation Context for distributed tracing */\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n\n  /** Fingerprint */\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n\n  /** Transaction Name */\n\n  /** Span */\n\n  /** Session */\n\n  /** Request Mode Session Status */\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n   constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = generatePropagationContext();\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n   static clone(scope) {\n    const newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n      newScope._requestSession = scope._requestSession;\n      newScope._attachments = [...scope._attachments];\n      newScope._sdkProcessingMetadata = { ...scope._sdkProcessingMetadata };\n      newScope._propagationContext = { ...scope._propagationContext };\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this._user = user || {};\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n  ) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSpan(span) {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSpan() {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransaction() {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this.getSpan();\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      const updatedScope = (captureContext )(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n      if (captureContext._requestSession) {\n        this._requestSession = captureContext._requestSession;\n      }\n      if (captureContext._propagationContext) {\n        this._propagationContext = captureContext._propagationContext;\n      }\n    } else if (isPlainObject(captureContext)) {\n      // eslint-disable-next-line no-param-reassign\n      captureContext = captureContext ;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n      if (captureContext.requestSession) {\n        this._requestSession = captureContext.requestSession;\n      }\n      if (captureContext.propagationContext) {\n        this._propagationContext = captureContext.propagationContext;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    this._propagationContext = generatePropagationContext();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n    this._breadcrumbs = [...this._breadcrumbs, mergedBreadcrumb].slice(-maxCrumbs);\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getLastBreadcrumb() {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getAttachments() {\n    return this._attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   */\n   applyToEvent(event, hint = {}) {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      const transaction = this._span.transaction;\n      if (transaction) {\n        event.sdkProcessingMetadata = {\n          dynamicSamplingContext: transaction.getDynamicSamplingContext(),\n          ...event.sdkProcessingMetadata,\n        };\n        const transactionName = transaction.name;\n        if (transactionName) {\n          event.tags = { transaction: transactionName, ...event.tags };\n        }\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    event.sdkProcessingMetadata = {\n      ...event.sdkProcessingMetadata,\n      ...this._sdkProcessingMetadata,\n      propagationContext: this._propagationContext,\n    };\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setPropagationContext(context) {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getPropagationContext() {\n    return this._propagationContext;\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n   _notifyEventProcessors(\n    processors,\n    event,\n    hint,\n    index = 0,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      const processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        const result = processor({ ...event }, hint) ;\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          processor.id &&\n          result === null &&\n          logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n        if (isThenable(result)) {\n          void result\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          void this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n   _applyFingerprint(event) {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n  return getGlobalSingleton('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nfunction addGlobalEventProcessor(callback) {\n  getGlobalEventProcessors().push(callback);\n}\n\nfunction generatePropagationContext() {\n  return {\n    traceId: uuid4(),\n    spanId: uuid4().substring(16),\n    sampled: false,\n  };\n}\n\nexport { Scope, addGlobalEventProcessor };\n//# sourceMappingURL=scope.js.map\n","import { uuid4, dateTimestampInSeconds, consoleSandbox, logger, GLOBAL_OBJ, getGlobalSingleton } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from './constants.js';\nimport { Scope } from './scope.js';\nimport { closeSession, makeSession, updateSession } from './session.js';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nconst API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * @inheritDoc\n */\nclass Hub  {\n  /** Is a {@link Layer}[] containing the client and scope */\n\n  /** Contains the last event id of a captured event.  */\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n   constructor(client, scope = new Scope(),   _version = API_VERSION) {this._version = _version;\n    this._stack = [{ scope }];\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isOlderThan(version) {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   bindClient(client) {\n    const top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   pushScope() {\n    // We want to clone the content of prev scope\n    const scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   popScope() {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   withScope(callback) {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getClient() {\n    return this.getStackTop().client ;\n  }\n\n  /** Returns the scope of the top stack. */\n   getScope() {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n   getStack() {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureException(exception, hint) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error('Sentry syntheticException');\n    this._withClient((client, scope) => {\n      client.captureException(\n        exception,\n        {\n          originalException: exception,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n  ) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error(message);\n    this._withClient((client, scope) => {\n      client.captureMessage(\n        message,\n        level,\n        {\n          originalException: message,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n\n    this._withClient((client, scope) => {\n      client.captureEvent(event, { ...hint, event_id: eventId }, scope);\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, hint) {\n    const { scope, client } = this.getStackTop();\n\n    if (!client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this.getScope().setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this.getScope().setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this.getScope().setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this.getScope().setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this.getScope().setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   setContext(name, context) {\n    this.getScope().setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   configureScope(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   run(callback) {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startTransaction(context, customSamplingContext) {\n    const result = this._callExtensionMethod('startTransaction', context, customSamplingContext);\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && !result) {\n      // eslint-disable-next-line no-console\n      console.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':\nSentry.addTracingExtensions();\nSentry.init({...});\n`);\n    }\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   traceHeaders() {\n    return this._callExtensionMethod('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(endSession = false) {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   endSession() {\n    const layer = this.getStackTop();\n    const scope = layer.scope;\n    const session = scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    scope.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startSession(context) {\n    const { scope, client } = this.getStackTop();\n    const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n    const session = makeSession({\n      release,\n      environment,\n      user: scope.getUser(),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    // End existing session if there's one\n    const currentSession = scope.getSession && scope.getSession();\n    if (currentSession && currentSession.status === 'ok') {\n      updateSession(currentSession, { status: 'exited' });\n    }\n    this.endSession();\n\n    // Afterwards we set the new session on the scope\n    scope.setSession(session);\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   */\n   shouldSendDefaultPii() {\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n   _sendSessionUpdate() {\n    const { scope, client } = this.getStackTop();\n\n    const session = scope.getSession();\n    if (session && client && client.captureSession) {\n      client.captureSession(session);\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n   _withClient(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(client, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   _callExtensionMethod(method, ...args) {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  GLOBAL_OBJ.__SENTRY__ = GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nfunction makeMain(hub) {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nfunction getCurrentHub() {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    const hub = registry.__SENTRY__.acs.getCurrentHub();\n\n    if (hub) {\n      return hub;\n    }\n  }\n\n  // Return hub that lives on a global object\n  return getGlobalHub(registry);\n}\n\nfunction getGlobalHub(registry = getMainCarrier()) {\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * If the carrier does not contain a hub, a new hub is created with the global hub client and scope.\n */\nfunction ensureHubOnCarrier(carrier, parent = getGlobalHub()) {\n  // If there's no hub on current domain, or it's an old API, assign a new one\n  if (!hasHubOnCarrier(carrier) || getHubFromCarrier(carrier).isOlderThan(API_VERSION)) {\n    const globalHubTopStack = parent.getStackTop();\n    setHubOnCarrier(carrier, new Hub(globalHubTopStack.client, Scope.clone(globalHubTopStack.scope)));\n  }\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nfunction setAsyncContextStrategy(strategy) {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  registry.__SENTRY__ = registry.__SENTRY__ || {};\n  registry.__SENTRY__.acs = strategy;\n}\n\n/**\n * Runs the supplied callback in its own async context. Async Context strategies are defined per SDK.\n *\n * @param callback The callback to run in its own async context\n * @param options Options to pass to the async context strategy\n * @returns The result of the callback\n */\nfunction runWithAsyncContext(callback, options = {}) {\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    return registry.__SENTRY__.acs.runWithAsyncContext(callback, options);\n  }\n\n  // if there was no strategy, fallback to just calling the callback\n  return callback();\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nfunction getHubFromCarrier(carrier) {\n  return getGlobalSingleton('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nfunction setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n\nexport { API_VERSION, Hub, ensureHubOnCarrier, getCurrentHub, getHubFromCarrier, getMainCarrier, makeMain, runWithAsyncContext, setAsyncContextStrategy, setHubOnCarrier };\n//# sourceMappingURL=hub.js.map\n","import { dropUndefinedKeys } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from '../constants.js';\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatchs the `createDsc` lifecycle hook as a side effect.\n */\nfunction getDynamicSamplingContextFromClient(\n  trace_id,\n  client,\n  scope,\n) {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n  const { segment: user_segment } = (scope && scope.getUser()) || {};\n\n  const dsc = dropUndefinedKeys({\n    environment: options.environment || DEFAULT_ENVIRONMENT,\n    release: options.release,\n    user_segment,\n    public_key,\n    trace_id,\n  }) ;\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\nexport { getDynamicSamplingContextFromClient };\n//# sourceMappingURL=dynamicSamplingContext.js.map\n","import { logger, uuid4 } from '@sentry/utils';\nimport { getCurrentHub } from './hub.js';\n\n// Note: All functions in this file are typed with a return value of `ReturnType<Hub[HUB_FUNCTION]>`,\n// where HUB_FUNCTION is some method on the Hub class.\n//\n// This is done to make sure the top level SDK methods stay in sync with the hub methods.\n// Although every method here has an explicit return type, some of them (that map to void returns) do not\n// contain `return` keywords. This is done to save on bundle size, as `return` is not minifiable.\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @param captureContext Additional scope data to apply to exception event.\n * @returns The generated eventId.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nfunction captureException(exception, captureContext) {\n  return getCurrentHub().captureException(exception, { captureContext });\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param Severity Define the level of the message.\n * @returns The generated eventId.\n */\nfunction captureMessage(\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext,\n) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nfunction captureEvent(event, hint) {\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nfunction configureScope(callback) {\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nfunction addBreadcrumb(breadcrumb) {\n  getCurrentHub().addBreadcrumb(breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setContext(name, context) {\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nfunction withScope(callback) {\n  getCurrentHub().withScope(callback);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nfunction startTransaction(\n  context,\n  customSamplingContext,\n) {\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction captureCheckIn(checkIn, upsertMonitorConfig) {\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  const client = hub.getClient();\n  if (!client) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n\nexport { addBreadcrumb, captureCheckIn, captureEvent, captureException, captureMessage, configureScope, setContext, setExtra, setExtras, setTag, setTags, setUser, startTransaction, withScope };\n//# sourceMappingURL=exports.js.map\n","import { makeDsn, dsnToString, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn, sdkInfo) {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions = {} ,\n) {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint };\n//# sourceMappingURL=api.js.map\n","import { getSdkMetadataForEnvelopeHeader, dsnToString, createEnvelope, createEventEnvelopeHeaders } from '@sentry/utils';\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nfunction createSessionEnvelope(\n  session,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  const envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsnToString(dsn) }),\n  };\n\n  const envelopeItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session.toJSON()];\n\n  return createEnvelope(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nfunction createEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n\n  /*\n    Note: Due to TS, event.type may be `replay_event`, theoretically.\n    In practice, we never call `createEventEnvelope` with `replay_event` type,\n    and we'd have to adjut a looot of types to make this work properly.\n    We want to avoid casting this around, as that could lead to bugs (e.g. when we add another type)\n    So the safe choice is to really guard against the replay_event type here.\n  */\n  const eventType = event.type && event.type !== 'replay_event' ? event.type : 'event';\n\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n\n  const envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  const eventItem = [{ type: eventType }, event];\n  return createEnvelope(envelopeHeaders, [eventItem]);\n}\n\nexport { createEventEnvelope, createSessionEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { arrayify, logger } from '@sentry/utils';\nimport { getCurrentHub } from './hub.js';\nimport { addGlobalEventProcessor } from './scope.js';\n\nconst installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations) {\n  const integrationsByName = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.keys(integrationsByName).map(k => integrationsByName[k]);\n}\n\n/** Gets integrations to install */\nfunction getIntegrationsToSetup(options) {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations;\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = arrayify(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = findIndex(finalIntegrations, integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(integrations) {\n  const integrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/** Setup a single integration.  */\nfunction setupIntegration(integration, integrationIndex) {\n  integrationIndex[integration.name] = integration;\n\n  if (installedIntegrations.indexOf(integration.name) === -1) {\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Integration installed: ${integration.name}`);\n  }\n}\n\n// Polyfill for Array.findIndex(), which is not supported in ES5\nfunction findIndex(arr, callback) {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nexport { getIntegrationsToSetup, installedIntegrations, setupIntegration, setupIntegrations };\n//# sourceMappingURL=integration.js.map\n","import { uuid4, dateTimestampInSeconds, resolvedSyncPromise, truncate, GLOBAL_OBJ, normalize } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from '../constants.js';\nimport { Scope } from '../scope.js';\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * Note: This also triggers callbacks for `addGlobalEventProcessor`, but not `beforeSend`.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nfunction prepareEvent(\n  options,\n  event,\n  hint,\n  scope,\n) {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1000 } = options;\n  const prepared = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  let finalScope = scope;\n  if (hint.captureContext) {\n    finalScope = Scope.clone(finalScope).update(hint.captureContext);\n  }\n\n  // We prepare the result here with a resolved Event.\n  let result = resolvedSyncPromise(prepared);\n\n  // This should be the last thing called, since we want that\n  // {@link Hub.addEventProcessor} gets the finished prepared event.\n  //\n  // We need to check for the existence of `finalScope.getAttachments`\n  // because `getAttachments` can be undefined if users are using an older version\n  // of `@sentry/core` that does not have the `getAttachments` method.\n  // See: https://github.com/getsentry/sentry-javascript/issues/5229\n  if (finalScope) {\n    // Collect attachments from the hint and scope\n    if (finalScope.getAttachments) {\n      const attachments = [...(hint.attachments || []), ...finalScope.getAttachments()];\n\n      if (attachments.length) {\n        hint.attachments = attachments;\n      }\n    }\n\n    // In case we have a hub we reassign it.\n    result = finalScope.applyToEvent(prepared, hint);\n  }\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n *  Enhances event using the client configuration.\n *  It takes care of all \"static\" values like environment, release and `dist`,\n *  as well as truncating overly long values.\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event, options) {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  if (!('environment' in event)) {\n    event.environment = 'environment' in options ? environment : DEFAULT_ENVIRONMENT;\n  }\n\n  if (event.release === undefined && release !== undefined) {\n    event.release = release;\n  }\n\n  if (event.dist === undefined && dist !== undefined) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = truncate(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = truncate(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\nconst debugIdStackParserCache = new WeakMap();\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nfunction applyDebugIds(event, stackParser) {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return;\n  }\n\n  let debugIdStackFramesCache;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce((acc, debugIdStackTrace) => {\n    let parsedStack;\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      if (stackFrame.filename) {\n        acc[stackFrame.filename] = debugIdMap[debugIdStackTrace];\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (frame.filename) {\n          frame.debug_id = filenameDebugIdMap[frame.filename];\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nfunction applyDebugMeta(event) {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap = {};\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (frame.debug_id) {\n          if (frame.abs_path) {\n            filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n          } else if (frame.filename) {\n            filenameDebugIdMap[frame.filename] = frame.debug_id;\n          }\n          delete frame.debug_id;\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.keys(filenameDebugIdMap).forEach(filename => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id: filenameDebugIdMap[filename],\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event, integrationNames) {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event, depth, maxBreadth) {\n  if (!event) {\n    return null;\n  }\n\n  const normalized = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      // We cannot use the spread operator here because `toJSON` on `span` is non-enumerable\n      if (span.data) {\n        span.data = normalize(span.data, depth, maxBreadth);\n      }\n      return span;\n    });\n  }\n\n  return normalized;\n}\n\nexport { applyDebugIds, applyDebugMeta, prepareEvent };\n//# sourceMappingURL=prepareEvent.js.map\n","import { makeDsn, logger, checkOrSetAlreadyCaught, isPrimitive, resolvedSyncPromise, addItemToEnvelope, createAttachmentEnvelopeItem, SyncPromise, rejectedSyncPromise, SentryError, isThenable, isPlainObject } from '@sentry/utils';\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api.js';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope.js';\nimport { setupIntegrations, setupIntegration } from './integration.js';\nimport { updateSession } from './session.js';\nimport { getDynamicSamplingContextFromClient } from './tracing/dynamicSamplingContext.js';\nimport { prepareEvent } from './utils/prepareEvent.js';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass BaseClient {\n  /** Options passed to the SDK. */\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n\n  /** Array of set up integrations. */\n   __init() {this._integrations = {};}\n\n  /** Indicates whether this client's integrations have been set up. */\n   __init2() {this._integrationsInitialized = false;}\n\n  /** Number of calls being processed */\n   __init3() {this._numProcessing = 0;}\n\n  /** Holds flushable  */\n   __init4() {this._outcomes = {};}\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n   __init5() {this._hooks = {};}\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {BaseClient.prototype.__init.call(this);BaseClient.prototype.__init2.call(this);BaseClient.prototype.__init3.call(this);BaseClient.prototype.__init4.call(this);BaseClient.prototype.__init5.call(this);\n    this._options = options;\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('No DSN provided, client will not do anything.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options);\n      this._transport = options.transport({\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   captureException(exception, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n    scope,\n  ) {\n    let eventId = hint && hint.event_id;\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(String(message), level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this._captureEvent(event, hint, scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(session) {\n    if (!this._isEnabled()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('SDK not enabled, will not capture session.');\n      return;\n    }\n\n    if (!(typeof session.release === 'string')) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n   getSdkMetadata() {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush(timeout) {\n    const transport = this._transport;\n    if (transport) {\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /**\n   * Sets up the integrations\n   */\n   setupIntegrations() {\n    if (this._isEnabled() && !this._integrationsInitialized) {\n      this._integrations = setupIntegrations(this._options.integrations);\n      this._integrationsInitialized = true;\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   */\n   getIntegrationById(integrationId) {\n    return this._integrations[integrationId];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    try {\n      return (this._integrations[integration.id] ) || null;\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addIntegration(integration) {\n    setupIntegration(integration, this._integrations);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint = {}) {\n    if (this._dsn) {\n      let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n      for (const attachment of hint.attachments || []) {\n        env = addItemToEnvelope(\n          env,\n          createAttachmentEnvelopeItem(\n            attachment,\n            this._options.transportOptions && this._options.transportOptions.textEncoder,\n          ),\n        );\n      }\n\n      const promise = this._sendEnvelope(env);\n      if (promise) {\n        promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendSession(session) {\n    if (this._dsn) {\n      const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n      void this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   recordDroppedEvent(reason, category, _event) {\n    // Note: we use `event` in replay, where we overwrite this hook.\n\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Adding outcome: \"${key}\"`);\n\n      // The following works because undefined + 1 === NaN and NaN is falsy\n      this._outcomes[key] = this._outcomes[key] + 1 || 1;\n    }\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   on(hook, callback) {\n    if (!this._hooks[hook]) {\n      this._hooks[hook] = [];\n    }\n\n    // @ts-ignore We assue the types are correct\n    this._hooks[hook].push(callback);\n  }\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   emit(hook, ...rest) {\n    if (this._hooks[hook]) {\n      // @ts-ignore we cannot enforce the callback to match the hook\n      this._hooks[hook].forEach(callback => callback(...rest));\n    }\n  }\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new SyncPromise(resolve => {\n      let ticked = 0;\n      const tick = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a valid Dsn is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._dsn !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(event, hint, scope) {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n    return prepareEvent(options, event, hint, scope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      // If a trace context is not set on the event, we use the propagationContext set on the event to\n      // generate a trace context. If the propagationContext does not have a dynamic sampling context, we\n      // also generate one for it.\n      const { propagationContext } = evt.sdkProcessingMetadata || {};\n      const trace = evt.contexts && evt.contexts.trace;\n      if (!trace && propagationContext) {\n        const { traceId: trace_id, spanId, parentSpanId, dsc } = propagationContext ;\n        evt.contexts = {\n          trace: {\n            trace_id,\n            span_id: spanId,\n            parent_span_id: parentSpanId,\n          },\n          ...evt.contexts,\n        };\n\n        const dynamicSamplingContext = dsc ? dsc : getDynamicSamplingContextFromClient(trace_id, this, scope);\n\n        evt.sdkProcessingMetadata = {\n          dynamicSamplingContext,\n          ...evt.sdkProcessingMetadata,\n        };\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(event, hint = {}, scope) {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason ;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(event, hint, scope) {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    if (!this._isEnabled()) {\n      return rejectedSyncPromise(new SentryError('SDK not enabled, will not capture event.', 'log'));\n    }\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (isError && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    return this._prepareEvent(event, hint, scope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          throw new SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n   _sendEnvelope(envelope) {\n    if (this._transport && this._dsn) {\n      this.emit('beforeEnvelope', envelope);\n\n      return this._transport.send(envelope).then(null, reason => {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult,\n  beforeSendLabel,\n) {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw new SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw new SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  options,\n  event,\n  hint,\n) {\n  const { beforeSend, beforeSendTransaction } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event) && beforeSendTransaction) {\n    return beforeSendTransaction(event, hint);\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event) {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map\n","import { logger } from '@sentry/utils';\nimport { getCurrentHub } from './hub.js';\n\n/** A class object that can instantiate Client objects. */\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(\n  clientClass,\n  options,\n) {\n  if (options.debug === true) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      // eslint-disable-next-line no-console\n      console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n    }\n  }\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  scope.update(options.initialScope);\n\n  const client = new clientClass(options);\n  hub.bindClient(client);\n}\n\nexport { initAndBind };\n//# sourceMappingURL=sdk.js.map\n","import { makePromiseBuffer, forEachEnvelopeItem, envelopeItemTypeToDataCategory, isRateLimited, resolvedSyncPromise, createEnvelope, SentryError, logger, serializeEnvelope, updateRateLimits } from '@sentry/utils';\n\nconst DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n) {\n  let rateLimits = {};\n  const flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    const filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const envelopeItemDataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, envelopeItemDataCategory)) {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', envelopeItemDataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope = createEnvelope(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason) => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type), event);\n      });\n    };\n\n    const requestTask = () =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  // We use this to identifify if the transport is the base transport\n  // TODO (v8): Remove this again as we'll no longer need it\n  send.__sentry__baseTransport__ = true;\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item, type) {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item )[1] : undefined;\n}\n\nexport { DEFAULT_TRANSPORT_BUFFER_SIZE, createTransport };\n//# sourceMappingURL=base.js.map\n","const SDK_VERSION = '7.61.0';\n\nexport { SDK_VERSION };\n//# sourceMappingURL=version.js.map\n","import { getOriginalFunction } from '@sentry/utils';\n\nlet originalFunctionToString;\n\n/** Patch toString calls to return proper name for wrapped functions */\nclass FunctionToString  {constructor() { FunctionToString.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'FunctionToString';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = FunctionToString.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    originalFunctionToString = Function.prototype.toString;\n\n    // intrinsics (like Function.prototype) might be immutable in some environments\n    // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      Function.prototype.toString = function ( ...args) {\n        const context = getOriginalFunction(this) || this;\n        return originalFunctionToString.apply(context, args);\n      };\n    } catch (e) {\n      // ignore errors here, just don't patch this\n    }\n  }\n} FunctionToString.__initStatic();\n\nexport { FunctionToString };\n//# sourceMappingURL=functiontostring.js.map\n","import { logger, getEventDescription, stringMatchesSomePattern } from '@sentry/utils';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\nconst DEFAULT_IGNORE_TRANSACTIONS = [\n  /^.*healthcheck.*$/,\n  /^.*healthy.*$/,\n  /^.*live.*$/,\n  /^.*ready.*$/,\n  /^.*heartbeat.*$/,\n  /^.*\\/health$/,\n  /^.*\\/healthz$/,\n];\n\n/** Options for the InboundFilters integration */\n\n/** Inbound filters configurable by the user */\nclass InboundFilters  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'InboundFilters';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = InboundFilters.id;}\n\n   constructor(  _options = {}) {this._options = _options;InboundFilters.prototype.__init.call(this);}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    const eventProcess = (event) => {\n      const hub = getCurrentHub();\n      if (hub) {\n        const self = hub.getIntegration(InboundFilters);\n        if (self) {\n          const client = hub.getClient();\n          const clientOptions = client ? client.getOptions() : {};\n          const options = _mergeOptions(self._options, clientOptions);\n          return _shouldDropEvent(event, options) ? null : event;\n        }\n      }\n      return event;\n    };\n\n    eventProcess.id = this.name;\n    addGlobalEventProcessor(eventProcess);\n  }\n} InboundFilters.__initStatic();\n\n/** JSDoc */\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [\n      ...(internalOptions.ignoreTransactions || []),\n      ...(clientOptions.ignoreTransactions || []),\n      ...(internalOptions.disableTransactionDefaults ? [] : DEFAULT_IGNORE_TRANSACTIONS),\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\n/** JSDoc */\nfunction _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event, ignoreTransactions) {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event) {\n  if (event.message) {\n    return [event.message];\n  }\n  if (event.exception) {\n    const { values } = event.exception;\n    try {\n      const { type = '', value = '' } = (values && values[values.length - 1]) || {};\n      return [`${value}`, `${type}: ${value}`];\n    } catch (oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(`Cannot extract message for event ${getEventDescription(event)}`);\n      return [];\n    }\n  }\n  return [];\n}\n\nfunction _isSentryError(event) {\n  try {\n    // @ts-ignore can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    let frames;\n    try {\n      // @ts-ignore we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n\nexport { InboundFilters, _mergeOptions, _shouldDropEvent };\n//# sourceMappingURL=inboundfilters.js.map\n","import { withScope, captureException } from '@sentry/core';\nimport { GLOBAL_OBJ, getOriginalFunction, markFunctionWrapped, addNonEnumerableProperty, addExceptionTypeValue, addExceptionMechanism } from '@sentry/utils';\n\nconst WINDOW = GLOBAL_OBJ ;\n\nlet ignoreOnError = 0;\n\n/**\n * @hidden\n */\nfunction shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nfunction ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nfunction wrap(\n  fn,\n  options\n\n = {},\n  before,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      return wrapper;\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped = function () {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope((scope) => {\n        scope.addEventProcessor((event) => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') ;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get() {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n */\n\nexport { WINDOW, ignoreNextOnError, shouldIgnoreOnError, wrap };\n//# sourceMappingURL=helpers.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addExceptionMechanism, resolvedSyncPromise, isErrorEvent, isDOMError, isDOMException, addExceptionTypeValue, isError, isPlainObject, isEvent, normalizeToSize, extractExceptionKeysForMessage } from '@sentry/utils';\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nfunction exceptionFromError(stackParser, ex) {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nfunction eventFromPlainObject(\n  stackParser,\n  exception,\n  syntheticException,\n  isUnhandledRejection,\n) {\n  const hub = getCurrentHub();\n  const client = hub.getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception, normalizeDepth),\n    },\n  };\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception ).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromError(stackParser, ex) {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser,\n  ex,\n) {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex) {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nfunction eventFromException(\n  stackParser,\n  exception,\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nfunction eventFromUnknownInput(\n  stackParser,\n  exception,\n  syntheticException,\n  attachStacktrace,\n  isUnhandledRejection,\n) {\n  let event;\n\n  if (isErrorEvent(exception ) && (exception ).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception ;\n    return eventFromError(stackParser, errorEvent.error );\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception) || isDOMException(exception )) {\n    const domException = exception ;\n\n    if ('stack' in (exception )) {\n      event = eventFromError(stackParser, exception );\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception ;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception , syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromString(\n  stackParser,\n  input,\n  syntheticException,\n  attachStacktrace,\n) {\n  const event = {\n    message: input,\n  };\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: input, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception,\n  { isUnhandledRejection },\n) {\n  const keys = extractExceptionKeysForMessage(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if (isEvent(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj) {\n  try {\n    const prototype = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n\nexport { eventFromError, eventFromException, eventFromMessage, eventFromPlainObject, eventFromString, eventFromUnknownInput, exceptionFromError, parseStackFrames };\n//# sourceMappingURL=eventbuilder.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addInstrumentationHandler, getEventDescription, severityLevelFromString, safeJoin, SENTRY_XHR_DATA_KEY, parseUrl, logger, htmlTreeAsString } from '@sentry/utils';\nimport { WINDOW } from '../helpers.js';\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst BREADCRUMB_INTEGRATION_ID = 'Breadcrumbs';\n\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nclass Breadcrumbs  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = BREADCRUMB_INTEGRATION_ID;}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Breadcrumbs.id;}\n\n  /**\n   * Options of the breadcrumbs integration.\n   */\n  // This field is public, because we use it in the browser client to check if the `sentry` option is enabled.\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {Breadcrumbs.prototype.__init.call(this);\n    this.options = {\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n   setupOnce() {\n    if (this.options.console) {\n      addInstrumentationHandler('console', _consoleBreadcrumb);\n    }\n    if (this.options.dom) {\n      addInstrumentationHandler('dom', _domBreadcrumb(this.options.dom));\n    }\n    if (this.options.xhr) {\n      addInstrumentationHandler('xhr', _xhrBreadcrumb);\n    }\n    if (this.options.fetch) {\n      addInstrumentationHandler('fetch', _fetchBreadcrumb);\n    }\n    if (this.options.history) {\n      addInstrumentationHandler('history', _historyBreadcrumb);\n    }\n  }\n\n  /**\n   * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n   */\n   addSentryBreadcrumb(event) {\n    if (this.options.sentry) {\n      getCurrentHub().addBreadcrumb(\n        {\n          category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n          event_id: event.event_id,\n          level: event.level,\n          message: getEventDescription(event),\n        },\n        {\n          event,\n        },\n      );\n    }\n  }\n} Breadcrumbs.__initStatic();\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _domBreadcrumb(dom) {\n  function _innerDomBreadcrumb(handlerData) {\n    let target;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event ;\n      target = _isEvent(event)\n        ? htmlTreeAsString(event.target, { keyAttrs, maxStringLength })\n        : htmlTreeAsString(event, { keyAttrs, maxStringLength });\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: `ui.${handlerData.name}`,\n        message: target,\n      },\n      {\n        event: handlerData.event,\n        name: handlerData.name,\n        global: handlerData.global,\n      },\n    );\n  }\n\n  return _innerDomBreadcrumb;\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _consoleBreadcrumb(handlerData) {\n  // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n  // console warnings. This happens when a Vue template is rendered with\n  // an undeclared variable, which we try to stringify, ultimately causing\n  // Vue to issue another warning which repeats indefinitely.\n  // see: https://github.com/getsentry/sentry-javascript/pull/6010\n  // see: https://github.com/getsentry/sentry-javascript/issues/5916\n  for (let i = 0; i < handlerData.args.length; i++) {\n    if (handlerData.args[i] === 'ref=Ref<') {\n      handlerData.args[i + 1] = 'viewRef';\n      break;\n    }\n  }\n  const breadcrumb = {\n    category: 'console',\n    data: {\n      arguments: handlerData.args,\n      logger: 'console',\n    },\n    level: severityLevelFromString(handlerData.level),\n    message: safeJoin(handlerData.args, ' '),\n  };\n\n  if (handlerData.level === 'assert') {\n    if (handlerData.args[0] === false) {\n      breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n      breadcrumb.data.arguments = handlerData.args.slice(1);\n    } else {\n      // Don't capture a breadcrumb for passed assertions\n      return;\n    }\n  }\n\n  getCurrentHub().addBreadcrumb(breadcrumb, {\n    input: handlerData.args,\n    level: handlerData.level,\n  });\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _xhrBreadcrumb(handlerData) {\n  const { startTimestamp, endTimestamp } = handlerData;\n\n  const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n  // We only capture complete, non-sentry requests\n  if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n    return;\n  }\n\n  const { method, url, status_code, body } = sentryXhrData;\n\n  const data = {\n    method,\n    url,\n    status_code,\n  };\n\n  const hint = {\n    xhr: handlerData.xhr,\n    input: body,\n    startTimestamp,\n    endTimestamp,\n  };\n\n  getCurrentHub().addBreadcrumb(\n    {\n      category: 'xhr',\n      data,\n      type: 'http',\n    },\n    hint,\n  );\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _fetchBreadcrumb(handlerData) {\n  const { startTimestamp, endTimestamp } = handlerData;\n\n  // We only capture complete fetch requests\n  if (!endTimestamp) {\n    return;\n  }\n\n  if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n    // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n    return;\n  }\n\n  if (handlerData.error) {\n    const data = handlerData.fetchData;\n    const hint = {\n      data: handlerData.error,\n      input: handlerData.args,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data,\n        level: 'error',\n        type: 'http',\n      },\n      hint,\n    );\n  } else {\n    const data = {\n      ...handlerData.fetchData,\n      status_code: handlerData.response && handlerData.response.status,\n    };\n    const hint = {\n      input: handlerData.args,\n      response: handlerData.response,\n      startTimestamp,\n      endTimestamp,\n    };\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data,\n        type: 'http',\n      },\n      hint,\n    );\n  }\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _historyBreadcrumb(handlerData) {\n  let from = handlerData.from;\n  let to = handlerData.to;\n  const parsedLoc = parseUrl(WINDOW.location.href);\n  let parsedFrom = parseUrl(from);\n  const parsedTo = parseUrl(to);\n\n  // Initial pushState doesn't provide `from` information\n  if (!parsedFrom.path) {\n    parsedFrom = parsedLoc;\n  }\n\n  // Use only the path component of the URL if the URL matches the current\n  // document (almost all the time when using pushState)\n  if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n    to = parsedTo.relative;\n  }\n  if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n    from = parsedFrom.relative;\n  }\n\n  getCurrentHub().addBreadcrumb({\n    category: 'navigation',\n    data: {\n      from,\n      to,\n    },\n  });\n}\n\nfunction _isEvent(event) {\n  return !!event && !!(event ).target;\n}\n\nexport { BREADCRUMB_INTEGRATION_ID, Breadcrumbs };\n//# sourceMappingURL=breadcrumbs.js.map\n","import { dsnToString, createEnvelope } from '@sentry/utils';\n\n/**\n * Creates an envelope from a user feedback.\n */\nfunction createUserFeedbackEnvelope(\n  feedback,\n  {\n    metadata,\n    tunnel,\n    dsn,\n  }\n\n,\n) {\n  const headers = {\n    event_id: feedback.event_id,\n    sent_at: new Date().toISOString(),\n    ...(metadata &&\n      metadata.sdk && {\n        sdk: {\n          name: metadata.sdk.name,\n          version: metadata.sdk.version,\n        },\n      }),\n    ...(!!tunnel && !!dsn && { dsn: dsnToString(dsn) }),\n  };\n  const item = createUserFeedbackEnvelopeItem(feedback);\n\n  return createEnvelope(headers, [item]);\n}\n\nfunction createUserFeedbackEnvelopeItem(feedback) {\n  const feedbackHeaders = {\n    type: 'user_report',\n  };\n  return [feedbackHeaders, feedback];\n}\n\nexport { createUserFeedbackEnvelope };\n//# sourceMappingURL=userfeedback.js.map\n","import { BaseClient, SDK_VERSION } from '@sentry/core';\nimport { getSDKSource, logger, createClientReportEnvelope, dsnToString } from '@sentry/utils';\nimport { eventFromException, eventFromMessage } from './eventbuilder.js';\nimport { WINDOW } from './helpers.js';\nimport { BREADCRUMB_INTEGRATION_ID } from './integrations/breadcrumbs.js';\nimport { createUserFeedbackEnvelope } from './userfeedback.js';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/types Options for more information.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass BrowserClient extends BaseClient {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n      name: 'sentry.javascript.browser',\n      packages: [\n        {\n          name: `${sdkSource}:@sentry/browser`,\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    super(options);\n\n    if (options.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level = 'info',\n    hint,\n  ) {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint) {\n    // We only want to add the sentry event breadcrumb when the user has the breadcrumb integration installed and\n    // activated its `sentry` option.\n    // We also do not want to use the `Breadcrumbs` class here directly, because we do not want it to be included in\n    // bundles, if it is not used by the SDK.\n    // This all sadly is a bit ugly, but we currently don't have a \"pre-send\" hook on the integrations so we do it this\n    // way for now.\n    const breadcrumbIntegration = this.getIntegrationById(BREADCRUMB_INTEGRATION_ID) ;\n    // We check for definedness of `addSentryBreadcrumb` in case users provided their own integration with id\n    // \"Breadcrumbs\" that does not have this function.\n    if (breadcrumbIntegration && breadcrumbIntegration.addSentryBreadcrumb) {\n      breadcrumbIntegration.addSentryBreadcrumb(event);\n    }\n\n    super.sendEvent(event, hint);\n  }\n\n  /**\n   * Sends user feedback to Sentry.\n   */\n   captureUserFeedback(feedback) {\n    if (!this._isEnabled()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('SDK not enabled, will not capture user feedback.');\n      return;\n    }\n\n    const envelope = createUserFeedbackEnvelope(feedback, {\n      metadata: this.getSdkMetadata(),\n      dsn: this.getDsn(),\n      tunnel: this.getOptions().tunnel,\n    });\n    void this._sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(event, hint, scope) {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n   _flushOutcomes() {\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('No outcomes to send');\n      return;\n    }\n\n    if (!this._dsn) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('Sending outcomes:', outcomes);\n\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n    void this._sendEnvelope(envelope);\n  }\n}\n\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map\n","import { isNativeFetch, logger } from '@sentry/utils';\nimport { WINDOW } from '../helpers.js';\n\nlet cachedFetchImpl = undefined;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nfunction getNativeFetchImplementation() {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  /* eslint-disable @typescript-eslint/unbound-method */\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(WINDOW.fetch)) {\n    return (cachedFetchImpl = WINDOW.fetch.bind(WINDOW));\n  }\n\n  const document = WINDOW.document;\n  let fetchImpl = WINDOW.fetch;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(WINDOW));\n  /* eslint-enable @typescript-eslint/unbound-method */\n}\n\n/** Clears cached fetch impl */\nfunction clearCachedFetchImplementation() {\n  cachedFetchImpl = undefined;\n}\n\nexport { clearCachedFetchImplementation, getNativeFetchImplementation };\n//# sourceMappingURL=utils.js.map\n","import { createTransport } from '@sentry/core';\nimport { rejectedSyncPromise } from '@sentry/utils';\nimport { getNativeFetchImplementation, clearCachedFetchImplementation } from './utils.js';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nfunction makeFetchTransport(\n  options,\n  nativeFetch = getNativeFetchImplementation(),\n) {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request) {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    try {\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedFetchImplementation();\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeFetchTransport };\n//# sourceMappingURL=fetch.js.map\n","import { createTransport } from '@sentry/core';\nimport { SyncPromise } from '@sentry/utils';\n\n/**\n * The DONE ready state for XmlHttpRequest\n *\n * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n * (e.g. during testing, it is `undefined`)\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n */\nconst XHR_READYSTATE_DONE = 4;\n\n/**\n * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.\n */\nfunction makeXHRTransport(options) {\n  function makeRequest(request) {\n    return new SyncPromise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n\n      xhr.onerror = reject;\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status,\n            headers: {\n              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': xhr.getResponseHeader('Retry-After'),\n            },\n          });\n        }\n      };\n\n      xhr.open('POST', options.url);\n\n      for (const header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n\n      xhr.send(request.body);\n    });\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeXHRTransport };\n//# sourceMappingURL=xhr.js.map\n","import { createStackParser } from '@sentry/utils';\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename, func, lineno, colno) {\n  const frame = {\n    filename,\n    function: func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nconst chrome = line => {\n  const parts = chromeRegex.exec(line);\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nconst chromeStackLineParser = [CHROME_PRIORITY, chrome];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko = line => {\n  const parts = geckoREgex.exec(line);\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nconst geckoStackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs = line => {\n  const parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nconst winjsStackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10 = line => {\n  const parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nconst opera10StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11 = line => {\n  const parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nconst opera11StackLineParser = [OPERA11_PRIORITY, opera11];\n\nconst defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nconst defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func, filename) => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n\nexport { chromeStackLineParser, defaultStackLineParsers, defaultStackParser, geckoStackLineParser, opera10StackLineParser, opera11StackLineParser, winjsStackLineParser };\n//# sourceMappingURL=stack-parsers.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addInstrumentationHandler, isString, isPrimitive, isErrorEvent, getLocationHref, logger, addExceptionMechanism } from '@sentry/utils';\nimport { eventFromUnknownInput } from '../eventbuilder.js';\nimport { shouldIgnoreOnError } from '../helpers.js';\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/** Global handlers */\nclass GlobalHandlers  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'GlobalHandlers';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = GlobalHandlers.id;}\n\n  /** JSDoc */\n\n  /**\n   * Stores references functions to installing handlers. Will set to undefined\n   * after they have been run so that they are not used twice.\n   */\n   __init2() {this._installFunc = {\n    onerror: _installGlobalOnErrorHandler,\n    onunhandledrejection: _installGlobalOnUnhandledRejectionHandler,\n  };}\n\n  /** JSDoc */\n   constructor(options) {GlobalHandlers.prototype.__init.call(this);GlobalHandlers.prototype.__init2.call(this);\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    Error.stackTraceLimit = 50;\n    const options = this._options;\n\n    // We can disable guard-for-in as we construct the options object above + do checks against\n    // `this._installFunc` for the property.\n    // eslint-disable-next-line guard-for-in\n    for (const key in options) {\n      const installFunc = this._installFunc[key ];\n      if (installFunc && options[key ]) {\n        globalHandlerLog(key);\n        installFunc();\n        this._installFunc[key ] = undefined;\n      }\n    }\n  }\n} GlobalHandlers.__initStatic();\n\n/** JSDoc */\nfunction _installGlobalOnErrorHandler() {\n  addInstrumentationHandler(\n    'error',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (data) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      const { msg, url, line, column, error } = data;\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return;\n      }\n\n      const event =\n        error === undefined && isString(msg)\n          ? _eventFromIncompleteOnError(msg, url, line, column)\n          : _enhanceEventWithInitialFrame(\n              eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n              url,\n              line,\n              column,\n            );\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onerror');\n    },\n  );\n}\n\n/** JSDoc */\nfunction _installGlobalOnUnhandledRejectionHandler() {\n  addInstrumentationHandler(\n    'unhandledrejection',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (e) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      let error = e;\n\n      // dig the object of the rejection out of known event types\n      try {\n        // PromiseRejectionEvents store the object of the rejection under 'reason'\n        // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n        if ('reason' in e) {\n          error = e.reason;\n        }\n        // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n        // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n        // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n        // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n        // https://github.com/getsentry/sentry-javascript/issues/2380\n        else if ('detail' in e && 'reason' in e.detail) {\n          error = e.detail.reason;\n        }\n      } catch (_oO) {\n        // no-empty\n      }\n\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return true;\n      }\n\n      const event = isPrimitive(error)\n        ? _eventFromRejectionWithPrimitive(error)\n        : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onunhandledrejection');\n      return;\n    },\n  );\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason) {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _eventFromIncompleteOnError(msg, url, line, column) {\n  const ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  const groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event, url, line, column) {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type) {\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction addMechanismAndCapture(hub, error, event, type) {\n  addExceptionMechanism(event, {\n    handled: false,\n    type,\n  });\n  hub.captureEvent(event, {\n    originalException: error,\n  });\n}\n\nfunction getHubAndOptions() {\n  const hub = getCurrentHub();\n  const client = hub.getClient();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return [hub, options.stackParser, options.attachStacktrace];\n}\n\nexport { GlobalHandlers };\n//# sourceMappingURL=globalhandlers.js.map\n","import { fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\nimport { WINDOW, wrap } from '../helpers.js';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nclass TryCatch  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'TryCatch';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = TryCatch.id;}\n\n  /** JSDoc */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {TryCatch.prototype.__init.call(this);\n    this._options = {\n      XMLHttpRequest: true,\n      eventTarget: true,\n      requestAnimationFrame: true,\n      setInterval: true,\n      setTimeout: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n   setupOnce() {\n    if (this._options.setTimeout) {\n      fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n    }\n\n    if (this._options.setInterval) {\n      fill(WINDOW, 'setInterval', _wrapTimeFunction);\n    }\n\n    if (this._options.requestAnimationFrame) {\n      fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n    }\n\n    if (this._options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n      fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n    }\n\n    const eventTargetOption = this._options.eventTarget;\n    if (eventTargetOption) {\n      const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n      eventTarget.forEach(_wrapEventTarget);\n    }\n  }\n} TryCatch.__initStatic();\n\n/** JSDoc */\nfunction _wrapTimeFunction(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( ...args) {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: true,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( callback) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: true,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\n/** JSDoc */\nfunction _wrapXHR(originalSend) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( ...args) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        fill(xhr, prop, function (original) {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\n/** JSDoc */\nfunction _wrapEventTarget(target) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const globalObject = WINDOW ;\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = globalObject[target] && globalObject[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original)\n\n {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      eventName,\n      fn,\n      options,\n    ) {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        wrap(fn , {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: true,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        eventName,\n        fn,\n        options,\n      ) {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = fn ;\n        try {\n          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n\nexport { TryCatch };\n//# sourceMappingURL=trycatch.js.map\n","import { applyAggregateErrorsToEvent } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder.js';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nclass LinkedErrors  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'LinkedErrors';}\n\n  /**\n   * @inheritDoc\n   */\n    __init() {this.name = LinkedErrors.id;}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {LinkedErrors.prototype.__init.call(this);\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    addGlobalEventProcessor((event, hint) => {\n      const hub = getCurrentHub();\n      const client = hub.getClient();\n      const self = hub.getIntegration(LinkedErrors);\n\n      if (!client || !self) {\n        return event;\n      }\n\n      const options = client.getOptions();\n      applyAggregateErrorsToEvent(\n        exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        self._key,\n        self._limit,\n        event,\n        hint,\n      );\n\n      return event;\n    });\n  }\n} LinkedErrors.__initStatic();\n\nexport { LinkedErrors };\n//# sourceMappingURL=linkederrors.js.map\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { WINDOW } from '../helpers.js';\n\n/** HttpContext integration collects information about HTTP request headers */\nclass HttpContext  {constructor() { HttpContext.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'HttpContext';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = HttpContext.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    addGlobalEventProcessor((event) => {\n      if (getCurrentHub().getIntegration(HttpContext)) {\n        // if none of the information we want exists, don't bother\n        if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n          return event;\n        }\n\n        // grab as much info as exists and add it to the event\n        const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n        const { referrer } = WINDOW.document || {};\n        const { userAgent } = WINDOW.navigator || {};\n\n        const headers = {\n          ...(event.request && event.request.headers),\n          ...(referrer && { Referer: referrer }),\n          ...(userAgent && { 'User-Agent': userAgent }),\n        };\n        const request = { ...event.request, ...(url && { url }), headers };\n\n        return { ...event, request };\n      }\n      return event;\n    });\n  }\n} HttpContext.__initStatic();\n\nexport { HttpContext };\n//# sourceMappingURL=httpcontext.js.map\n","import { logger } from '@sentry/utils';\n\n/** Deduplication filter */\nclass Dedupe  {constructor() { Dedupe.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Dedupe';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Dedupe.id;}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    const eventProcessor = currentEvent => {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      const self = getCurrentHub().getIntegration(Dedupe);\n      if (self) {\n        // Juuust in case something goes wrong\n        try {\n          if (_shouldDropEvent(currentEvent, self._previousEvent)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n            return null;\n          }\n        } catch (_oO) {\n          return (self._previousEvent = currentEvent);\n        }\n\n        return (self._previousEvent = currentEvent);\n      }\n      return currentEvent;\n    };\n\n    eventProcessor.id = this.name;\n    addGlobalEventProcessor(eventProcessor);\n  }\n} Dedupe.__initStatic();\n\n/** JSDoc */\nfunction _shouldDropEvent(currentEvent, previousEvent) {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\n/** JSDoc */\nfunction _isSameMessageEvent(currentEvent, previousEvent) {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameExceptionEvent(currentEvent, previousEvent) {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameStacktrace(currentEvent, previousEvent) {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames ;\n  previousFrames = previousFrames ;\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameFingerprint(currentEvent, previousEvent) {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint ;\n  previousFingerprint = previousFingerprint ;\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\n/** JSDoc */\nfunction _getExceptionFromEvent(event) {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\n/** JSDoc */\nfunction _getFramesFromEvent(event) {\n  const exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-ignore Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\nexport { Dedupe };\n//# sourceMappingURL=dedupe.js.map\n","import { Integrations, getIntegrationsToSetup, initAndBind, getReportDialogEndpoint, getCurrentHub } from '@sentry/core';\nimport { stackParserFromStackParserOptions, supportsFetch, logger, resolvedSyncPromise, addInstrumentationHandler } from '@sentry/utils';\nimport { BrowserClient } from './client.js';\nimport { WINDOW, wrap as wrap$1 } from './helpers.js';\nimport { GlobalHandlers } from './integrations/globalhandlers.js';\nimport { TryCatch } from './integrations/trycatch.js';\nimport { Breadcrumbs } from './integrations/breadcrumbs.js';\nimport { LinkedErrors } from './integrations/linkederrors.js';\nimport { HttpContext } from './integrations/httpcontext.js';\nimport { Dedupe } from './integrations/dedupe.js';\nimport { defaultStackParser } from './stack-parsers.js';\nimport { makeFetchTransport } from './transports/fetch.js';\nimport { makeXHRTransport } from './transports/xhr.js';\n\nconst defaultIntegrations = [\n  new Integrations.InboundFilters(),\n  new Integrations.FunctionToString(),\n  new TryCatch(),\n  new Breadcrumbs(),\n  new GlobalHandlers(),\n  new LinkedErrors(),\n  new Dedupe(),\n  new HttpContext(),\n];\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nfunction init(options = {}) {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n  if (options.release === undefined) {\n    // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n    if (typeof __SENTRY_RELEASE__ === 'string') {\n      options.release = __SENTRY_RELEASE__;\n    }\n\n    // This supports the variable that sentry-webpack-plugin injects\n    if (WINDOW.SENTRY_RELEASE && WINDOW.SENTRY_RELEASE.id) {\n      options.release = WINDOW.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  const clientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nfunction showReportDialog(options = {}, hub = getCurrentHub()) {\n  // doesn't work without a document (React Native)\n  if (!WINDOW.document) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  const { client, scope } = hub.getStackTop();\n  const dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    options.eventId = hub.lastEventId();\n  }\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.crossOrigin = 'anonymous';\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const injectionPoint = WINDOW.document.head || WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nfunction lastEventId() {\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction forceLoad() {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction onLoad(callback) {\n  callback();\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nfunction flush(timeout) {\n  const client = getCurrentHub().getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot flush events. No client defined.');\n  return resolvedSyncPromise(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nfunction close(timeout) {\n  const client = getCurrentHub().getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return resolvedSyncPromise(false);\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrap(fn) {\n  return wrap$1(fn)();\n}\n\nfunction startSessionOnHub(hub) {\n  hub.startSession({ ignoreDuration: true });\n  hub.captureSession();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking() {\n  if (typeof WINDOW.document === 'undefined') {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  const hub = getCurrentHub();\n\n  // The only way for this to be false is for there to be a version mismatch between @sentry/browser (>= 6.0.0) and\n  // @sentry/hub (< 5.27.0). In the simple case, there won't ever be such a mismatch, because the two packages are\n  // pinned at the same version in package.json, but there are edge cases where it's possible. See\n  // https://github.com/getsentry/sentry-javascript/issues/3207 and\n  // https://github.com/getsentry/sentry-javascript/issues/3234 and\n  // https://github.com/getsentry/sentry-javascript/issues/3278.\n  if (!hub.captureSession) {\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSessionOnHub(hub);\n\n  // We want to create a session for every navigation as well\n  addInstrumentationHandler('history', ({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (!(from === undefined || from === to)) {\n      startSessionOnHub(getCurrentHub());\n    }\n  });\n}\n\n/**\n * Captures user feedback and sends it to Sentry.\n */\nfunction captureUserFeedback(feedback) {\n  const client = getCurrentHub().getClient();\n  if (client) {\n    client.captureUserFeedback(feedback);\n  }\n}\n\nexport { captureUserFeedback, close, defaultIntegrations, flush, forceLoad, init, lastEventId, onLoad, showReportDialog, wrap };\n//# sourceMappingURL=sdk.js.map\n","import { getCurrentHub, addGlobalEventProcessor, prepareEvent, setContext, captureException } from '@sentry/core';\nimport { GLOBAL_OBJ, normalize, fill, htmlTreeAsString, logger, uuid4, SENTRY_XHR_DATA_KEY, dropUndefinedKeys, stringMatchesSomePattern, addInstrumentationHandler, browserPerformanceTimeOrigin, createEnvelope, createEventEnvelopeHeaders, getSdkMetadataForEnvelopeHeader, isNodeEnv } from '@sentry/utils';\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and replay packages should `@sentry/browser` import\n// from `@sentry/replay` in the future\nconst WINDOW = GLOBAL_OBJ ;\n\nconst REPLAY_SESSION_KEY = 'sentryReplaySession';\nconst REPLAY_EVENT_NAME = 'replay_event';\nconst UNABLE_TO_SEND_REPLAY = 'Unable to send Replay';\n\n// The idle limit for a session after which recording is paused.\nconst SESSION_IDLE_PAUSE_DURATION = 300000; // 5 minutes in ms\n\n// The idle limit for a session after which the session expires.\nconst SESSION_IDLE_EXPIRE_DURATION = 900000; // 15 minutes in ms\n\n// The maximum length of a session\nconst MAX_SESSION_LIFE = 3600000; // 60 minutes in ms\n\n/** Default flush delays */\nconst DEFAULT_FLUSH_MIN_DELAY = 5000;\n// XXX: Temp fix for our debounce logic where `maxWait` would never occur if it\n// was the same as `wait`\nconst DEFAULT_FLUSH_MAX_DELAY = 5500;\n\n/* How long to wait for error checkouts */\nconst BUFFER_CHECKOUT_TIME = 60000;\n\nconst RETRY_BASE_INTERVAL = 5000;\nconst RETRY_MAX_COUNT = 3;\n\n/* The max (uncompressed) size in bytes of a network body. Any body larger than this will be truncated. */\nconst NETWORK_BODY_MAX_SIZE = 150000;\n\n/* The max size of a single console arg that is captured. Any arg larger than this will be truncated. */\nconst CONSOLE_ARG_MAX_SIZE = 5000;\n\n/* Min. time to wait before we consider something a slow click. */\nconst SLOW_CLICK_THRESHOLD = 3000;\n/* For scroll actions after a click, we only look for a very short time period to detect programmatic scrolling. */\nconst SLOW_CLICK_SCROLL_TIMEOUT = 300;\n\n/** When encountering a total segment size exceeding this size, stop the replay (as we cannot properly ingest it). */\nconst REPLAY_MAX_EVENT_BUFFER_SIZE = 20000000; // ~20MB\n\n/** Replays must be min. 5s long before we send them. */\nconst MIN_REPLAY_DURATION = 4999;\n/* The max. allowed value that the minReplayDuration can be set to. */\nconst MIN_REPLAY_DURATION_LIMIT = 15000;\n\nvar NodeType$1;\n(function (NodeType) {\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\n})(NodeType$1 || (NodeType$1 = {}));\n\nfunction isElement(n) {\n    return n.nodeType === n.ELEMENT_NODE;\n}\nfunction isShadowRoot(n) {\n    const host = n === null || n === void 0 ? void 0 : n.host;\n    return Boolean(host && host.shadowRoot && host.shadowRoot === n);\n}\nfunction isInputTypeMasked({ maskInputOptions, tagName, type, }) {\n    if (tagName.toLowerCase() === 'option') {\n        tagName = 'select';\n    }\n    const actualType = typeof type === 'string' ? type.toLowerCase() : undefined;\n    return (maskInputOptions[tagName.toLowerCase()] ||\n        (actualType && maskInputOptions[actualType]) ||\n        actualType === 'password' ||\n        (tagName === 'input' && !type && maskInputOptions['text']));\n}\nfunction hasInputMaskOptions({ tagName, type, maskInputOptions, maskInputSelector, }) {\n    return (maskInputSelector || isInputTypeMasked({ maskInputOptions, tagName, type }));\n}\nfunction maskInputValue({ input, maskInputSelector, unmaskInputSelector, maskInputOptions, tagName, type, value, maskInputFn, }) {\n    let text = value || '';\n    if (unmaskInputSelector && input.matches(unmaskInputSelector)) {\n        return text;\n    }\n    if (input.hasAttribute('data-rr-is-password')) {\n        type = 'password';\n    }\n    if (isInputTypeMasked({ maskInputOptions, tagName, type }) ||\n        (maskInputSelector && input.matches(maskInputSelector))) {\n        if (maskInputFn) {\n            text = maskInputFn(text);\n        }\n        else {\n            text = '*'.repeat(text.length);\n        }\n    }\n    return text;\n}\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\nfunction is2DCanvasBlank(canvas) {\n    const ctx = canvas.getContext('2d');\n    if (!ctx)\n        return true;\n    const chunkSize = 50;\n    for (let x = 0; x < canvas.width; x += chunkSize) {\n        for (let y = 0; y < canvas.height; y += chunkSize) {\n            const getImageData = ctx.getImageData;\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\n                : getImageData;\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\n            if (pixelBuffer.some((pixel) => pixel !== 0))\n                return false;\n        }\n    }\n    return true;\n}\nfunction getInputType(element) {\n    const type = element.type;\n    return element.hasAttribute('data-rr-is-password')\n        ? 'password'\n        : type\n            ? type.toLowerCase()\n            : null;\n}\nfunction getInputValue(el, tagName, type) {\n    typeof type === 'string' ? type.toLowerCase() : '';\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\n        return el.getAttribute('value') || '';\n    }\n    return el.value;\n}\n\nlet _id = 1;\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\nconst IGNORED_NODE = -2;\nfunction defaultMaskFn(str) {\n    return str ? str.replace(/[\\S]/g, '*') : '';\n}\nfunction genId() {\n    return _id++;\n}\nfunction getValidTagName(element) {\n    if (element instanceof HTMLFormElement) {\n        return 'form';\n    }\n    const processedTagName = element.tagName.toLowerCase().trim();\n    if (tagNameRegex.test(processedTagName)) {\n        return 'div';\n    }\n    return processedTagName;\n}\nfunction getCssRulesString(s) {\n    try {\n        const rules = s.rules || s.cssRules;\n        return rules ? Array.from(rules).map(getCssRuleString).join('') : null;\n    }\n    catch (error) {\n        return null;\n    }\n}\nfunction getCssRuleString(rule) {\n    let cssStringified = rule.cssText;\n    if (isCSSImportRule(rule)) {\n        try {\n            cssStringified = getCssRulesString(rule.styleSheet) || cssStringified;\n        }\n        catch (_a) {\n        }\n    }\n    return validateStringifiedCssRule(cssStringified);\n}\nfunction validateStringifiedCssRule(cssStringified) {\n    if (cssStringified.indexOf(':') > -1) {\n        const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\n        return cssStringified.replace(regex, '$1\\\\$2');\n    }\n    return cssStringified;\n}\nfunction isCSSImportRule(rule) {\n    return 'styleSheet' in rule;\n}\nfunction stringifyStyleSheet(sheet) {\n    return sheet.cssRules\n        ? Array.from(sheet.cssRules)\n            .map((rule) => rule.cssText ? validateStringifiedCssRule(rule.cssText) : '')\n            .join('')\n        : '';\n}\nfunction extractOrigin(url) {\n    let origin = '';\n    if (url.indexOf('//') > -1) {\n        origin = url.split('/').slice(0, 3).join('/');\n    }\n    else {\n        origin = url.split('/')[0];\n    }\n    origin = origin.split('?')[0];\n    return origin;\n}\nlet canvasService;\nlet canvasCtx;\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\nconst RELATIVE_PATH = /^(?!www\\.|(?:http|ftp)s?:\\/\\/|[A-Za-z]:\\\\|\\/\\/|#).*/;\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\nfunction absoluteToStylesheet(cssText, href) {\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\n        const filePath = path1 || path2 || path3;\n        const maybeQuote = quote1 || quote2 || '';\n        if (!filePath) {\n            return origin;\n        }\n        if (!RELATIVE_PATH.test(filePath)) {\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\n        }\n        if (DATA_URI.test(filePath)) {\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\n        }\n        if (filePath[0] === '/') {\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\n        }\n        const stack = href.split('/');\n        const parts = filePath.split('/');\n        stack.pop();\n        for (const part of parts) {\n            if (part === '.') {\n                continue;\n            }\n            else if (part === '..') {\n                stack.pop();\n            }\n            else {\n                stack.push(part);\n            }\n        }\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\n    });\n}\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\n    if (attributeValue.trim() === '') {\n        return attributeValue;\n    }\n    let pos = 0;\n    function collectCharacters(regEx) {\n        let chars;\n        let match = regEx.exec(attributeValue.substring(pos));\n        if (match) {\n            chars = match[0];\n            pos += chars.length;\n            return chars;\n        }\n        return '';\n    }\n    let output = [];\n    while (true) {\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\n        if (pos >= attributeValue.length) {\n            break;\n        }\n        let url = collectCharacters(SRCSET_NOT_SPACES);\n        if (url.slice(-1) === ',') {\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\n            output.push(url);\n        }\n        else {\n            let descriptorsStr = '';\n            url = absoluteToDoc(doc, url);\n            let inParens = false;\n            while (true) {\n                let c = attributeValue.charAt(pos);\n                if (c === '') {\n                    output.push((url + descriptorsStr).trim());\n                    break;\n                }\n                else if (!inParens) {\n                    if (c === ',') {\n                        pos += 1;\n                        output.push((url + descriptorsStr).trim());\n                        break;\n                    }\n                    else if (c === '(') {\n                        inParens = true;\n                    }\n                }\n                else {\n                    if (c === ')') {\n                        inParens = false;\n                    }\n                }\n                descriptorsStr += c;\n                pos += 1;\n            }\n        }\n    }\n    return output.join(', ');\n}\nfunction absoluteToDoc(doc, attributeValue) {\n    if (!attributeValue || attributeValue.trim() === '') {\n        return attributeValue;\n    }\n    const a = doc.createElement('a');\n    a.href = attributeValue;\n    return a.href;\n}\nfunction isSVGElement(el) {\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\n}\nfunction getHref() {\n    const a = document.createElement('a');\n    a.href = '';\n    return a.href;\n}\nfunction transformAttribute(doc, element, _tagName, _name, value, maskAllText, unmaskTextSelector, maskTextFn) {\n    if (!value) {\n        return value;\n    }\n    const name = _name.toLowerCase();\n    const tagName = _tagName.toLowerCase();\n    if (name === 'src' || name === 'href') {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'xlink:href' && value[0] !== '#') {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'background' &&\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'srcset') {\n        return getAbsoluteSrcsetString(doc, value);\n    }\n    else if (name === 'style') {\n        return absoluteToStylesheet(value, getHref());\n    }\n    else if (tagName === 'object' && name === 'data') {\n        return absoluteToDoc(doc, value);\n    }\n    else if (maskAllText &&\n        _shouldMaskAttribute(element, name, tagName, unmaskTextSelector)) {\n        return maskTextFn ? maskTextFn(value) : defaultMaskFn(value);\n    }\n    return value;\n}\nfunction _shouldMaskAttribute(element, attribute, tagName, unmaskTextSelector) {\n    if (unmaskTextSelector && element.matches(unmaskTextSelector)) {\n        return false;\n    }\n    return (['placeholder', 'title', 'aria-label'].indexOf(attribute) > -1 ||\n        (tagName === 'input' &&\n            attribute === 'value' &&\n            element.hasAttribute('type') &&\n            ['submit', 'button'].indexOf(element.getAttribute('type').toLowerCase()) > -1));\n}\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\n    if (unblockSelector && element.matches(unblockSelector)) {\n        return false;\n    }\n    if (typeof blockClass === 'string') {\n        if (element.classList.contains(blockClass)) {\n            return true;\n        }\n    }\n    else {\n        for (let eIndex = 0; eIndex < element.classList.length; eIndex++) {\n            const className = element.classList[eIndex];\n            if (blockClass.test(className)) {\n                return true;\n            }\n        }\n    }\n    if (blockSelector) {\n        return element.matches(blockSelector);\n    }\n    return false;\n}\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextSelector, maskAllText) {\n    if (!node) {\n        return false;\n    }\n    if (node.nodeType !== node.ELEMENT_NODE) {\n        return needMaskingText(node.parentNode, maskTextClass, maskTextSelector, unmaskTextSelector, maskAllText);\n    }\n    if (unmaskTextSelector) {\n        if (node.matches(unmaskTextSelector) ||\n            node.closest(unmaskTextSelector)) {\n            return false;\n        }\n    }\n    if (maskAllText) {\n        return true;\n    }\n    if (typeof maskTextClass === 'string') {\n        if (node.classList.contains(maskTextClass)) {\n            return true;\n        }\n    }\n    else {\n        for (let eIndex = 0; eIndex < node.classList.length; eIndex++) {\n            const className = node.classList[eIndex];\n            if (maskTextClass.test(className)) {\n                return true;\n            }\n        }\n    }\n    if (maskTextSelector) {\n        if (node.matches(maskTextSelector)) {\n            return true;\n        }\n    }\n    return needMaskingText(node.parentNode, maskTextClass, maskTextSelector, unmaskTextSelector, maskAllText);\n}\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\n    const win = iframeEl.contentWindow;\n    if (!win) {\n        return;\n    }\n    let fired = false;\n    let readyState;\n    try {\n        readyState = win.document.readyState;\n    }\n    catch (error) {\n        return;\n    }\n    if (readyState !== 'complete') {\n        const timer = setTimeout(() => {\n            if (!fired) {\n                listener();\n                fired = true;\n            }\n        }, iframeLoadTimeout);\n        iframeEl.addEventListener('load', () => {\n            clearTimeout(timer);\n            fired = true;\n            listener();\n        });\n        return;\n    }\n    const blankUrl = 'about:blank';\n    if (win.location.href !== blankUrl ||\n        iframeEl.src === blankUrl ||\n        iframeEl.src === '') {\n        setTimeout(listener, 0);\n        return;\n    }\n    iframeEl.addEventListener('load', listener);\n}\nfunction serializeNode(n, options) {\n    var _a;\n    const { doc, blockClass, blockSelector, unblockSelector, maskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputSelector, unmaskInputSelector, maskAllText, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, } = options;\n    let rootId;\n    if (doc.__sn) {\n        const docId = doc.__sn.id;\n        rootId = docId === 1 ? undefined : docId;\n    }\n    switch (n.nodeType) {\n        case n.DOCUMENT_NODE:\n            if (n.compatMode !== 'CSS1Compat') {\n                return {\n                    type: NodeType$1.Document,\n                    childNodes: [],\n                    compatMode: n.compatMode,\n                    rootId,\n                };\n            }\n            else {\n                return {\n                    type: NodeType$1.Document,\n                    childNodes: [],\n                    rootId,\n                };\n            }\n        case n.DOCUMENT_TYPE_NODE:\n            return {\n                type: NodeType$1.DocumentType,\n                name: n.name,\n                publicId: n.publicId,\n                systemId: n.systemId,\n                rootId,\n            };\n        case n.ELEMENT_NODE:\n            const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\n            const tagName = getValidTagName(n);\n            let attributes = {};\n            for (const { name, value } of Array.from(n.attributes)) {\n                if (!skipAttribute(tagName, name)) {\n                    attributes[name] = transformAttribute(doc, n, tagName, name, value, maskAllText, unmaskTextSelector, maskTextFn);\n                }\n            }\n            if (tagName === 'link' && inlineStylesheet) {\n                const stylesheet = Array.from(doc.styleSheets).find((s) => {\n                    return s.href === n.href;\n                });\n                let cssText = null;\n                if (stylesheet) {\n                    cssText = getCssRulesString(stylesheet);\n                }\n                if (cssText) {\n                    delete attributes.rel;\n                    delete attributes.href;\n                    attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\n                }\n            }\n            if (tagName === 'style' &&\n                n.sheet &&\n                !(n.innerText ||\n                    n.textContent ||\n                    '').trim().length) {\n                const cssText = getCssRulesString(n.sheet);\n                if (cssText) {\n                    attributes._cssText = absoluteToStylesheet(cssText, getHref());\n                }\n            }\n            if (tagName === 'input' ||\n                tagName === 'textarea' ||\n                tagName === 'select' ||\n                tagName === 'option') {\n                const el = n;\n                const type = getInputType(el);\n                const value = getInputValue(el, tagName.toUpperCase(), type);\n                const checked = n.checked;\n                if (type !== 'submit' &&\n                    type !== 'button' &&\n                    value) {\n                    attributes.value = maskInputValue({\n                        input: el,\n                        type,\n                        tagName,\n                        value,\n                        maskInputSelector,\n                        unmaskInputSelector,\n                        maskInputOptions,\n                        maskInputFn,\n                    });\n                }\n                if (checked) {\n                    attributes.checked = checked;\n                }\n            }\n            if (tagName === 'option') {\n                if (n.selected && !maskInputOptions['select']) {\n                    attributes.selected = true;\n                }\n                else {\n                    delete attributes.selected;\n                }\n            }\n            if (tagName === 'canvas' && recordCanvas) {\n                if (n.__context === '2d') {\n                    if (!is2DCanvasBlank(n)) {\n                        attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n                    }\n                }\n                else if (!('__context' in n)) {\n                    const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n                    const blankCanvas = document.createElement('canvas');\n                    blankCanvas.width = n.width;\n                    blankCanvas.height = n.height;\n                    const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n                    if (canvasDataURL !== blankCanvasDataURL) {\n                        attributes.rr_dataURL = canvasDataURL;\n                    }\n                }\n            }\n            if (tagName === 'img' && inlineImages) {\n                if (!canvasService) {\n                    canvasService = doc.createElement('canvas');\n                    canvasCtx = canvasService.getContext('2d');\n                }\n                const image = n;\n                const oldValue = image.crossOrigin;\n                image.crossOrigin = 'anonymous';\n                const recordInlineImage = () => {\n                    try {\n                        canvasService.width = image.naturalWidth;\n                        canvasService.height = image.naturalHeight;\n                        canvasCtx.drawImage(image, 0, 0);\n                        attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n                    }\n                    catch (err) {\n                        console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\n                    }\n                    oldValue\n                        ? (attributes.crossOrigin = oldValue)\n                        : delete attributes.crossOrigin;\n                };\n                if (image.complete && image.naturalWidth !== 0)\n                    recordInlineImage();\n                else\n                    image.onload = recordInlineImage;\n            }\n            if (tagName === 'audio' || tagName === 'video') {\n                attributes.rr_mediaState = n.paused\n                    ? 'paused'\n                    : 'played';\n                attributes.rr_mediaCurrentTime = n.currentTime;\n            }\n            if (n.scrollLeft) {\n                attributes.rr_scrollLeft = n.scrollLeft;\n            }\n            if (n.scrollTop) {\n                attributes.rr_scrollTop = n.scrollTop;\n            }\n            if (needBlock) {\n                const { width, height } = n.getBoundingClientRect();\n                attributes = {\n                    class: attributes.class,\n                    rr_width: `${width}px`,\n                    rr_height: `${height}px`,\n                };\n            }\n            if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\n                if (!n.contentDocument) {\n                    attributes.rr_src = attributes.src;\n                }\n                delete attributes.src;\n            }\n            return {\n                type: NodeType$1.Element,\n                tagName,\n                attributes,\n                childNodes: [],\n                isSVG: isSVGElement(n) || undefined,\n                needBlock,\n                rootId,\n            };\n        case n.TEXT_NODE:\n            const parentTagName = n.parentNode && n.parentNode.tagName;\n            let textContent = n.textContent;\n            const isStyle = parentTagName === 'STYLE' ? true : undefined;\n            const isScript = parentTagName === 'SCRIPT' ? true : undefined;\n            if (isStyle && textContent) {\n                try {\n                    if (n.nextSibling || n.previousSibling) {\n                    }\n                    else if ((_a = n.parentNode.sheet) === null || _a === void 0 ? void 0 : _a.cssRules) {\n                        textContent = stringifyStyleSheet(n.parentNode.sheet);\n                    }\n                }\n                catch (err) {\n                    console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\n                }\n                textContent = absoluteToStylesheet(textContent, getHref());\n            }\n            if (isScript) {\n                textContent = 'SCRIPT_PLACEHOLDER';\n            }\n            if (parentTagName === 'TEXTAREA' && textContent) {\n                textContent = '';\n            }\n            else if (parentTagName === 'OPTION' && textContent) {\n                const option = n.parentNode;\n                textContent = maskInputValue({\n                    input: option,\n                    type: null,\n                    tagName: parentTagName,\n                    value: textContent,\n                    maskInputSelector,\n                    unmaskInputSelector,\n                    maskInputOptions,\n                    maskInputFn,\n                });\n            }\n            else if (!isStyle &&\n                !isScript &&\n                needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextSelector, maskAllText) &&\n                textContent) {\n                textContent = maskTextFn\n                    ? maskTextFn(textContent)\n                    : defaultMaskFn(textContent);\n            }\n            return {\n                type: NodeType$1.Text,\n                textContent: textContent || '',\n                isStyle,\n                rootId,\n            };\n        case n.CDATA_SECTION_NODE:\n            return {\n                type: NodeType$1.CDATA,\n                textContent: '',\n                rootId,\n            };\n        case n.COMMENT_NODE:\n            return {\n                type: NodeType$1.Comment,\n                textContent: n.textContent || '',\n                rootId,\n            };\n        default:\n            return false;\n    }\n}\nfunction lowerIfExists(maybeAttr) {\n    if (maybeAttr === undefined || maybeAttr === null) {\n        return '';\n    }\n    else {\n        return maybeAttr.toLowerCase();\n    }\n}\nfunction slimDOMExcluded(sn, slimDOMOptions) {\n    if (slimDOMOptions.comment && sn.type === NodeType$1.Comment) {\n        return true;\n    }\n    else if (sn.type === NodeType$1.Element) {\n        if (slimDOMOptions.script &&\n            (sn.tagName === 'script' ||\n                (sn.tagName === 'link' &&\n                    (sn.attributes.rel === 'preload' ||\n                        sn.attributes.rel === 'modulepreload') &&\n                    sn.attributes.as === 'script') ||\n                (sn.tagName === 'link' &&\n                    sn.attributes.rel === 'prefetch' &&\n                    typeof sn.attributes.href === 'string' &&\n                    sn.attributes.href.endsWith('.js')))) {\n            return true;\n        }\n        else if (slimDOMOptions.headFavicon &&\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\n                (sn.tagName === 'meta' &&\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\n            return true;\n        }\n        else if (sn.tagName === 'meta') {\n            if (slimDOMOptions.headMetaDescKeywords &&\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaSocial &&\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaRobots &&\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaHttpEquiv &&\n                sn.attributes['http-equiv'] !== undefined) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaAuthorship &&\n                (lowerIfExists(sn.attributes.name) === 'author' ||\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaVerification &&\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction serializeNodeWithId(n, options) {\n    const { doc, map, blockClass, blockSelector, unblockSelector, maskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputSelector, unmaskInputSelector, maskAllText, maskInputOptions = {}, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, keepIframeSrcFn = () => false, } = options;\n    let { preserveWhiteSpace = true } = options;\n    const _serializedNode = serializeNode(n, {\n        doc,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        maskTextClass,\n        maskTextSelector,\n        unmaskTextSelector,\n        inlineStylesheet,\n        maskInputSelector,\n        unmaskInputSelector,\n        maskAllText,\n        maskInputOptions,\n        maskTextFn,\n        maskInputFn,\n        dataURLOptions,\n        inlineImages,\n        recordCanvas,\n        keepIframeSrcFn,\n    });\n    if (!_serializedNode) {\n        console.warn(n, 'not serialized');\n        return null;\n    }\n    let id;\n    if ('__sn' in n) {\n        id = n.__sn.id;\n    }\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\n        (!preserveWhiteSpace &&\n            _serializedNode.type === NodeType$1.Text &&\n            !_serializedNode.isStyle &&\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\n        id = IGNORED_NODE;\n    }\n    else {\n        id = genId();\n    }\n    const serializedNode = Object.assign(_serializedNode, { id });\n    n.__sn = serializedNode;\n    if (id === IGNORED_NODE) {\n        return null;\n    }\n    map[id] = n;\n    if (onSerialize) {\n        onSerialize(n);\n    }\n    let recordChild = !skipChild;\n    if (serializedNode.type === NodeType$1.Element) {\n        recordChild = recordChild && !serializedNode.needBlock;\n        delete serializedNode.needBlock;\n        if (n.shadowRoot)\n            serializedNode.isShadowHost = true;\n    }\n    if ((serializedNode.type === NodeType$1.Document ||\n        serializedNode.type === NodeType$1.Element) &&\n        recordChild) {\n        if (slimDOMOptions.headWhitespace &&\n            _serializedNode.type === NodeType$1.Element &&\n            _serializedNode.tagName === 'head') {\n            preserveWhiteSpace = false;\n        }\n        const bypassOptions = {\n            doc,\n            map,\n            blockClass,\n            blockSelector,\n            unblockSelector,\n            maskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            skipChild,\n            inlineStylesheet,\n            maskInputSelector,\n            unmaskInputSelector,\n            maskAllText,\n            maskInputOptions,\n            maskTextFn,\n            maskInputFn,\n            slimDOMOptions,\n            dataURLOptions,\n            inlineImages,\n            recordCanvas,\n            preserveWhiteSpace,\n            onSerialize,\n            onIframeLoad,\n            iframeLoadTimeout,\n            keepIframeSrcFn,\n        };\n        for (const childN of Array.from(n.childNodes)) {\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n            if (serializedChildNode) {\n                serializedNode.childNodes.push(serializedChildNode);\n            }\n        }\n        if (isElement(n) && n.shadowRoot) {\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n                if (serializedChildNode) {\n                    serializedChildNode.isShadow = true;\n                    serializedNode.childNodes.push(serializedChildNode);\n                }\n            }\n        }\n    }\n    if (n.parentNode && isShadowRoot(n.parentNode)) {\n        serializedNode.isShadow = true;\n    }\n    if (serializedNode.type === NodeType$1.Element &&\n        serializedNode.tagName === 'iframe') {\n        onceIframeLoaded(n, () => {\n            const iframeDoc = n.contentDocument;\n            if (iframeDoc && onIframeLoad) {\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\n                    doc: iframeDoc,\n                    map,\n                    blockClass,\n                    blockSelector,\n                    unblockSelector,\n                    maskTextClass,\n                    maskTextSelector,\n                    unmaskTextSelector,\n                    skipChild: false,\n                    inlineStylesheet,\n                    maskInputSelector,\n                    unmaskInputSelector,\n                    maskAllText,\n                    maskInputOptions,\n                    maskTextFn,\n                    maskInputFn,\n                    slimDOMOptions,\n                    dataURLOptions,\n                    inlineImages,\n                    recordCanvas,\n                    preserveWhiteSpace,\n                    onSerialize,\n                    onIframeLoad,\n                    iframeLoadTimeout,\n                    keepIframeSrcFn,\n                });\n                if (serializedIframeNode) {\n                    onIframeLoad(n, serializedIframeNode);\n                }\n            }\n        }, iframeLoadTimeout);\n    }\n    return serializedNode;\n}\nfunction snapshot(n, options) {\n    const { blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskTextClass = 'rr-mask', maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskInputSelector = null, unmaskInputSelector = null, maskAllText = false, maskAllInputs = false, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\n    const idNodeMap = {};\n    const maskInputOptions = maskAllInputs === true\n        ? {\n            color: true,\n            date: true,\n            'datetime-local': true,\n            email: true,\n            month: true,\n            number: true,\n            range: true,\n            search: true,\n            tel: true,\n            text: true,\n            time: true,\n            url: true,\n            week: true,\n            textarea: true,\n            select: true,\n        }\n        : maskAllInputs === false\n            ? {}\n            : maskAllInputs;\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\n        ?\n            {\n                script: true,\n                comment: true,\n                headFavicon: true,\n                headWhitespace: true,\n                headMetaDescKeywords: slimDOM === 'all',\n                headMetaSocial: true,\n                headMetaRobots: true,\n                headMetaHttpEquiv: true,\n                headMetaAuthorship: true,\n                headMetaVerification: true,\n            }\n        : slimDOM === false\n            ? {}\n            : slimDOM;\n    return [\n        serializeNodeWithId(n, {\n            doc: n,\n            map: idNodeMap,\n            blockClass,\n            blockSelector,\n            unblockSelector,\n            maskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            skipChild: false,\n            inlineStylesheet,\n            maskInputSelector,\n            unmaskInputSelector,\n            maskAllText,\n            maskInputOptions,\n            maskTextFn,\n            maskInputFn,\n            slimDOMOptions,\n            dataURLOptions,\n            inlineImages,\n            recordCanvas,\n            preserveWhiteSpace,\n            onSerialize,\n            onIframeLoad,\n            iframeLoadTimeout,\n            keepIframeSrcFn,\n        }),\n        idNodeMap,\n    ];\n}\nfunction skipAttribute(tagName, attributeName, value) {\n    return ((tagName === 'video' || tagName === 'audio') && attributeName === 'autoplay');\n}\n\nvar EventType;\n(function (EventType) {\n    EventType[EventType[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n    EventType[EventType[\"Load\"] = 1] = \"Load\";\n    EventType[EventType[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n    EventType[EventType[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n    EventType[EventType[\"Meta\"] = 4] = \"Meta\";\n    EventType[EventType[\"Custom\"] = 5] = \"Custom\";\n    EventType[EventType[\"Plugin\"] = 6] = \"Plugin\";\n})(EventType || (EventType = {}));\nvar IncrementalSource;\n(function (IncrementalSource) {\n    IncrementalSource[IncrementalSource[\"Mutation\"] = 0] = \"Mutation\";\n    IncrementalSource[IncrementalSource[\"MouseMove\"] = 1] = \"MouseMove\";\n    IncrementalSource[IncrementalSource[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n    IncrementalSource[IncrementalSource[\"Scroll\"] = 3] = \"Scroll\";\n    IncrementalSource[IncrementalSource[\"ViewportResize\"] = 4] = \"ViewportResize\";\n    IncrementalSource[IncrementalSource[\"Input\"] = 5] = \"Input\";\n    IncrementalSource[IncrementalSource[\"TouchMove\"] = 6] = \"TouchMove\";\n    IncrementalSource[IncrementalSource[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n    IncrementalSource[IncrementalSource[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n    IncrementalSource[IncrementalSource[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n    IncrementalSource[IncrementalSource[\"Font\"] = 10] = \"Font\";\n    IncrementalSource[IncrementalSource[\"Log\"] = 11] = \"Log\";\n    IncrementalSource[IncrementalSource[\"Drag\"] = 12] = \"Drag\";\n    IncrementalSource[IncrementalSource[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n})(IncrementalSource || (IncrementalSource = {}));\nvar MouseInteractions;\n(function (MouseInteractions) {\n    MouseInteractions[MouseInteractions[\"MouseUp\"] = 0] = \"MouseUp\";\n    MouseInteractions[MouseInteractions[\"MouseDown\"] = 1] = \"MouseDown\";\n    MouseInteractions[MouseInteractions[\"Click\"] = 2] = \"Click\";\n    MouseInteractions[MouseInteractions[\"ContextMenu\"] = 3] = \"ContextMenu\";\n    MouseInteractions[MouseInteractions[\"DblClick\"] = 4] = \"DblClick\";\n    MouseInteractions[MouseInteractions[\"Focus\"] = 5] = \"Focus\";\n    MouseInteractions[MouseInteractions[\"Blur\"] = 6] = \"Blur\";\n    MouseInteractions[MouseInteractions[\"TouchStart\"] = 7] = \"TouchStart\";\n    MouseInteractions[MouseInteractions[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n    MouseInteractions[MouseInteractions[\"TouchEnd\"] = 9] = \"TouchEnd\";\n    MouseInteractions[MouseInteractions[\"TouchCancel\"] = 10] = \"TouchCancel\";\n})(MouseInteractions || (MouseInteractions = {}));\nvar CanvasContext;\n(function (CanvasContext) {\n    CanvasContext[CanvasContext[\"2D\"] = 0] = \"2D\";\n    CanvasContext[CanvasContext[\"WebGL\"] = 1] = \"WebGL\";\n    CanvasContext[CanvasContext[\"WebGL2\"] = 2] = \"WebGL2\";\n})(CanvasContext || (CanvasContext = {}));\nvar MediaInteractions;\n(function (MediaInteractions) {\n    MediaInteractions[MediaInteractions[\"Play\"] = 0] = \"Play\";\n    MediaInteractions[MediaInteractions[\"Pause\"] = 1] = \"Pause\";\n    MediaInteractions[MediaInteractions[\"Seeked\"] = 2] = \"Seeked\";\n    MediaInteractions[MediaInteractions[\"VolumeChange\"] = 3] = \"VolumeChange\";\n})(MediaInteractions || (MediaInteractions = {}));\nvar ReplayerEvents;\n(function (ReplayerEvents) {\n    ReplayerEvents[\"Start\"] = \"start\";\n    ReplayerEvents[\"Pause\"] = \"pause\";\n    ReplayerEvents[\"Resume\"] = \"resume\";\n    ReplayerEvents[\"Resize\"] = \"resize\";\n    ReplayerEvents[\"Finish\"] = \"finish\";\n    ReplayerEvents[\"FullsnapshotRebuilded\"] = \"fullsnapshot-rebuilded\";\n    ReplayerEvents[\"LoadStylesheetStart\"] = \"load-stylesheet-start\";\n    ReplayerEvents[\"LoadStylesheetEnd\"] = \"load-stylesheet-end\";\n    ReplayerEvents[\"SkipStart\"] = \"skip-start\";\n    ReplayerEvents[\"SkipEnd\"] = \"skip-end\";\n    ReplayerEvents[\"MouseInteraction\"] = \"mouse-interaction\";\n    ReplayerEvents[\"EventCast\"] = \"event-cast\";\n    ReplayerEvents[\"CustomEvent\"] = \"custom-event\";\n    ReplayerEvents[\"Flush\"] = \"flush\";\n    ReplayerEvents[\"StateChange\"] = \"state-change\";\n    ReplayerEvents[\"PlayBack\"] = \"play-back\";\n})(ReplayerEvents || (ReplayerEvents = {}));\n\nfunction on(type, fn, target = document) {\n    const options = { capture: true, passive: true };\n    target.addEventListener(type, fn, options);\n    return () => target.removeEventListener(type, fn, options);\n}\nfunction createMirror() {\n    return {\n        map: {},\n        getId(n) {\n            if (!n || !n.__sn) {\n                return -1;\n            }\n            return n.__sn.id;\n        },\n        getNode(id) {\n            return this.map[id] || null;\n        },\n        removeNodeFromMap(n) {\n            const id = n.__sn && n.__sn.id;\n            delete this.map[id];\n            if (n.childNodes) {\n                n.childNodes.forEach((child) => this.removeNodeFromMap(child));\n            }\n        },\n        has(id) {\n            return this.map.hasOwnProperty(id);\n        },\n        reset() {\n            this.map = {};\n        },\n    };\n}\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\n    '\\r\\n' +\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\n    '\\r\\n' +\n    'or you can use record.mirror to access the mirror instance during recording.';\nlet _mirror = {\n    map: {},\n    getId() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return -1;\n    },\n    getNode() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return null;\n    },\n    removeNodeFromMap() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n    has() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return false;\n    },\n    reset() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n};\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\n    _mirror = new Proxy(_mirror, {\n        get(target, prop, receiver) {\n            if (prop === 'map') {\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n            }\n            return Reflect.get(target, prop, receiver);\n        },\n    });\n}\nfunction throttle$1(func, wait, options = {}) {\n    let timeout = null;\n    let previous = 0;\n    return function (arg) {\n        let now = Date.now();\n        if (!previous && options.leading === false) {\n            previous = now;\n        }\n        let remaining = wait - (now - previous);\n        let context = this;\n        let args = arguments;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous = now;\n            func.apply(context, args);\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(() => {\n                previous = options.leading === false ? 0 : Date.now();\n                timeout = null;\n                func.apply(context, args);\n            }, remaining);\n        }\n    };\n}\nfunction hookSetter(target, key, d, isRevoked, win = window) {\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\n    win.Object.defineProperty(target, key, isRevoked\n        ? d\n        : {\n            set(value) {\n                setTimeout(() => {\n                    d.set.call(this, value);\n                }, 0);\n                if (original && original.set) {\n                    original.set.call(this, value);\n                }\n            },\n        });\n    return () => hookSetter(target, key, original || {}, true);\n}\nfunction patch(source, name, replacement) {\n    try {\n        if (!(name in source)) {\n            return () => { };\n        }\n        const original = source[name];\n        const wrapped = replacement(original);\n        if (typeof wrapped === 'function') {\n            wrapped.prototype = wrapped.prototype || {};\n            Object.defineProperties(wrapped, {\n                __rrweb_original__: {\n                    enumerable: false,\n                    value: original,\n                },\n            });\n        }\n        source[name] = wrapped;\n        return () => {\n            source[name] = original;\n        };\n    }\n    catch (_a) {\n        return () => { };\n    }\n}\nfunction getWindowHeight() {\n    return (window.innerHeight ||\n        (document.documentElement && document.documentElement.clientHeight) ||\n        (document.body && document.body.clientHeight));\n}\nfunction getWindowWidth() {\n    return (window.innerWidth ||\n        (document.documentElement && document.documentElement.clientWidth) ||\n        (document.body && document.body.clientWidth));\n}\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector) {\n    if (!node) {\n        return false;\n    }\n    if (node.nodeType === node.ELEMENT_NODE) {\n        let needBlock = false;\n        const needUnblock = unblockSelector && node.matches(unblockSelector);\n        if (typeof blockClass === 'string') {\n            if (node.closest !== undefined) {\n                needBlock =\n                    !needUnblock &&\n                        node.closest('.' + blockClass) !== null;\n            }\n            else {\n                needBlock =\n                    !needUnblock && node.classList.contains(blockClass);\n            }\n        }\n        else {\n            !needUnblock &&\n                node.classList.forEach((className) => {\n                    if (blockClass.test(className)) {\n                        needBlock = true;\n                    }\n                });\n        }\n        if (!needBlock && blockSelector) {\n            needBlock = node.matches(blockSelector);\n        }\n        return ((!needUnblock && needBlock) ||\n            isBlocked(node.parentNode, blockClass, blockSelector, unblockSelector));\n    }\n    if (node.nodeType === node.TEXT_NODE) {\n        return isBlocked(node.parentNode, blockClass, blockSelector, unblockSelector);\n    }\n    return isBlocked(node.parentNode, blockClass, blockSelector, unblockSelector);\n}\nfunction isIgnored(n) {\n    if ('__sn' in n) {\n        return n.__sn.id === IGNORED_NODE;\n    }\n    return false;\n}\nfunction isAncestorRemoved(target, mirror) {\n    if (isShadowRoot(target)) {\n        return false;\n    }\n    const id = mirror.getId(target);\n    if (!mirror.has(id)) {\n        return true;\n    }\n    if (target.parentNode &&\n        target.parentNode.nodeType === target.DOCUMENT_NODE) {\n        return false;\n    }\n    if (!target.parentNode) {\n        return true;\n    }\n    return isAncestorRemoved(target.parentNode, mirror);\n}\nfunction isTouchEvent(event) {\n    return Boolean(event.changedTouches);\n}\nfunction polyfill(win = window) {\n    if ('NodeList' in win && !win.NodeList.prototype.forEach) {\n        win.NodeList.prototype.forEach = Array.prototype\n            .forEach;\n    }\n    if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\n        win.DOMTokenList.prototype.forEach = Array.prototype\n            .forEach;\n    }\n    if (!Node.prototype.contains) {\n        Node.prototype.contains = function contains(node) {\n            if (!(0 in arguments)) {\n                throw new TypeError('1 argument is required');\n            }\n            do {\n                if (this === node) {\n                    return true;\n                }\n            } while ((node = node && node.parentNode));\n            return false;\n        };\n    }\n}\nfunction isIframeINode(node) {\n    if ('__sn' in node) {\n        return (node.__sn.type === NodeType$1.Element && node.__sn.tagName === 'iframe');\n    }\n    return false;\n}\nfunction hasShadowRoot(n) {\n    return Boolean(n === null || n === void 0 ? void 0 : n.shadowRoot);\n}\n\nfunction isNodeInLinkedList(n) {\n    return '__ln' in n;\n}\nclass DoubleLinkedList {\n    constructor() {\n        this.length = 0;\n        this.head = null;\n    }\n    get(position) {\n        if (position >= this.length) {\n            throw new Error('Position outside of list range');\n        }\n        let current = this.head;\n        for (let index = 0; index < position; index++) {\n            current = (current === null || current === void 0 ? void 0 : current.next) || null;\n        }\n        return current;\n    }\n    addNode(n) {\n        const node = {\n            value: n,\n            previous: null,\n            next: null,\n        };\n        n.__ln = node;\n        if (n.previousSibling && isNodeInLinkedList(n.previousSibling)) {\n            const current = n.previousSibling.__ln.next;\n            node.next = current;\n            node.previous = n.previousSibling.__ln;\n            n.previousSibling.__ln.next = node;\n            if (current) {\n                current.previous = node;\n            }\n        }\n        else if (n.nextSibling &&\n            isNodeInLinkedList(n.nextSibling) &&\n            n.nextSibling.__ln.previous) {\n            const current = n.nextSibling.__ln.previous;\n            node.previous = current;\n            node.next = n.nextSibling.__ln;\n            n.nextSibling.__ln.previous = node;\n            if (current) {\n                current.next = node;\n            }\n        }\n        else {\n            if (this.head) {\n                this.head.previous = node;\n            }\n            node.next = this.head;\n            this.head = node;\n        }\n        this.length++;\n    }\n    removeNode(n) {\n        const current = n.__ln;\n        if (!this.head) {\n            return;\n        }\n        if (!current.previous) {\n            this.head = current.next;\n            if (this.head) {\n                this.head.previous = null;\n            }\n        }\n        else {\n            current.previous.next = current.next;\n            if (current.next) {\n                current.next.previous = current.previous;\n            }\n        }\n        if (n.__ln) {\n            delete n.__ln;\n        }\n        this.length--;\n    }\n}\nconst moveKey = (id, parentId) => `${id}@${parentId}`;\nfunction isINode(n) {\n    return '__sn' in n;\n}\nclass MutationBuffer {\n    constructor() {\n        this.frozen = false;\n        this.locked = false;\n        this.texts = [];\n        this.attributes = [];\n        this.removes = [];\n        this.mapRemoves = [];\n        this.movedMap = {};\n        this.addedSet = new Set();\n        this.movedSet = new Set();\n        this.droppedSet = new Set();\n        this.processMutations = (mutations) => {\n            mutations.forEach(this.processMutation);\n            this.emit();\n        };\n        this.emit = () => {\n            if (this.frozen || this.locked) {\n                return;\n            }\n            const adds = [];\n            const addList = new DoubleLinkedList();\n            const getNextId = (n) => {\n                let ns = n;\n                let nextId = IGNORED_NODE;\n                while (nextId === IGNORED_NODE) {\n                    ns = ns && ns.nextSibling;\n                    nextId = ns && this.mirror.getId(ns);\n                }\n                return nextId;\n            };\n            const pushAdd = (n) => {\n                var _a, _b, _c, _d, _e;\n                const shadowHost = n.getRootNode\n                    ? (_a = n.getRootNode()) === null || _a === void 0 ? void 0 : _a.host\n                    : null;\n                let rootShadowHost = shadowHost;\n                while ((_c = (_b = rootShadowHost === null || rootShadowHost === void 0 ? void 0 : rootShadowHost.getRootNode) === null || _b === void 0 ? void 0 : _b.call(rootShadowHost)) === null || _c === void 0 ? void 0 : _c.host)\n                    rootShadowHost =\n                        ((_e = (_d = rootShadowHost === null || rootShadowHost === void 0 ? void 0 : rootShadowHost.getRootNode) === null || _d === void 0 ? void 0 : _d.call(rootShadowHost)) === null || _e === void 0 ? void 0 : _e.host) ||\n                            null;\n                const notInDoc = !this.doc.contains(n) &&\n                    (!rootShadowHost || !this.doc.contains(rootShadowHost));\n                if (!n.parentNode || notInDoc) {\n                    return;\n                }\n                const parentId = isShadowRoot(n.parentNode)\n                    ? this.mirror.getId(shadowHost)\n                    : this.mirror.getId(n.parentNode);\n                const nextId = getNextId(n);\n                if (parentId === -1 || nextId === -1) {\n                    return addList.addNode(n);\n                }\n                let sn = serializeNodeWithId(n, {\n                    doc: this.doc,\n                    map: this.mirror.map,\n                    blockClass: this.blockClass,\n                    blockSelector: this.blockSelector,\n                    unblockSelector: this.unblockSelector,\n                    maskTextClass: this.maskTextClass,\n                    maskTextSelector: this.maskTextSelector,\n                    unmaskTextSelector: this.unmaskTextSelector,\n                    maskInputSelector: this.maskInputSelector,\n                    unmaskInputSelector: this.unmaskInputSelector,\n                    skipChild: true,\n                    inlineStylesheet: this.inlineStylesheet,\n                    maskAllText: this.maskAllText,\n                    maskInputOptions: this.maskInputOptions,\n                    maskTextFn: this.maskTextFn,\n                    maskInputFn: this.maskInputFn,\n                    slimDOMOptions: this.slimDOMOptions,\n                    recordCanvas: this.recordCanvas,\n                    inlineImages: this.inlineImages,\n                    onSerialize: (currentN) => {\n                        if (isIframeINode(currentN)) {\n                            this.iframeManager.addIframe(currentN);\n                        }\n                        if (hasShadowRoot(n)) {\n                            this.shadowDomManager.addShadowRoot(n.shadowRoot, document);\n                        }\n                    },\n                    onIframeLoad: (iframe, childSn) => {\n                        this.iframeManager.attachIframe(iframe, childSn);\n                        this.shadowDomManager.observeAttachShadow(iframe);\n                    },\n                });\n                if (sn) {\n                    adds.push({\n                        parentId,\n                        nextId,\n                        node: sn,\n                    });\n                }\n            };\n            while (this.mapRemoves.length) {\n                this.mirror.removeNodeFromMap(this.mapRemoves.shift());\n            }\n            for (const n of this.movedSet) {\n                if (isParentRemoved(this.removes, n, this.mirror) &&\n                    !this.movedSet.has(n.parentNode)) {\n                    continue;\n                }\n                pushAdd(n);\n            }\n            for (const n of this.addedSet) {\n                if (!isAncestorInSet(this.droppedSet, n) &&\n                    !isParentRemoved(this.removes, n, this.mirror)) {\n                    pushAdd(n);\n                }\n                else if (isAncestorInSet(this.movedSet, n)) {\n                    pushAdd(n);\n                }\n                else {\n                    this.droppedSet.add(n);\n                }\n            }\n            let candidate = null;\n            while (addList.length) {\n                let node = null;\n                if (candidate) {\n                    const parentId = this.mirror.getId(candidate.value.parentNode);\n                    const nextId = getNextId(candidate.value);\n                    if (parentId !== -1 && nextId !== -1) {\n                        node = candidate;\n                    }\n                }\n                if (!node) {\n                    for (let index = addList.length - 1; index >= 0; index--) {\n                        const _node = addList.get(index);\n                        if (_node) {\n                            const parentId = this.mirror.getId(_node.value.parentNode);\n                            const nextId = getNextId(_node.value);\n                            if (parentId !== -1 && nextId !== -1) {\n                                node = _node;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (!node) {\n                    while (addList.head) {\n                        addList.removeNode(addList.head.value);\n                    }\n                    break;\n                }\n                candidate = node.previous;\n                addList.removeNode(node.value);\n                pushAdd(node.value);\n            }\n            const payload = {\n                texts: this.texts\n                    .map((text) => ({\n                    id: this.mirror.getId(text.node),\n                    value: text.value,\n                }))\n                    .filter((text) => this.mirror.has(text.id)),\n                attributes: this.attributes\n                    .map((attribute) => ({\n                    id: this.mirror.getId(attribute.node),\n                    attributes: attribute.attributes,\n                }))\n                    .filter((attribute) => this.mirror.has(attribute.id)),\n                removes: this.removes,\n                adds,\n            };\n            if (!payload.texts.length &&\n                !payload.attributes.length &&\n                !payload.removes.length &&\n                !payload.adds.length) {\n                return;\n            }\n            this.texts = [];\n            this.attributes = [];\n            this.removes = [];\n            this.addedSet = new Set();\n            this.movedSet = new Set();\n            this.droppedSet = new Set();\n            this.movedMap = {};\n            this.mutationCb(payload);\n        };\n        this.processMutation = (m) => {\n            if (isIgnored(m.target)) {\n                return;\n            }\n            switch (m.type) {\n                case 'characterData': {\n                    const value = m.target.textContent;\n                    if (!isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector) && value !== m.oldValue) {\n                        this.texts.push({\n                            value: needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextSelector, this.maskAllText) && value\n                                ? this.maskTextFn\n                                    ? this.maskTextFn(value)\n                                    : value.replace(/[\\S]/g, '*')\n                                : value,\n                            node: m.target,\n                        });\n                    }\n                    break;\n                }\n                case 'attributes': {\n                    const target = m.target;\n                    let value = target.getAttribute(m.attributeName);\n                    if (m.attributeName === 'value') {\n                        value = maskInputValue({\n                            input: target,\n                            maskInputSelector: this.maskInputSelector,\n                            unmaskInputSelector: this.unmaskInputSelector,\n                            maskInputOptions: this.maskInputOptions,\n                            tagName: target.tagName,\n                            type: target.getAttribute('type'),\n                            value,\n                            maskInputFn: this.maskInputFn,\n                        });\n                    }\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector) || value === m.oldValue) {\n                        return;\n                    }\n                    let item = this.attributes.find((a) => a.node === m.target);\n                    if (!item) {\n                        item = {\n                            node: m.target,\n                            attributes: {},\n                        };\n                        this.attributes.push(item);\n                    }\n                    if (m.attributeName === 'type' &&\n                        target.tagName === 'INPUT' &&\n                        (m.oldValue || '').toLowerCase() === 'password') {\n                        target.setAttribute('data-rr-is-password', 'true');\n                    }\n                    if (m.attributeName === 'style') {\n                        const old = this.doc.createElement('span');\n                        if (m.oldValue) {\n                            old.setAttribute('style', m.oldValue);\n                        }\n                        if (item.attributes.style === undefined ||\n                            item.attributes.style === null) {\n                            item.attributes.style = {};\n                        }\n                        try {\n                            const styleObj = item.attributes.style;\n                            for (const pname of Array.from(target.style)) {\n                                const newValue = target.style.getPropertyValue(pname);\n                                const newPriority = target.style.getPropertyPriority(pname);\n                                if (newValue !== old.style.getPropertyValue(pname) ||\n                                    newPriority !== old.style.getPropertyPriority(pname)) {\n                                    if (newPriority === '') {\n                                        styleObj[pname] = newValue;\n                                    }\n                                    else {\n                                        styleObj[pname] = [newValue, newPriority];\n                                    }\n                                }\n                            }\n                            for (const pname of Array.from(old.style)) {\n                                if (target.style.getPropertyValue(pname) === '') {\n                                    styleObj[pname] = false;\n                                }\n                            }\n                        }\n                        catch (error) {\n                            console.warn('[rrweb] Error when parsing update to style attribute:', error);\n                        }\n                    }\n                    else {\n                        const element = m.target;\n                        item.attributes[m.attributeName] = transformAttribute(this.doc, element, element.tagName, m.attributeName, value, this.maskAllText, this.unmaskTextSelector, this.maskTextFn);\n                    }\n                    break;\n                }\n                case 'childList': {\n                    m.addedNodes.forEach((n) => this.genAdds(n, m.target));\n                    m.removedNodes.forEach((n) => {\n                        const nodeId = this.mirror.getId(n);\n                        const parentId = isShadowRoot(m.target)\n                            ? this.mirror.getId(m.target.host)\n                            : this.mirror.getId(m.target);\n                        if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector) || isIgnored(n)) {\n                            return;\n                        }\n                        if (this.addedSet.has(n)) {\n                            deepDelete(this.addedSet, n);\n                            this.droppedSet.add(n);\n                        }\n                        else if (this.addedSet.has(m.target) && nodeId === -1) ;\n                        else if (isAncestorRemoved(m.target, this.mirror)) ;\n                        else if (this.movedSet.has(n) &&\n                            this.movedMap[moveKey(nodeId, parentId)]) {\n                            deepDelete(this.movedSet, n);\n                        }\n                        else {\n                            this.removes.push({\n                                parentId,\n                                id: nodeId,\n                                isShadow: isShadowRoot(m.target) ? true : undefined,\n                            });\n                        }\n                        this.mapRemoves.push(n);\n                    });\n                    break;\n                }\n            }\n        };\n        this.genAdds = (n, target) => {\n            if (target && isBlocked(target, this.blockClass, this.blockSelector, this.unblockSelector)) {\n                return;\n            }\n            if (isINode(n)) {\n                if (isIgnored(n)) {\n                    return;\n                }\n                this.movedSet.add(n);\n                let targetId = null;\n                if (target && isINode(target)) {\n                    targetId = target.__sn.id;\n                }\n                if (targetId) {\n                    this.movedMap[moveKey(n.__sn.id, targetId)] = true;\n                }\n            }\n            else {\n                this.addedSet.add(n);\n                this.droppedSet.delete(n);\n            }\n            if (!isBlocked(n, this.blockClass, this.blockSelector, this.unblockSelector))\n                n.childNodes.forEach((childN) => this.genAdds(childN));\n        };\n    }\n    init(options) {\n        [\n            'mutationCb',\n            'blockClass',\n            'blockSelector',\n            'unblockSelector',\n            'maskTextClass',\n            'maskTextSelector',\n            'unmaskTextSelector',\n            'maskInputSelector',\n            'unmaskInputSelector',\n            'inlineStylesheet',\n            'maskAllText',\n            'maskInputOptions',\n            'maskTextFn',\n            'maskInputFn',\n            'recordCanvas',\n            'inlineImages',\n            'slimDOMOptions',\n            'doc',\n            'mirror',\n            'iframeManager',\n            'shadowDomManager',\n            'canvasManager',\n        ].forEach((key) => {\n            this[key] = options[key];\n        });\n    }\n    freeze() {\n        this.frozen = true;\n        this.canvasManager.freeze();\n    }\n    unfreeze() {\n        this.frozen = false;\n        this.canvasManager.unfreeze();\n        this.emit();\n    }\n    isFrozen() {\n        return this.frozen;\n    }\n    lock() {\n        this.locked = true;\n        this.canvasManager.lock();\n    }\n    unlock() {\n        this.locked = false;\n        this.canvasManager.unlock();\n        this.emit();\n    }\n    reset() {\n        this.shadowDomManager.reset();\n        this.canvasManager.reset();\n    }\n}\nfunction deepDelete(addsSet, n) {\n    addsSet.delete(n);\n    n.childNodes.forEach((childN) => deepDelete(addsSet, childN));\n}\nfunction isParentRemoved(removes, n, mirror) {\n    const { parentNode } = n;\n    if (!parentNode) {\n        return false;\n    }\n    const parentId = mirror.getId(parentNode);\n    if (removes.some((r) => r.id === parentId)) {\n        return true;\n    }\n    return isParentRemoved(removes, parentNode, mirror);\n}\nfunction isAncestorInSet(set, n) {\n    const { parentNode } = n;\n    if (!parentNode) {\n        return false;\n    }\n    if (set.has(parentNode)) {\n        return true;\n    }\n    return isAncestorInSet(set, parentNode);\n}\n\nconst callbackWrapper = (cb) => {\n    const rrwebWrapped = (...rest) => {\n        try {\n            return cb(...rest);\n        }\n        catch (error) {\n            try {\n                error.__rrweb__ = true;\n            }\n            catch (_a) {\n            }\n            throw error;\n        }\n    };\n    return rrwebWrapped;\n};\n\nconst mutationBuffers = [];\nfunction getEventTarget(event) {\n    try {\n        if ('composedPath' in event) {\n            const path = event.composedPath();\n            if (path.length) {\n                return path[0];\n            }\n        }\n        else if ('path' in event && event.path.length) {\n            return event.path[0];\n        }\n    }\n    catch (_a) { }\n    return event && event.target;\n}\nfunction initMutationObserver(options, rootEl) {\n    var _a, _b;\n    const mutationBuffer = new MutationBuffer();\n    mutationBuffers.push(mutationBuffer);\n    mutationBuffer.init(options);\n    let mutationObserverCtor = window.MutationObserver ||\n        window.__rrMutationObserver;\n    const angularZoneSymbol = (_b = (_a = window === null || window === void 0 ? void 0 : window.Zone) === null || _a === void 0 ? void 0 : _a.__symbol__) === null || _b === void 0 ? void 0 : _b.call(_a, 'MutationObserver');\n    if (angularZoneSymbol &&\n        window[angularZoneSymbol]) {\n        mutationObserverCtor = window[angularZoneSymbol];\n    }\n    const observer = new mutationObserverCtor(callbackWrapper((mutations) => {\n        if (options.onMutation && options.onMutation(mutations) === false) {\n            return;\n        }\n        mutationBuffer.processMutations(mutations);\n    }));\n    observer.observe(rootEl, {\n        attributes: true,\n        attributeOldValue: true,\n        characterData: true,\n        characterDataOldValue: true,\n        childList: true,\n        subtree: true,\n    });\n    return observer;\n}\nfunction initMoveObserver({ mousemoveCb, sampling, doc, mirror, }) {\n    if (sampling.mousemove === false) {\n        return () => { };\n    }\n    const threshold = typeof sampling.mousemove === 'number' ? sampling.mousemove : 50;\n    const callbackThreshold = typeof sampling.mousemoveCallback === 'number'\n        ? sampling.mousemoveCallback\n        : 500;\n    let positions = [];\n    let timeBaseline;\n    const wrappedCb = throttle$1((source) => {\n        const totalOffset = Date.now() - timeBaseline;\n        callbackWrapper(mousemoveCb)(positions.map((p) => {\n            p.timeOffset -= totalOffset;\n            return p;\n        }), source);\n        positions = [];\n        timeBaseline = null;\n    }, callbackThreshold);\n    const updatePosition = throttle$1((evt) => {\n        const target = getEventTarget(evt);\n        const { clientX, clientY } = isTouchEvent(evt)\n            ? evt.changedTouches[0]\n            : evt;\n        if (!timeBaseline) {\n            timeBaseline = Date.now();\n        }\n        positions.push({\n            x: clientX,\n            y: clientY,\n            id: mirror.getId(target),\n            timeOffset: Date.now() - timeBaseline,\n        });\n        wrappedCb(typeof DragEvent !== 'undefined' && evt instanceof DragEvent\n            ? IncrementalSource.Drag\n            : evt instanceof MouseEvent\n                ? IncrementalSource.MouseMove\n                : IncrementalSource.TouchMove);\n    }, threshold, {\n        trailing: false,\n    });\n    const handlers = [\n        on('mousemove', callbackWrapper(updatePosition), doc),\n        on('touchmove', callbackWrapper(updatePosition), doc),\n        on('drag', callbackWrapper(updatePosition), doc),\n    ];\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initMouseInteractionObserver({ mouseInteractionCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\n    if (sampling.mouseInteraction === false) {\n        return () => { };\n    }\n    const disableMap = sampling.mouseInteraction === true ||\n        sampling.mouseInteraction === undefined\n        ? {}\n        : sampling.mouseInteraction;\n    const handlers = [];\n    const getHandler = (eventKey) => {\n        return (event) => {\n            const target = getEventTarget(event);\n            if (isBlocked(target, blockClass, blockSelector, unblockSelector)) {\n                return;\n            }\n            const e = isTouchEvent(event) ? event.changedTouches[0] : event;\n            if (!e) {\n                return;\n            }\n            const id = mirror.getId(target);\n            const { clientX, clientY } = e;\n            callbackWrapper(mouseInteractionCb)({\n                type: MouseInteractions[eventKey],\n                id,\n                x: clientX,\n                y: clientY,\n            });\n        };\n    };\n    Object.keys(MouseInteractions)\n        .filter((key) => Number.isNaN(Number(key)) &&\n        !key.endsWith('_Departed') &&\n        disableMap[key] !== false)\n        .forEach((eventKey) => {\n        const eventName = eventKey.toLowerCase();\n        const handler = callbackWrapper(getHandler(eventKey));\n        handlers.push(on(eventName, handler, doc));\n    });\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initScrollObserver({ scrollCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\n    const updatePosition = throttle$1((evt) => {\n        const target = getEventTarget(evt);\n        if (!target ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector)) {\n            return;\n        }\n        const id = mirror.getId(target);\n        if (target === doc) {\n            const scrollEl = (doc.scrollingElement || doc.documentElement);\n            callbackWrapper(scrollCb)({\n                id,\n                x: scrollEl.scrollLeft,\n                y: scrollEl.scrollTop,\n            });\n        }\n        else {\n            callbackWrapper(scrollCb)({\n                id,\n                x: target.scrollLeft,\n                y: target.scrollTop,\n            });\n        }\n    }, sampling.scroll || 100);\n    return on('scroll', callbackWrapper(updatePosition), doc);\n}\nfunction initViewportResizeObserver({ viewportResizeCb, }) {\n    let lastH = -1;\n    let lastW = -1;\n    const updateDimension = throttle$1(() => {\n        const height = getWindowHeight();\n        const width = getWindowWidth();\n        if (lastH !== height || lastW !== width) {\n            callbackWrapper(viewportResizeCb)({\n                width: Number(width),\n                height: Number(height),\n            });\n            lastH = height;\n            lastW = width;\n        }\n    }, 200);\n    return on('resize', callbackWrapper(updateDimension), window);\n}\nfunction wrapEventWithUserTriggeredFlag(v, enable) {\n    const value = Object.assign({}, v);\n    if (!enable)\n        delete value.userTriggered;\n    return value;\n}\nconst INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\nconst lastInputValueMap = new WeakMap();\nfunction initInputObserver({ inputCb, doc, mirror, blockClass, blockSelector, unblockSelector, ignoreClass, ignoreSelector, maskInputSelector, unmaskInputSelector, maskInputOptions, maskInputFn, sampling, userTriggeredOnInput, }) {\n    function eventHandler(event) {\n        let target = getEventTarget(event);\n        const tagName = target && target.tagName;\n        const userTriggered = event.isTrusted;\n        if (tagName === 'OPTION')\n            target = target.parentElement;\n        if (!target ||\n            !tagName ||\n            INPUT_TAGS.indexOf(tagName) < 0 ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector)) {\n            return;\n        }\n        const el = target;\n        const type = getInputType(el);\n        if (el.classList.contains(ignoreClass) ||\n            (ignoreSelector && el.matches(ignoreSelector))) {\n            return;\n        }\n        let text = getInputValue(el, tagName, type);\n        let isChecked = false;\n        if (type === 'radio' || type === 'checkbox') {\n            isChecked = target.checked;\n        }\n        if (hasInputMaskOptions({\n            maskInputOptions,\n            maskInputSelector,\n            tagName,\n            type,\n        })) {\n            text = maskInputValue({\n                input: el,\n                maskInputOptions,\n                maskInputSelector,\n                unmaskInputSelector,\n                tagName,\n                type,\n                value: text,\n                maskInputFn,\n            });\n        }\n        cbWithDedup(target, callbackWrapper(wrapEventWithUserTriggeredFlag)({ text, isChecked, userTriggered }, userTriggeredOnInput));\n        const name = target.name;\n        if (type === 'radio' && name && isChecked) {\n            doc\n                .querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`)\n                .forEach((el) => {\n                if (el !== target) {\n                    const text = maskInputValue({\n                        input: el,\n                        maskInputOptions,\n                        maskInputSelector,\n                        unmaskInputSelector,\n                        tagName,\n                        type,\n                        value: getInputValue(el, tagName, type),\n                        maskInputFn,\n                    });\n                    cbWithDedup(el, callbackWrapper(wrapEventWithUserTriggeredFlag)({\n                        text,\n                        isChecked: !isChecked,\n                        userTriggered: false,\n                    }, userTriggeredOnInput));\n                }\n            });\n        }\n    }\n    function cbWithDedup(target, v) {\n        const lastInputValue = lastInputValueMap.get(target);\n        if (!lastInputValue ||\n            lastInputValue.text !== v.text ||\n            lastInputValue.isChecked !== v.isChecked) {\n            lastInputValueMap.set(target, v);\n            const id = mirror.getId(target);\n            inputCb(Object.assign(Object.assign({}, v), { id }));\n        }\n    }\n    const events = sampling.input === 'last' ? ['change'] : ['input', 'change'];\n    const handlers = events.map((eventName) => on(eventName, callbackWrapper(eventHandler), doc));\n    const propertyDescriptor = Object.getOwnPropertyDescriptor(HTMLInputElement.prototype, 'value');\n    const hookProperties = [\n        [HTMLInputElement.prototype, 'value'],\n        [HTMLInputElement.prototype, 'checked'],\n        [HTMLSelectElement.prototype, 'value'],\n        [HTMLTextAreaElement.prototype, 'value'],\n        [HTMLSelectElement.prototype, 'selectedIndex'],\n        [HTMLOptionElement.prototype, 'selected'],\n    ];\n    if (propertyDescriptor && propertyDescriptor.set) {\n        handlers.push(...hookProperties.map((p) => hookSetter(p[0], p[1], {\n            set() {\n                callbackWrapper(eventHandler)({ target: this });\n            },\n        })));\n    }\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction getNestedCSSRulePositions(rule) {\n    const positions = [];\n    function recurse(childRule, pos) {\n        if ((hasNestedCSSRule('CSSGroupingRule') &&\n            childRule.parentRule instanceof CSSGroupingRule) ||\n            (hasNestedCSSRule('CSSMediaRule') &&\n                childRule.parentRule instanceof CSSMediaRule) ||\n            (hasNestedCSSRule('CSSSupportsRule') &&\n                childRule.parentRule instanceof CSSSupportsRule) ||\n            (hasNestedCSSRule('CSSConditionRule') &&\n                childRule.parentRule instanceof CSSConditionRule)) {\n            const rules = Array.from(childRule.parentRule.cssRules);\n            const index = rules.indexOf(childRule);\n            pos.unshift(index);\n        }\n        else {\n            const rules = Array.from(childRule.parentStyleSheet.cssRules);\n            const index = rules.indexOf(childRule);\n            pos.unshift(index);\n        }\n        return pos;\n    }\n    return recurse(rule, positions);\n}\nfunction initStyleSheetObserver({ styleSheetRuleCb, mirror }, { win }) {\n    if (!win.CSSStyleSheet || !win.CSSStyleSheet.prototype) {\n        return () => { };\n    }\n    const insertRule = win.CSSStyleSheet.prototype.insertRule;\n    win.CSSStyleSheet.prototype.insertRule = new Proxy(insertRule, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [rule, index] = argumentsList;\n            const id = mirror.getId(thisArg.ownerNode);\n            if (id !== -1) {\n                styleSheetRuleCb({\n                    id,\n                    adds: [{ rule, index }],\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    const deleteRule = win.CSSStyleSheet.prototype.deleteRule;\n    win.CSSStyleSheet.prototype.deleteRule = new Proxy(deleteRule, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [index] = argumentsList;\n            const id = mirror.getId(thisArg.ownerNode);\n            if (id !== -1) {\n                styleSheetRuleCb({\n                    id,\n                    removes: [{ index }],\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    const supportedNestedCSSRuleTypes = {};\n    if (canMonkeyPatchNestedCSSRule('CSSGroupingRule')) {\n        supportedNestedCSSRuleTypes.CSSGroupingRule = win.CSSGroupingRule;\n    }\n    else {\n        if (canMonkeyPatchNestedCSSRule('CSSMediaRule')) {\n            supportedNestedCSSRuleTypes.CSSMediaRule = win.CSSMediaRule;\n        }\n        if (canMonkeyPatchNestedCSSRule('CSSConditionRule')) {\n            supportedNestedCSSRuleTypes.CSSConditionRule = win.CSSConditionRule;\n        }\n        if (canMonkeyPatchNestedCSSRule('CSSSupportsRule')) {\n            supportedNestedCSSRuleTypes.CSSSupportsRule = win.CSSSupportsRule;\n        }\n    }\n    const unmodifiedFunctions = {};\n    Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\n        unmodifiedFunctions[typeKey] = {\n            insertRule: type.prototype.insertRule,\n            deleteRule: type.prototype.deleteRule,\n        };\n        type.prototype.insertRule = new Proxy(unmodifiedFunctions[typeKey].insertRule, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [rule, index] = argumentsList;\n                const id = mirror.getId(thisArg.parentStyleSheet.ownerNode);\n                if (id !== -1) {\n                    styleSheetRuleCb({\n                        id,\n                        adds: [\n                            {\n                                rule,\n                                index: [\n                                    ...getNestedCSSRulePositions(thisArg),\n                                    index || 0,\n                                ],\n                            },\n                        ],\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n        type.prototype.deleteRule = new Proxy(unmodifiedFunctions[typeKey].deleteRule, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [index] = argumentsList;\n                const id = mirror.getId(thisArg.parentStyleSheet.ownerNode);\n                if (id !== -1) {\n                    styleSheetRuleCb({\n                        id,\n                        removes: [\n                            { index: [...getNestedCSSRulePositions(thisArg), index] },\n                        ],\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n    });\n    return callbackWrapper(() => {\n        win.CSSStyleSheet.prototype.insertRule = insertRule;\n        win.CSSStyleSheet.prototype.deleteRule = deleteRule;\n        Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\n            type.prototype.insertRule = unmodifiedFunctions[typeKey].insertRule;\n            type.prototype.deleteRule = unmodifiedFunctions[typeKey].deleteRule;\n        });\n    });\n}\nfunction initStyleDeclarationObserver({ styleDeclarationCb, mirror }, { win }) {\n    const setProperty = win.CSSStyleDeclaration.prototype.setProperty;\n    win.CSSStyleDeclaration.prototype.setProperty = new Proxy(setProperty, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            var _a, _b;\n            const [property, value, priority] = argumentsList;\n            const id = mirror.getId((_b = (_a = thisArg.parentRule) === null || _a === void 0 ? void 0 : _a.parentStyleSheet) === null || _b === void 0 ? void 0 : _b.ownerNode);\n            if (id !== -1) {\n                styleDeclarationCb({\n                    id,\n                    set: {\n                        property,\n                        value,\n                        priority,\n                    },\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    const removeProperty = win.CSSStyleDeclaration.prototype.removeProperty;\n    win.CSSStyleDeclaration.prototype.removeProperty = new Proxy(removeProperty, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            var _a, _b;\n            const [property] = argumentsList;\n            const id = mirror.getId((_b = (_a = thisArg.parentRule) === null || _a === void 0 ? void 0 : _a.parentStyleSheet) === null || _b === void 0 ? void 0 : _b.ownerNode);\n            if (id !== -1) {\n                styleDeclarationCb({\n                    id,\n                    remove: {\n                        property,\n                    },\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    return callbackWrapper(() => {\n        win.CSSStyleDeclaration.prototype.setProperty = setProperty;\n        win.CSSStyleDeclaration.prototype.removeProperty = removeProperty;\n    });\n}\nfunction initMediaInteractionObserver({ mediaInteractionCb, blockClass, blockSelector, unblockSelector, mirror, sampling, }) {\n    const handler = (type) => throttle$1(callbackWrapper((event) => {\n        const target = getEventTarget(event);\n        if (!target ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector)) {\n            return;\n        }\n        const { currentTime, volume, muted } = target;\n        mediaInteractionCb({\n            type,\n            id: mirror.getId(target),\n            currentTime,\n            volume,\n            muted,\n        });\n    }), sampling.media || 500);\n    const handlers = [\n        on('play', handler(0)),\n        on('pause', handler(1)),\n        on('seeked', handler(2)),\n        on('volumechange', handler(3)),\n    ];\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initFontObserver({ fontCb, doc }) {\n    const win = doc.defaultView;\n    if (!win) {\n        return () => { };\n    }\n    const handlers = [];\n    const fontMap = new WeakMap();\n    const originalFontFace = win.FontFace;\n    win.FontFace = function FontFace(family, source, descriptors) {\n        const fontFace = new originalFontFace(family, source, descriptors);\n        fontMap.set(fontFace, {\n            family,\n            buffer: typeof source !== 'string',\n            descriptors,\n            fontSource: typeof source === 'string'\n                ? source\n                :\n                    JSON.stringify(Array.from(new Uint8Array(source))),\n        });\n        return fontFace;\n    };\n    const restoreHandler = patch(doc.fonts, 'add', function (original) {\n        return function (fontFace) {\n            setTimeout(() => {\n                const p = fontMap.get(fontFace);\n                if (p) {\n                    fontCb(p);\n                    fontMap.delete(fontFace);\n                }\n            }, 0);\n            return original.apply(this, [fontFace]);\n        };\n    });\n    handlers.push(() => {\n        win.FontFace = originalFontFace;\n    });\n    handlers.push(restoreHandler);\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction mergeHooks(o, hooks) {\n    const { mutationCb, mousemoveCb, mouseInteractionCb, scrollCb, viewportResizeCb, inputCb, mediaInteractionCb, styleSheetRuleCb, styleDeclarationCb, canvasMutationCb, fontCb, } = o;\n    o.mutationCb = (...p) => {\n        if (hooks.mutation) {\n            hooks.mutation(...p);\n        }\n        mutationCb(...p);\n    };\n    o.mousemoveCb = (...p) => {\n        if (hooks.mousemove) {\n            hooks.mousemove(...p);\n        }\n        mousemoveCb(...p);\n    };\n    o.mouseInteractionCb = (...p) => {\n        if (hooks.mouseInteraction) {\n            hooks.mouseInteraction(...p);\n        }\n        mouseInteractionCb(...p);\n    };\n    o.scrollCb = (...p) => {\n        if (hooks.scroll) {\n            hooks.scroll(...p);\n        }\n        scrollCb(...p);\n    };\n    o.viewportResizeCb = (...p) => {\n        if (hooks.viewportResize) {\n            hooks.viewportResize(...p);\n        }\n        viewportResizeCb(...p);\n    };\n    o.inputCb = (...p) => {\n        if (hooks.input) {\n            hooks.input(...p);\n        }\n        inputCb(...p);\n    };\n    o.mediaInteractionCb = (...p) => {\n        if (hooks.mediaInteaction) {\n            hooks.mediaInteaction(...p);\n        }\n        mediaInteractionCb(...p);\n    };\n    o.styleSheetRuleCb = (...p) => {\n        if (hooks.styleSheetRule) {\n            hooks.styleSheetRule(...p);\n        }\n        styleSheetRuleCb(...p);\n    };\n    o.styleDeclarationCb = (...p) => {\n        if (hooks.styleDeclaration) {\n            hooks.styleDeclaration(...p);\n        }\n        styleDeclarationCb(...p);\n    };\n    o.canvasMutationCb = (...p) => {\n        if (hooks.canvasMutation) {\n            hooks.canvasMutation(...p);\n        }\n        canvasMutationCb(...p);\n    };\n    o.fontCb = (...p) => {\n        if (hooks.font) {\n            hooks.font(...p);\n        }\n        fontCb(...p);\n    };\n}\nfunction initObservers(o, hooks = {}) {\n    const currentWindow = o.doc.defaultView;\n    if (!currentWindow) {\n        return () => { };\n    }\n    mergeHooks(o, hooks);\n    const mutationObserver = initMutationObserver(o, o.doc);\n    const mousemoveHandler = initMoveObserver(o);\n    const mouseInteractionHandler = initMouseInteractionObserver(o);\n    const scrollHandler = initScrollObserver(o);\n    const viewportResizeHandler = initViewportResizeObserver(o);\n    const inputHandler = initInputObserver(o);\n    const mediaInteractionHandler = initMediaInteractionObserver(o);\n    const styleSheetObserver = initStyleSheetObserver(o, { win: currentWindow });\n    const styleDeclarationObserver = initStyleDeclarationObserver(o, {\n        win: currentWindow,\n    });\n    const fontObserver = o.collectFonts ? initFontObserver(o) : () => { };\n    const pluginHandlers = [];\n    for (const plugin of o.plugins) {\n        pluginHandlers.push(plugin.observer(plugin.callback, currentWindow, plugin.options));\n    }\n    return callbackWrapper(() => {\n        mutationBuffers.forEach((b) => b.reset());\n        mutationObserver.disconnect();\n        mousemoveHandler();\n        mouseInteractionHandler();\n        scrollHandler();\n        viewportResizeHandler();\n        inputHandler();\n        mediaInteractionHandler();\n        try {\n            styleSheetObserver();\n            styleDeclarationObserver();\n        }\n        catch (e) {\n        }\n        fontObserver();\n        pluginHandlers.forEach((h) => h());\n    });\n}\nfunction hasNestedCSSRule(prop) {\n    return typeof window[prop] !== 'undefined';\n}\nfunction canMonkeyPatchNestedCSSRule(prop) {\n    return Boolean(typeof window[prop] !== 'undefined' &&\n        window[prop].prototype &&\n        'insertRule' in window[prop].prototype &&\n        'deleteRule' in window[prop].prototype);\n}\n\nclass IframeManager {\n    constructor(options) {\n        this.iframes = new WeakMap();\n        this.mutationCb = options.mutationCb;\n    }\n    addIframe(iframeEl) {\n        this.iframes.set(iframeEl, true);\n    }\n    addLoadListener(cb) {\n        this.loadListener = cb;\n    }\n    attachIframe(iframeEl, childSn) {\n        var _a;\n        this.mutationCb({\n            adds: [\n                {\n                    parentId: iframeEl.__sn.id,\n                    nextId: null,\n                    node: childSn,\n                },\n            ],\n            removes: [],\n            texts: [],\n            attributes: [],\n            isAttachIframe: true,\n        });\n        (_a = this.loadListener) === null || _a === void 0 ? void 0 : _a.call(this, iframeEl);\n    }\n}\n\nclass ShadowDomManager {\n    constructor(options) {\n        this.restorePatches = [];\n        this.mutationCb = options.mutationCb;\n        this.scrollCb = options.scrollCb;\n        this.bypassOptions = options.bypassOptions;\n        this.mirror = options.mirror;\n        const manager = this;\n        this.restorePatches.push(patch(HTMLElement.prototype, 'attachShadow', function (original) {\n            return function () {\n                const shadowRoot = original.apply(this, arguments);\n                if (this.shadowRoot)\n                    manager.addShadowRoot(this.shadowRoot, this.ownerDocument);\n                return shadowRoot;\n            };\n        }));\n    }\n    addShadowRoot(shadowRoot, doc) {\n        initMutationObserver(Object.assign(Object.assign({}, this.bypassOptions), { doc, mutationCb: this.mutationCb, mirror: this.mirror, shadowDomManager: this }), shadowRoot);\n        initScrollObserver(Object.assign(Object.assign({}, this.bypassOptions), { scrollCb: this.scrollCb, doc: shadowRoot, mirror: this.mirror }));\n    }\n    observeAttachShadow(iframeElement) {\n        if (iframeElement.contentWindow) {\n            const manager = this;\n            this.restorePatches.push(patch(iframeElement.contentWindow.HTMLElement.prototype, 'attachShadow', function (original) {\n                return function () {\n                    const shadowRoot = original.apply(this, arguments);\n                    if (this.shadowRoot)\n                        manager.addShadowRoot(this.shadowRoot, iframeElement.contentDocument);\n                    return shadowRoot;\n                };\n            }));\n        }\n    }\n    reset() {\n        this.restorePatches.forEach((restorePatch) => restorePatch());\n    }\n}\n\n/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n\nfunction __rest(s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n}\n\nfunction initCanvas2DMutationObserver(cb, win, blockClass, unblockSelector, blockSelector, mirror) {\n    const handlers = [];\n    const props2D = Object.getOwnPropertyNames(win.CanvasRenderingContext2D.prototype);\n    for (const prop of props2D) {\n        try {\n            if (typeof win.CanvasRenderingContext2D.prototype[prop] !== 'function') {\n                continue;\n            }\n            const restoreHandler = patch(win.CanvasRenderingContext2D.prototype, prop, function (original) {\n                return function (...args) {\n                    if (!isBlocked(this.canvas, blockClass, blockSelector, unblockSelector)) {\n                        setTimeout(() => {\n                            const recordArgs = [...args];\n                            if (prop === 'drawImage') {\n                                if (recordArgs[0] &&\n                                    recordArgs[0] instanceof HTMLCanvasElement) {\n                                    const canvas = recordArgs[0];\n                                    const ctx = canvas.getContext('2d');\n                                    let imgd = ctx === null || ctx === void 0 ? void 0 : ctx.getImageData(0, 0, canvas.width, canvas.height);\n                                    let pix = imgd === null || imgd === void 0 ? void 0 : imgd.data;\n                                    recordArgs[0] = JSON.stringify(pix);\n                                }\n                            }\n                            cb(this.canvas, {\n                                type: CanvasContext['2D'],\n                                property: prop,\n                                args: recordArgs,\n                            });\n                        }, 0);\n                    }\n                    return original.apply(this, args);\n                };\n            });\n            handlers.push(restoreHandler);\n        }\n        catch (_a) {\n            const hookHandler = hookSetter(win.CanvasRenderingContext2D.prototype, prop, {\n                set(v) {\n                    cb(this.canvas, {\n                        type: CanvasContext['2D'],\n                        property: prop,\n                        args: [v],\n                        setter: true,\n                    });\n                },\n            });\n            handlers.push(hookHandler);\n        }\n    }\n    return () => {\n        handlers.forEach((h) => h());\n    };\n}\n\nfunction initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector) {\n    const handlers = [];\n    try {\n        const restoreHandler = patch(win.HTMLCanvasElement.prototype, 'getContext', function (original) {\n            return function (contextType, ...args) {\n                if (!isBlocked(this, blockClass, blockSelector, unblockSelector)) {\n                    if (!('__context' in this))\n                        this.__context = contextType;\n                }\n                return original.apply(this, [contextType, ...args]);\n            };\n        });\n        handlers.push(restoreHandler);\n    }\n    catch (_a) {\n        console.error('failed to patch HTMLCanvasElement.prototype.getContext');\n    }\n    return () => {\n        handlers.forEach((h) => h());\n    };\n}\n\n/*\n * base64-arraybuffer 1.0.2 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2022 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\n\nconst webGLVarMap = new Map();\nfunction variableListFor(ctx, ctor) {\n    let contextMap = webGLVarMap.get(ctx);\n    if (!contextMap) {\n        contextMap = new Map();\n        webGLVarMap.set(ctx, contextMap);\n    }\n    if (!contextMap.has(ctor)) {\n        contextMap.set(ctor, []);\n    }\n    return contextMap.get(ctor);\n}\nconst saveWebGLVar = (value, win, ctx) => {\n    if (!value ||\n        !(isInstanceOfWebGLObject(value, win) || typeof value === 'object'))\n        return;\n    const name = value.constructor.name;\n    const list = variableListFor(ctx, name);\n    let index = list.indexOf(value);\n    if (index === -1) {\n        index = list.length;\n        list.push(value);\n    }\n    return index;\n};\nfunction serializeArg(value, win, ctx) {\n    if (value instanceof Array) {\n        return value.map((arg) => serializeArg(arg, win, ctx));\n    }\n    else if (value === null) {\n        return value;\n    }\n    else if (value instanceof Float32Array ||\n        value instanceof Float64Array ||\n        value instanceof Int32Array ||\n        value instanceof Uint32Array ||\n        value instanceof Uint8Array ||\n        value instanceof Uint16Array ||\n        value instanceof Int16Array ||\n        value instanceof Int8Array ||\n        value instanceof Uint8ClampedArray) {\n        const name = value.constructor.name;\n        return {\n            rr_type: name,\n            args: [Object.values(value)],\n        };\n    }\n    else if (value instanceof ArrayBuffer) {\n        const name = value.constructor.name;\n        const base64 = encode(value);\n        return {\n            rr_type: name,\n            base64,\n        };\n    }\n    else if (value instanceof DataView) {\n        const name = value.constructor.name;\n        return {\n            rr_type: name,\n            args: [\n                serializeArg(value.buffer, win, ctx),\n                value.byteOffset,\n                value.byteLength,\n            ],\n        };\n    }\n    else if (value instanceof HTMLImageElement) {\n        const name = value.constructor.name;\n        const { src } = value;\n        return {\n            rr_type: name,\n            src,\n        };\n    }\n    else if (value instanceof ImageData) {\n        const name = value.constructor.name;\n        return {\n            rr_type: name,\n            args: [serializeArg(value.data, win, ctx), value.width, value.height],\n        };\n    }\n    else if (isInstanceOfWebGLObject(value, win) || typeof value === 'object') {\n        const name = value.constructor.name;\n        const index = saveWebGLVar(value, win, ctx);\n        return {\n            rr_type: name,\n            index: index,\n        };\n    }\n    return value;\n}\nconst serializeArgs = (args, win, ctx) => {\n    return [...args].map((arg) => serializeArg(arg, win, ctx));\n};\nconst isInstanceOfWebGLObject = (value, win) => {\n    const webGLConstructorNames = [\n        'WebGLActiveInfo',\n        'WebGLBuffer',\n        'WebGLFramebuffer',\n        'WebGLProgram',\n        'WebGLRenderbuffer',\n        'WebGLShader',\n        'WebGLShaderPrecisionFormat',\n        'WebGLTexture',\n        'WebGLUniformLocation',\n        'WebGLVertexArrayObject',\n        'WebGLVertexArrayObjectOES',\n    ];\n    const supportedWebGLConstructorNames = webGLConstructorNames.filter((name) => typeof win[name] === 'function');\n    return Boolean(supportedWebGLConstructorNames.find((name) => value instanceof win[name]));\n};\n\nfunction patchGLPrototype(prototype, type, cb, blockClass, unblockSelector, blockSelector, mirror, win) {\n    const handlers = [];\n    const props = Object.getOwnPropertyNames(prototype);\n    for (const prop of props) {\n        try {\n            if (typeof prototype[prop] !== 'function') {\n                continue;\n            }\n            const restoreHandler = patch(prototype, prop, function (original) {\n                return function (...args) {\n                    const result = original.apply(this, args);\n                    saveWebGLVar(result, win, prototype);\n                    if (!isBlocked(this.canvas, blockClass, blockSelector, unblockSelector)) {\n                        const id = mirror.getId(this.canvas);\n                        const recordArgs = serializeArgs([...args], win, prototype);\n                        const mutation = {\n                            type,\n                            property: prop,\n                            args: recordArgs,\n                        };\n                        cb(this.canvas, mutation);\n                    }\n                    return result;\n                };\n            });\n            handlers.push(restoreHandler);\n        }\n        catch (_a) {\n            const hookHandler = hookSetter(prototype, prop, {\n                set(v) {\n                    cb(this.canvas, {\n                        type,\n                        property: prop,\n                        args: [v],\n                        setter: true,\n                    });\n                },\n            });\n            handlers.push(hookHandler);\n        }\n    }\n    return handlers;\n}\nfunction initCanvasWebGLMutationObserver(cb, win, blockClass, blockSelector, unblockSelector, mirror) {\n    const handlers = [];\n    handlers.push(...patchGLPrototype(win.WebGLRenderingContext.prototype, CanvasContext.WebGL, cb, blockClass, blockSelector, unblockSelector, mirror, win));\n    if (typeof win.WebGL2RenderingContext !== 'undefined') {\n        handlers.push(...patchGLPrototype(win.WebGL2RenderingContext.prototype, CanvasContext.WebGL2, cb, blockClass, blockSelector, unblockSelector, mirror, win));\n    }\n    return () => {\n        handlers.forEach((h) => h());\n    };\n}\n\nclass CanvasManager {\n    reset() {\n        this.pendingCanvasMutations.clear();\n        this.resetObservers && this.resetObservers();\n    }\n    freeze() {\n        this.frozen = true;\n    }\n    unfreeze() {\n        this.frozen = false;\n    }\n    lock() {\n        this.locked = true;\n    }\n    unlock() {\n        this.locked = false;\n    }\n    constructor(options) {\n        this.pendingCanvasMutations = new Map();\n        this.rafStamps = { latestId: 0, invokeId: null };\n        this.frozen = false;\n        this.locked = false;\n        this.processMutation = function (target, mutation) {\n            const newFrame = this.rafStamps.invokeId &&\n                this.rafStamps.latestId !== this.rafStamps.invokeId;\n            if (newFrame || !this.rafStamps.invokeId)\n                this.rafStamps.invokeId = this.rafStamps.latestId;\n            if (!this.pendingCanvasMutations.has(target)) {\n                this.pendingCanvasMutations.set(target, []);\n            }\n            this.pendingCanvasMutations.get(target).push(mutation);\n        };\n        this.mutationCb = options.mutationCb;\n        this.mirror = options.mirror;\n        if (options.recordCanvas === true)\n            this.initCanvasMutationObserver(options.win, options.blockClass, options.blockSelector, options.unblockSelector);\n    }\n    initCanvasMutationObserver(win, blockClass, unblockSelector, blockSelector) {\n        this.startRAFTimestamping();\n        this.startPendingCanvasMutationFlusher();\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector);\n        const canvas2DReset = initCanvas2DMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector, this.mirror);\n        const canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector, this.mirror);\n        this.resetObservers = () => {\n            canvasContextReset();\n            canvas2DReset();\n            canvasWebGL1and2Reset();\n        };\n    }\n    startPendingCanvasMutationFlusher() {\n        requestAnimationFrame(() => this.flushPendingCanvasMutations());\n    }\n    startRAFTimestamping() {\n        const setLatestRAFTimestamp = (timestamp) => {\n            this.rafStamps.latestId = timestamp;\n            requestAnimationFrame(setLatestRAFTimestamp);\n        };\n        requestAnimationFrame(setLatestRAFTimestamp);\n    }\n    flushPendingCanvasMutations() {\n        this.pendingCanvasMutations.forEach((values, canvas) => {\n            const id = this.mirror.getId(canvas);\n            this.flushPendingCanvasMutationFor(canvas, id);\n        });\n        requestAnimationFrame(() => this.flushPendingCanvasMutations());\n    }\n    flushPendingCanvasMutationFor(canvas, id) {\n        if (this.frozen || this.locked) {\n            return;\n        }\n        const valuesWithType = this.pendingCanvasMutations.get(canvas);\n        if (!valuesWithType || id === -1)\n            return;\n        const values = valuesWithType.map((value) => {\n            const rest = __rest(value, [\"type\"]);\n            return rest;\n        });\n        const { type } = valuesWithType[0];\n        this.mutationCb({ id, type, commands: values });\n        this.pendingCanvasMutations.delete(canvas);\n    }\n}\n\nfunction wrapEvent(e) {\n    return Object.assign(Object.assign({}, e), { timestamp: Date.now() });\n}\nlet wrappedEmit;\nlet takeFullSnapshot;\nconst mirror = createMirror();\nfunction record(options = {}) {\n    const { emit, checkoutEveryNms, checkoutEveryNth, blockClass = 'rr-block', blockSelector = null, unblockSelector = null, ignoreClass = 'rr-ignore', ignoreSelector = null, maskTextClass = 'rr-mask', maskTextSelector = null, maskInputSelector = null, unmaskTextSelector = null, unmaskInputSelector = null, inlineStylesheet = true, maskAllText = false, maskAllInputs, maskInputOptions: _maskInputOptions, slimDOMOptions: _slimDOMOptions, maskInputFn, maskTextFn, hooks, packFn, sampling = {}, mousemoveWait, recordCanvas = false, userTriggeredOnInput = false, collectFonts = false, inlineImages = false, plugins, keepIframeSrcFn = () => false, onMutation, } = options;\n    if (!emit) {\n        throw new Error('emit function is required');\n    }\n    if (mousemoveWait !== undefined && sampling.mousemove === undefined) {\n        sampling.mousemove = mousemoveWait;\n    }\n    const maskInputOptions = maskAllInputs === true\n        ? {\n            color: true,\n            date: true,\n            'datetime-local': true,\n            email: true,\n            month: true,\n            number: true,\n            range: true,\n            search: true,\n            tel: true,\n            text: true,\n            time: true,\n            url: true,\n            week: true,\n            textarea: true,\n            select: true,\n            radio: true,\n            checkbox: true,\n        }\n        : _maskInputOptions !== undefined\n            ? _maskInputOptions\n            : {};\n    const slimDOMOptions = _slimDOMOptions === true || _slimDOMOptions === 'all'\n        ? {\n            script: true,\n            comment: true,\n            headFavicon: true,\n            headWhitespace: true,\n            headMetaSocial: true,\n            headMetaRobots: true,\n            headMetaHttpEquiv: true,\n            headMetaVerification: true,\n            headMetaAuthorship: _slimDOMOptions === 'all',\n            headMetaDescKeywords: _slimDOMOptions === 'all',\n        }\n        : _slimDOMOptions\n            ? _slimDOMOptions\n            : {};\n    polyfill();\n    let lastFullSnapshotEvent;\n    let incrementalSnapshotCount = 0;\n    const eventProcessor = (e) => {\n        for (const plugin of plugins || []) {\n            if (plugin.eventProcessor) {\n                e = plugin.eventProcessor(e);\n            }\n        }\n        if (packFn) {\n            e = packFn(e);\n        }\n        return e;\n    };\n    wrappedEmit = (e, isCheckout) => {\n        var _a;\n        if (((_a = mutationBuffers[0]) === null || _a === void 0 ? void 0 : _a.isFrozen()) &&\n            e.type !== EventType.FullSnapshot &&\n            !(e.type === EventType.IncrementalSnapshot &&\n                e.data.source === IncrementalSource.Mutation)) {\n            mutationBuffers.forEach((buf) => buf.unfreeze());\n        }\n        emit(eventProcessor(e), isCheckout);\n        if (e.type === EventType.FullSnapshot) {\n            lastFullSnapshotEvent = e;\n            incrementalSnapshotCount = 0;\n        }\n        else if (e.type === EventType.IncrementalSnapshot) {\n            if (e.data.source === IncrementalSource.Mutation &&\n                e.data.isAttachIframe) {\n                return;\n            }\n            incrementalSnapshotCount++;\n            const exceedCount = checkoutEveryNth && incrementalSnapshotCount >= checkoutEveryNth;\n            const exceedTime = checkoutEveryNms &&\n                e.timestamp - lastFullSnapshotEvent.timestamp > checkoutEveryNms;\n            if (exceedCount || exceedTime) {\n                takeFullSnapshot(true);\n            }\n        }\n    };\n    const wrappedMutationEmit = (m) => {\n        wrappedEmit(wrapEvent({\n            type: EventType.IncrementalSnapshot,\n            data: Object.assign({ source: IncrementalSource.Mutation }, m),\n        }));\n    };\n    const wrappedScrollEmit = (p) => wrappedEmit(wrapEvent({\n        type: EventType.IncrementalSnapshot,\n        data: Object.assign({ source: IncrementalSource.Scroll }, p),\n    }));\n    const wrappedCanvasMutationEmit = (p) => wrappedEmit(wrapEvent({\n        type: EventType.IncrementalSnapshot,\n        data: Object.assign({ source: IncrementalSource.CanvasMutation }, p),\n    }));\n    const iframeManager = new IframeManager({\n        mutationCb: wrappedMutationEmit,\n    });\n    const canvasManager = new CanvasManager({\n        recordCanvas,\n        mutationCb: wrappedCanvasMutationEmit,\n        win: window,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        mirror,\n    });\n    const shadowDomManager = new ShadowDomManager({\n        mutationCb: wrappedMutationEmit,\n        scrollCb: wrappedScrollEmit,\n        bypassOptions: {\n            onMutation,\n            blockClass,\n            blockSelector,\n            unblockSelector,\n            maskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            maskInputSelector,\n            unmaskInputSelector,\n            inlineStylesheet,\n            maskAllText,\n            maskInputOptions,\n            maskTextFn,\n            maskInputFn,\n            recordCanvas,\n            inlineImages,\n            sampling,\n            slimDOMOptions,\n            iframeManager,\n            canvasManager,\n        },\n        mirror,\n    });\n    takeFullSnapshot = (isCheckout = false) => {\n        var _a, _b, _c, _d;\n        wrappedEmit(wrapEvent({\n            type: EventType.Meta,\n            data: {\n                href: window.location.href,\n                width: getWindowWidth(),\n                height: getWindowHeight(),\n            },\n        }), isCheckout);\n        mutationBuffers.forEach((buf) => buf.lock());\n        const [node, idNodeMap] = snapshot(document, {\n            blockClass,\n            blockSelector,\n            unblockSelector,\n            maskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            maskInputSelector,\n            unmaskInputSelector,\n            inlineStylesheet,\n            maskAllText,\n            maskAllInputs: maskInputOptions,\n            maskTextFn,\n            slimDOM: slimDOMOptions,\n            recordCanvas,\n            inlineImages,\n            onSerialize: (n) => {\n                if (isIframeINode(n)) {\n                    iframeManager.addIframe(n);\n                }\n                if (hasShadowRoot(n)) {\n                    shadowDomManager.addShadowRoot(n.shadowRoot, document);\n                }\n            },\n            onIframeLoad: (iframe, childSn) => {\n                iframeManager.attachIframe(iframe, childSn);\n                shadowDomManager.observeAttachShadow(iframe);\n            },\n            keepIframeSrcFn,\n        });\n        if (!node) {\n            return console.warn('Failed to snapshot the document');\n        }\n        mirror.map = idNodeMap;\n        wrappedEmit(wrapEvent({\n            type: EventType.FullSnapshot,\n            data: {\n                node,\n                initialOffset: {\n                    left: window.pageXOffset !== undefined\n                        ? window.pageXOffset\n                        : (document === null || document === void 0 ? void 0 : document.documentElement.scrollLeft) ||\n                            ((_b = (_a = document === null || document === void 0 ? void 0 : document.body) === null || _a === void 0 ? void 0 : _a.parentElement) === null || _b === void 0 ? void 0 : _b.scrollLeft) ||\n                            (document === null || document === void 0 ? void 0 : document.body.scrollLeft) ||\n                            0,\n                    top: window.pageYOffset !== undefined\n                        ? window.pageYOffset\n                        : (document === null || document === void 0 ? void 0 : document.documentElement.scrollTop) ||\n                            ((_d = (_c = document === null || document === void 0 ? void 0 : document.body) === null || _c === void 0 ? void 0 : _c.parentElement) === null || _d === void 0 ? void 0 : _d.scrollTop) ||\n                            (document === null || document === void 0 ? void 0 : document.body.scrollTop) ||\n                            0,\n                },\n            },\n        }));\n        mutationBuffers.forEach((buf) => buf.unlock());\n    };\n    try {\n        const handlers = [];\n        handlers.push(on('DOMContentLoaded', () => {\n            wrappedEmit(wrapEvent({\n                type: EventType.DomContentLoaded,\n                data: {},\n            }));\n        }));\n        const observe = (doc) => {\n            var _a;\n            return callbackWrapper(initObservers)({\n                onMutation,\n                mutationCb: wrappedMutationEmit,\n                mousemoveCb: (positions, source) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source,\n                        positions,\n                    },\n                })),\n                mouseInteractionCb: (d) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.MouseInteraction }, d),\n                })),\n                scrollCb: wrappedScrollEmit,\n                viewportResizeCb: (d) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.ViewportResize }, d),\n                })),\n                inputCb: (v) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.Input }, v),\n                })),\n                mediaInteractionCb: (p) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.MediaInteraction }, p),\n                })),\n                styleSheetRuleCb: (r) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.StyleSheetRule }, r),\n                })),\n                styleDeclarationCb: (r) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.StyleDeclaration }, r),\n                })),\n                canvasMutationCb: wrappedCanvasMutationEmit,\n                fontCb: (p) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.Font }, p),\n                })),\n                blockClass,\n                ignoreClass,\n                ignoreSelector,\n                maskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n                maskInputSelector,\n                unmaskInputSelector,\n                maskInputOptions,\n                inlineStylesheet,\n                sampling,\n                recordCanvas,\n                inlineImages,\n                userTriggeredOnInput,\n                collectFonts,\n                doc,\n                maskAllText,\n                maskInputFn,\n                maskTextFn,\n                blockSelector,\n                unblockSelector,\n                slimDOMOptions,\n                mirror,\n                iframeManager,\n                shadowDomManager,\n                canvasManager,\n                plugins: ((_a = plugins === null || plugins === void 0 ? void 0 : plugins.filter((p) => p.observer)) === null || _a === void 0 ? void 0 : _a.map((p) => ({\n                    observer: p.observer,\n                    options: p.options,\n                    callback: (payload) => wrappedEmit(wrapEvent({\n                        type: EventType.Plugin,\n                        data: {\n                            plugin: p.name,\n                            payload,\n                        },\n                    })),\n                }))) || [],\n            }, hooks);\n        };\n        iframeManager.addLoadListener((iframeEl) => {\n            try {\n                handlers.push(observe(iframeEl.contentDocument));\n            }\n            catch (error) {\n                console.warn(error);\n            }\n        });\n        const init = () => {\n            takeFullSnapshot();\n            handlers.push(observe(document));\n        };\n        if (document.readyState === 'interactive' ||\n            document.readyState === 'complete') {\n            init();\n        }\n        else {\n            handlers.push(on('load', () => {\n                wrappedEmit(wrapEvent({\n                    type: EventType.Load,\n                    data: {},\n                }));\n                init();\n            }, window));\n        }\n        return () => {\n            handlers.forEach((h) => h());\n        };\n    }\n    catch (error) {\n        console.warn(error);\n    }\n}\nrecord.addCustomEvent = (tag, payload) => {\n    if (!wrappedEmit) {\n        throw new Error('please add custom event after start recording');\n    }\n    wrappedEmit(wrapEvent({\n        type: EventType.Custom,\n        data: {\n            tag,\n            payload,\n        },\n    }));\n};\nrecord.freezePage = () => {\n    mutationBuffers.forEach((buf) => buf.freeze());\n};\nrecord.takeFullSnapshot = (isCheckout) => {\n    if (!takeFullSnapshot) {\n        throw new Error('please take full snapshot after start recording');\n    }\n    takeFullSnapshot(isCheckout);\n};\nrecord.mirror = mirror;\n\n/**\n * Converts a timestamp to ms, if it was in s, or keeps it as ms.\n */\nfunction timestampToMs(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp : timestamp * 1000;\n}\n\n/**\n * Converts a timestamp to s, if it was in ms, or keeps it as s.\n */\nfunction timestampToS(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Add a breadcrumb event to replay.\n */\nfunction addBreadcrumbEvent(replay, breadcrumb) {\n  if (breadcrumb.category === 'sentry.transaction') {\n    return;\n  }\n\n  if (['ui.click', 'ui.input'].includes(breadcrumb.category )) {\n    replay.triggerUserActivity();\n  } else {\n    replay.checkAndHandleExpiredSession();\n  }\n\n  replay.addUpdate(() => {\n    void replay.throttledAddEvent({\n      type: EventType.Custom,\n      // TODO: We were converting from ms to seconds for breadcrumbs, spans,\n      // but maybe we should just keep them as milliseconds\n      timestamp: (breadcrumb.timestamp || 0) * 1000,\n      data: {\n        tag: 'breadcrumb',\n        // normalize to max. 10 depth and 1_000 properties per object\n        payload: normalize(breadcrumb, 10, 1000),\n      },\n    });\n\n    // Do not flush after console log messages\n    return breadcrumb.category === 'console';\n  });\n}\n\nconst INTERACTIVE_SELECTOR = 'button,a';\n\n/**\n * For clicks, we check if the target is inside of a button or link\n * If so, we use this as the target instead\n * This is useful because if you click on the image in <button><img></button>,\n * The target will be the image, not the button, which we don't want here\n */\nfunction getClickTargetNode(event) {\n  const target = getTargetNode(event);\n\n  if (!target || !(target instanceof Element)) {\n    return target;\n  }\n\n  const closestInteractive = target.closest(INTERACTIVE_SELECTOR);\n  return closestInteractive || target;\n}\n\n/** Get the event target node. */\nfunction getTargetNode(event) {\n  if (isEventWithTarget(event)) {\n    return event.target ;\n  }\n\n  return event;\n}\n\nfunction isEventWithTarget(event) {\n  return typeof event === 'object' && !!event && 'target' in event;\n}\n\nlet handlers;\n\n/**\n * Register a handler to be called when `window.open()` is called.\n * Returns a cleanup function.\n */\nfunction onWindowOpen(cb) {\n  // Ensure to only register this once\n  if (!handlers) {\n    handlers = [];\n    monkeyPatchWindowOpen();\n  }\n\n  handlers.push(cb);\n\n  return () => {\n    const pos = handlers ? handlers.indexOf(cb) : -1;\n    if (pos > -1) {\n      (handlers ).splice(pos, 1);\n    }\n  };\n}\n\nfunction monkeyPatchWindowOpen() {\n  fill(WINDOW, 'open', function (originalWindowOpen) {\n    return function (...args) {\n      if (handlers) {\n        try {\n          handlers.forEach(handler => handler());\n        } catch (e) {\n          // ignore errors in here\n        }\n      }\n\n      return originalWindowOpen.apply(WINDOW, args);\n    };\n  });\n}\n\n/** Handle a click. */\nfunction handleClick(clickDetector, clickBreadcrumb, node) {\n  clickDetector.handleClick(clickBreadcrumb, node);\n}\n\n/** A click detector class that can be used to detect slow or rage clicks on elements. */\nclass ClickDetector  {\n  // protected for testing\n   __init() {this._lastMutation = 0;}\n   __init2() {this._lastScroll = 0;}\n\n   __init3() {this._clicks = [];}\n\n   constructor(\n    replay,\n    slowClickConfig,\n    // Just for easier testing\n    _addBreadcrumbEvent = addBreadcrumbEvent,\n  ) {ClickDetector.prototype.__init.call(this);ClickDetector.prototype.__init2.call(this);ClickDetector.prototype.__init3.call(this);\n    // We want everything in s, but options are in ms\n    this._timeout = slowClickConfig.timeout / 1000;\n    this._threshold = slowClickConfig.threshold / 1000;\n    this._scollTimeout = slowClickConfig.scrollTimeout / 1000;\n    this._replay = replay;\n    this._ignoreSelector = slowClickConfig.ignoreSelector;\n    this._addBreadcrumbEvent = _addBreadcrumbEvent;\n  }\n\n  /** Register click detection handlers on mutation or scroll. */\n   addListeners() {\n    const mutationHandler = () => {\n      this._lastMutation = nowInSeconds();\n    };\n\n    const scrollHandler = () => {\n      this._lastScroll = nowInSeconds();\n    };\n\n    const cleanupWindowOpen = onWindowOpen(() => {\n      // Treat window.open as mutation\n      this._lastMutation = nowInSeconds();\n    });\n\n    const clickHandler = (event) => {\n      if (!event.target) {\n        return;\n      }\n\n      const node = getClickTargetNode(event);\n      if (node) {\n        this._handleMultiClick(node );\n      }\n    };\n\n    const obs = new MutationObserver(mutationHandler);\n\n    obs.observe(WINDOW.document.documentElement, {\n      attributes: true,\n      characterData: true,\n      childList: true,\n      subtree: true,\n    });\n\n    WINDOW.addEventListener('scroll', scrollHandler, { passive: true });\n    WINDOW.addEventListener('click', clickHandler, { passive: true });\n\n    this._teardown = () => {\n      WINDOW.removeEventListener('scroll', scrollHandler);\n      WINDOW.removeEventListener('click', clickHandler);\n      cleanupWindowOpen();\n\n      obs.disconnect();\n      this._clicks = [];\n      this._lastMutation = 0;\n      this._lastScroll = 0;\n    };\n  }\n\n  /** Clean up listeners. */\n   removeListeners() {\n    if (this._teardown) {\n      this._teardown();\n    }\n\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n  }\n\n  /** Handle a click */\n   handleClick(breadcrumb, node) {\n    if (ignoreElement(node, this._ignoreSelector) || !isClickBreadcrumb(breadcrumb)) {\n      return;\n    }\n\n    const newClick = {\n      timestamp: timestampToS(breadcrumb.timestamp),\n      clickBreadcrumb: breadcrumb,\n      // Set this to 0 so we know it originates from the click breadcrumb\n      clickCount: 0,\n      node,\n    };\n    this._clicks.push(newClick);\n\n    // If this is the first new click, set a timeout to check for multi clicks\n    if (this._clicks.length === 1) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** Count multiple clicks on elements. */\n   _handleMultiClick(node) {\n    this._getClicks(node).forEach(click => {\n      click.clickCount++;\n    });\n  }\n\n  /** Get all pending clicks for a given node. */\n   _getClicks(node) {\n    return this._clicks.filter(click => click.node === node);\n  }\n\n  /** Check the clicks that happened. */\n   _checkClicks() {\n    const timedOutClicks = [];\n\n    const now = nowInSeconds();\n\n    this._clicks.forEach(click => {\n      if (!click.mutationAfter && this._lastMutation) {\n        click.mutationAfter = click.timestamp <= this._lastMutation ? this._lastMutation - click.timestamp : undefined;\n      }\n      if (!click.scrollAfter && this._lastScroll) {\n        click.scrollAfter = click.timestamp <= this._lastScroll ? this._lastScroll - click.timestamp : undefined;\n      }\n\n      // All of these are in seconds!\n      if (click.timestamp + this._timeout <= now) {\n        timedOutClicks.push(click);\n      }\n    });\n\n    // Remove \"old\" clicks\n    for (const click of timedOutClicks) {\n      const pos = this._clicks.indexOf(click);\n\n      if (pos > -1) {\n        this._generateBreadcrumbs(click);\n        this._clicks.splice(pos, 1);\n      }\n    }\n\n    // Trigger new check, unless no clicks left\n    if (this._clicks.length) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** Generate matching breadcrumb(s) for the click. */\n   _generateBreadcrumbs(click) {\n    const replay = this._replay;\n    const hadScroll = click.scrollAfter && click.scrollAfter <= this._scollTimeout;\n    const hadMutation = click.mutationAfter && click.mutationAfter <= this._threshold;\n\n    const isSlowClick = !hadScroll && !hadMutation;\n    const { clickCount, clickBreadcrumb } = click;\n\n    // Slow click\n    if (isSlowClick) {\n      // If `mutationAfter` is set, it means a mutation happened after the threshold, but before the timeout\n      // If not, it means we just timed out without scroll & mutation\n      const timeAfterClickMs = Math.min(click.mutationAfter || this._timeout, this._timeout) * 1000;\n      const endReason = timeAfterClickMs < this._timeout * 1000 ? 'mutation' : 'timeout';\n\n      const breadcrumb = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.slowClickDetected',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          timeAfterClickMs,\n          endReason,\n          // If clickCount === 0, it means multiClick was not correctly captured here\n          // - we still want to send 1 in this case\n          clickCount: clickCount || 1,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n      return;\n    }\n\n    // Multi click\n    if (clickCount > 1) {\n      const breadcrumb = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.multiClick',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          clickCount,\n          metric: true,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n    }\n  }\n\n  /** Schedule to check current clicks. */\n   _scheduleCheckClicks() {\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n\n    this._checkClickTimeout = setTimeout(() => this._checkClicks(), 1000);\n  }\n}\n\nconst SLOW_CLICK_TAGS = ['A', 'BUTTON', 'INPUT'];\n\n/** exported for tests only */\nfunction ignoreElement(node, ignoreSelector) {\n  if (!SLOW_CLICK_TAGS.includes(node.tagName)) {\n    return true;\n  }\n\n  // If <input> tag, we only want to consider input[type='submit'] & input[type='button']\n  if (node.tagName === 'INPUT' && !['submit', 'button'].includes(node.getAttribute('type') || '')) {\n    return true;\n  }\n\n  // If <a> tag, detect special variants that may not lead to an action\n  // If target !== _self, we may open the link somewhere else, which would lead to no action\n  // Also, when downloading a file, we may not leave the page, but still not trigger an action\n  if (\n    node.tagName === 'A' &&\n    (node.hasAttribute('download') || (node.hasAttribute('target') && node.getAttribute('target') !== '_self'))\n  ) {\n    return true;\n  }\n\n  if (ignoreSelector && node.matches(ignoreSelector)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isClickBreadcrumb(breadcrumb) {\n  return !!(breadcrumb.data && typeof breadcrumb.data.nodeId === 'number' && breadcrumb.timestamp);\n}\n\n// This is good enough for us, and is easier to test/mock than `timestampInSeconds`\nfunction nowInSeconds() {\n  return Date.now() / 1000;\n}\n\n/**\n * Create a breadcrumb for a replay.\n */\nfunction createBreadcrumb(\n  breadcrumb,\n) {\n  return {\n    timestamp: Date.now() / 1000,\n    type: 'default',\n    ...breadcrumb,\n  };\n}\n\nvar NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\n})(NodeType || (NodeType = {}));\n\n// Note that these are the serialized attributes and not attributes directly on\n// the DOM Node. Attributes we are interested in:\nconst ATTRIBUTES_TO_RECORD = new Set([\n  'id',\n  'class',\n  'aria-label',\n  'role',\n  'name',\n  'alt',\n  'title',\n  'data-test-id',\n  'data-testid',\n  'disabled',\n  'aria-disabled',\n]);\n\n/**\n * Inclusion list of attributes that we want to record from the DOM element\n */\nfunction getAttributesToRecord(attributes) {\n  const obj = {};\n  for (const key in attributes) {\n    if (ATTRIBUTES_TO_RECORD.has(key)) {\n      let normalizedKey = key;\n\n      if (key === 'data-testid' || key === 'data-test-id') {\n        normalizedKey = 'testId';\n      }\n\n      obj[normalizedKey] = attributes[key];\n    }\n  }\n\n  return obj;\n}\n\nconst handleDomListener = (\n  replay,\n) => {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleDom(handlerData);\n\n    if (!result) {\n      return;\n    }\n\n    const isClick = handlerData.name === 'click';\n    const event = isClick && (handlerData.event );\n    // Ignore clicks if ctrl/alt/meta/shift keys are held down as they alter behavior of clicks (e.g. open in new tab)\n    if (\n      isClick &&\n      replay.clickDetector &&\n      event &&\n      !event.altKey &&\n      !event.metaKey &&\n      !event.ctrlKey &&\n      !event.shiftKey\n    ) {\n      handleClick(\n        replay.clickDetector,\n        result ,\n        getClickTargetNode(handlerData.event) ,\n      );\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n};\n\n/** Get the base DOM breadcrumb. */\nfunction getBaseDomBreadcrumb(target, message) {\n  // `__sn` property is the serialized node created by rrweb\n  const serializedNode = target && isRrwebNode(target) && target.__sn.type === NodeType.Element ? target.__sn : null;\n\n  return {\n    message,\n    data: serializedNode\n      ? {\n          nodeId: serializedNode.id,\n          node: {\n            id: serializedNode.id,\n            tagName: serializedNode.tagName,\n            textContent: target\n              ? Array.from(target.childNodes)\n                  .map(\n                    (node) => '__sn' in node && node.__sn.type === NodeType.Text && node.__sn.textContent,\n                  )\n                  .filter(Boolean) // filter out empty values\n                  .map(text => (text ).trim())\n                  .join('')\n              : '',\n            attributes: getAttributesToRecord(serializedNode.attributes),\n          },\n        }\n      : {},\n  };\n}\n\n/**\n * An event handler to react to DOM events.\n * Exported for tests.\n */\nfunction handleDom(handlerData) {\n  const { target, message } = getDomTarget(handlerData);\n\n  return createBreadcrumb({\n    category: `ui.${handlerData.name}`,\n    ...getBaseDomBreadcrumb(target, message),\n  });\n}\n\nfunction getDomTarget(handlerData) {\n  const isClick = handlerData.name === 'click';\n\n  let message;\n  let target = null;\n\n  // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n  try {\n    target = isClick ? getClickTargetNode(handlerData.event) : getTargetNode(handlerData.event);\n    message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  } catch (e) {\n    message = '<unknown>';\n  }\n\n  return { target, message };\n}\n\nfunction isRrwebNode(node) {\n  return '__sn' in node;\n}\n\n/** Handle keyboard events & create breadcrumbs. */\nfunction handleKeyboardEvent(replay, event) {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  // Update user activity, but do not restart recording as it can create\n  // noisy/low-value replays (e.g. user comes back from idle, hits alt-tab, new\n  // session with a single \"keydown\" breadcrumb is created)\n  replay.updateUserActivity();\n\n  const breadcrumb = getKeyboardBreadcrumb(event);\n\n  if (!breadcrumb) {\n    return;\n  }\n\n  addBreadcrumbEvent(replay, breadcrumb);\n}\n\n/** exported only for tests */\nfunction getKeyboardBreadcrumb(event) {\n  const { metaKey, shiftKey, ctrlKey, altKey, key, target } = event;\n\n  // never capture for input fields\n  if (!target || isInputElement(target ) || !key) {\n    return null;\n  }\n\n  // Note: We do not consider shift here, as that means \"uppercase\"\n  const hasModifierKey = metaKey || ctrlKey || altKey;\n  const isCharacterKey = key.length === 1; // other keys like Escape, Tab, etc have a longer length\n\n  // Do not capture breadcrumb if only a word key is pressed\n  // This could leak e.g. user input\n  if (!hasModifierKey && isCharacterKey) {\n    return null;\n  }\n\n  const message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  const baseBreadcrumb = getBaseDomBreadcrumb(target , message);\n\n  return createBreadcrumb({\n    category: 'ui.keyDown',\n    message,\n    data: {\n      ...baseBreadcrumb.data,\n      metaKey,\n      shiftKey,\n      ctrlKey,\n      altKey,\n      key,\n    },\n  });\n}\n\nfunction isInputElement(target) {\n  return target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable;\n}\n\nconst NAVIGATION_ENTRY_KEYS = [\n  'name',\n  'type',\n  'startTime',\n  'transferSize',\n  'duration',\n];\n\nfunction isNavigationEntryEqual(a) {\n  return function (b) {\n    return NAVIGATION_ENTRY_KEYS.every(key => a[key] === b[key]);\n  };\n}\n\n/**\n * There are some difficulties diagnosing why there are duplicate navigation\n * entries. We've witnessed several intermittent results:\n * - duplicate entries have duration = 0\n * - duplicate entries are the same object reference\n * - none of the above\n *\n * Compare the values of several keys to determine if the entries are duplicates or not.\n */\n// TODO (high-prio): Figure out wth is returned here\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction dedupePerformanceEntries(\n  currentList,\n  newList,\n) {\n  // Partition `currentList` into 3 different lists based on entryType\n  const [existingNavigationEntries, existingLcpEntries, existingEntries] = currentList.reduce(\n    (acc, entry) => {\n      if (entry.entryType === 'navigation') {\n        acc[0].push(entry );\n      } else if (entry.entryType === 'largest-contentful-paint') {\n        acc[1].push(entry );\n      } else {\n        acc[2].push(entry);\n      }\n      return acc;\n    },\n    [[], [], []],\n  );\n\n  const newEntries = [];\n  const newNavigationEntries = [];\n  let newLcpEntry = existingLcpEntries.length\n    ? existingLcpEntries[existingLcpEntries.length - 1] // Take the last element as list is sorted\n    : undefined;\n\n  newList.forEach(entry => {\n    if (entry.entryType === 'largest-contentful-paint') {\n      // We want the latest LCP event only\n      if (!newLcpEntry || newLcpEntry.startTime < entry.startTime) {\n        newLcpEntry = entry;\n      }\n      return;\n    }\n\n    if (entry.entryType === 'navigation') {\n      const navigationEntry = entry ;\n\n      // Check if the navigation entry is contained in currentList or newList\n      if (\n        // Ignore any navigation entries with duration 0, as they are likely duplicates\n        entry.duration > 0 &&\n        // Ensure new entry does not already exist in existing entries\n        !existingNavigationEntries.find(isNavigationEntryEqual(navigationEntry)) &&\n        // Ensure new entry does not already exist in new list of navigation entries\n        !newNavigationEntries.find(isNavigationEntryEqual(navigationEntry))\n      ) {\n        newNavigationEntries.push(navigationEntry);\n      }\n\n      // Otherwise this navigation entry is considered a duplicate and is thrown away\n      return;\n    }\n\n    newEntries.push(entry);\n  });\n\n  // Re-combine and sort by startTime\n  return [\n    ...(newLcpEntry ? [newLcpEntry] : []),\n    ...existingNavigationEntries,\n    ...existingEntries,\n    ...newEntries,\n    ...newNavigationEntries,\n  ].sort((a, b) => a.startTime - b.startTime);\n}\n\n/**\n * Sets up a PerformanceObserver to listen to all performance entry types.\n */\nfunction setupPerformanceObserver(replay) {\n  const performanceObserverHandler = (list) => {\n    // For whatever reason the observer was returning duplicate navigation\n    // entries (the other entry types were not duplicated).\n    const newPerformanceEntries = dedupePerformanceEntries(\n      replay.performanceEvents,\n      list.getEntries() ,\n    );\n    replay.performanceEvents = newPerformanceEntries;\n  };\n\n  const performanceObserver = new PerformanceObserver(performanceObserverHandler);\n\n  [\n    'element',\n    'event',\n    'first-input',\n    'largest-contentful-paint',\n    'layout-shift',\n    'longtask',\n    'navigation',\n    'paint',\n    'resource',\n  ].forEach(type => {\n    try {\n      performanceObserver.observe({\n        type,\n        buffered: true,\n      });\n    } catch (e) {\n      // This can throw if an entry type is not supported in the browser.\n      // Ignore these errors.\n    }\n  });\n\n  return performanceObserver;\n}\n\nconst r = `/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\nfunction t(t){let e=t.length;for(;--e>=0;)t[e]=0}const e=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),a=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),i=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),n=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=new Array(576);t(s);const r=new Array(60);t(r);const o=new Array(512);t(o);const l=new Array(256);t(l);const h=new Array(29);t(h);const d=new Array(30);function _(t,e,a,i,n){this.static_tree=t,this.extra_bits=e,this.extra_base=a,this.elems=i,this.max_length=n,this.has_stree=t&&t.length}let f,c,u;function w(t,e){this.dyn_tree=t,this.max_code=0,this.stat_desc=e}t(d);const m=t=>t<256?o[t]:o[256+(t>>>7)],b=(t,e)=>{t.pending_buf[t.pending++]=255&e,t.pending_buf[t.pending++]=e>>>8&255},g=(t,e,a)=>{t.bi_valid>16-a?(t.bi_buf|=e<<t.bi_valid&65535,b(t,t.bi_buf),t.bi_buf=e>>16-t.bi_valid,t.bi_valid+=a-16):(t.bi_buf|=e<<t.bi_valid&65535,t.bi_valid+=a)},p=(t,e,a)=>{g(t,a[2*e],a[2*e+1])},k=(t,e)=>{let a=0;do{a|=1&t,t>>>=1,a<<=1}while(--e>0);return a>>>1},v=(t,e,a)=>{const i=new Array(16);let n,s,r=0;for(n=1;n<=15;n++)r=r+a[n-1]<<1,i[n]=r;for(s=0;s<=e;s++){let e=t[2*s+1];0!==e&&(t[2*s]=k(i[e]++,e))}},y=t=>{let e;for(e=0;e<286;e++)t.dyn_ltree[2*e]=0;for(e=0;e<30;e++)t.dyn_dtree[2*e]=0;for(e=0;e<19;e++)t.bl_tree[2*e]=0;t.dyn_ltree[512]=1,t.opt_len=t.static_len=0,t.sym_next=t.matches=0},x=t=>{t.bi_valid>8?b(t,t.bi_buf):t.bi_valid>0&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0},z=(t,e,a,i)=>{const n=2*e,s=2*a;return t[n]<t[s]||t[n]===t[s]&&i[e]<=i[a]},A=(t,e,a)=>{const i=t.heap[a];let n=a<<1;for(;n<=t.heap_len&&(n<t.heap_len&&z(e,t.heap[n+1],t.heap[n],t.depth)&&n++,!z(e,i,t.heap[n],t.depth));)t.heap[a]=t.heap[n],a=n,n<<=1;t.heap[a]=i},E=(t,i,n)=>{let s,r,o,_,f=0;if(0!==t.sym_next)do{s=255&t.pending_buf[t.sym_buf+f++],s+=(255&t.pending_buf[t.sym_buf+f++])<<8,r=t.pending_buf[t.sym_buf+f++],0===s?p(t,r,i):(o=l[r],p(t,o+256+1,i),_=e[o],0!==_&&(r-=h[o],g(t,r,_)),s--,o=m(s),p(t,o,n),_=a[o],0!==_&&(s-=d[o],g(t,s,_)))}while(f<t.sym_next);p(t,256,i)},R=(t,e)=>{const a=e.dyn_tree,i=e.stat_desc.static_tree,n=e.stat_desc.has_stree,s=e.stat_desc.elems;let r,o,l,h=-1;for(t.heap_len=0,t.heap_max=573,r=0;r<s;r++)0!==a[2*r]?(t.heap[++t.heap_len]=h=r,t.depth[r]=0):a[2*r+1]=0;for(;t.heap_len<2;)l=t.heap[++t.heap_len]=h<2?++h:0,a[2*l]=1,t.depth[l]=0,t.opt_len--,n&&(t.static_len-=i[2*l+1]);for(e.max_code=h,r=t.heap_len>>1;r>=1;r--)A(t,a,r);l=s;do{r=t.heap[1],t.heap[1]=t.heap[t.heap_len--],A(t,a,1),o=t.heap[1],t.heap[--t.heap_max]=r,t.heap[--t.heap_max]=o,a[2*l]=a[2*r]+a[2*o],t.depth[l]=(t.depth[r]>=t.depth[o]?t.depth[r]:t.depth[o])+1,a[2*r+1]=a[2*o+1]=l,t.heap[1]=l++,A(t,a,1)}while(t.heap_len>=2);t.heap[--t.heap_max]=t.heap[1],((t,e)=>{const a=e.dyn_tree,i=e.max_code,n=e.stat_desc.static_tree,s=e.stat_desc.has_stree,r=e.stat_desc.extra_bits,o=e.stat_desc.extra_base,l=e.stat_desc.max_length;let h,d,_,f,c,u,w=0;for(f=0;f<=15;f++)t.bl_count[f]=0;for(a[2*t.heap[t.heap_max]+1]=0,h=t.heap_max+1;h<573;h++)d=t.heap[h],f=a[2*a[2*d+1]+1]+1,f>l&&(f=l,w++),a[2*d+1]=f,d>i||(t.bl_count[f]++,c=0,d>=o&&(c=r[d-o]),u=a[2*d],t.opt_len+=u*(f+c),s&&(t.static_len+=u*(n[2*d+1]+c)));if(0!==w){do{for(f=l-1;0===t.bl_count[f];)f--;t.bl_count[f]--,t.bl_count[f+1]+=2,t.bl_count[l]--,w-=2}while(w>0);for(f=l;0!==f;f--)for(d=t.bl_count[f];0!==d;)_=t.heap[--h],_>i||(a[2*_+1]!==f&&(t.opt_len+=(f-a[2*_+1])*a[2*_],a[2*_+1]=f),d--)}})(t,e),v(a,h,t.bl_count)},Z=(t,e,a)=>{let i,n,s=-1,r=e[1],o=0,l=7,h=4;for(0===r&&(l=138,h=3),e[2*(a+1)+1]=65535,i=0;i<=a;i++)n=r,r=e[2*(i+1)+1],++o<l&&n===r||(o<h?t.bl_tree[2*n]+=o:0!==n?(n!==s&&t.bl_tree[2*n]++,t.bl_tree[32]++):o<=10?t.bl_tree[34]++:t.bl_tree[36]++,o=0,s=n,0===r?(l=138,h=3):n===r?(l=6,h=3):(l=7,h=4))},U=(t,e,a)=>{let i,n,s=-1,r=e[1],o=0,l=7,h=4;for(0===r&&(l=138,h=3),i=0;i<=a;i++)if(n=r,r=e[2*(i+1)+1],!(++o<l&&n===r)){if(o<h)do{p(t,n,t.bl_tree)}while(0!=--o);else 0!==n?(n!==s&&(p(t,n,t.bl_tree),o--),p(t,16,t.bl_tree),g(t,o-3,2)):o<=10?(p(t,17,t.bl_tree),g(t,o-3,3)):(p(t,18,t.bl_tree),g(t,o-11,7));o=0,s=n,0===r?(l=138,h=3):n===r?(l=6,h=3):(l=7,h=4)}};let S=!1;const D=(t,e,a,i)=>{g(t,0+(i?1:0),3),x(t),b(t,a),b(t,~a),a&&t.pending_buf.set(t.window.subarray(e,e+a),t.pending),t.pending+=a};var T=(t,e,a,i)=>{let o,l,h=0;t.level>0?(2===t.strm.data_type&&(t.strm.data_type=(t=>{let e,a=4093624447;for(e=0;e<=31;e++,a>>>=1)if(1&a&&0!==t.dyn_ltree[2*e])return 0;if(0!==t.dyn_ltree[18]||0!==t.dyn_ltree[20]||0!==t.dyn_ltree[26])return 1;for(e=32;e<256;e++)if(0!==t.dyn_ltree[2*e])return 1;return 0})(t)),R(t,t.l_desc),R(t,t.d_desc),h=(t=>{let e;for(Z(t,t.dyn_ltree,t.l_desc.max_code),Z(t,t.dyn_dtree,t.d_desc.max_code),R(t,t.bl_desc),e=18;e>=3&&0===t.bl_tree[2*n[e]+1];e--);return t.opt_len+=3*(e+1)+5+5+4,e})(t),o=t.opt_len+3+7>>>3,l=t.static_len+3+7>>>3,l<=o&&(o=l)):o=l=a+5,a+4<=o&&-1!==e?D(t,e,a,i):4===t.strategy||l===o?(g(t,2+(i?1:0),3),E(t,s,r)):(g(t,4+(i?1:0),3),((t,e,a,i)=>{let s;for(g(t,e-257,5),g(t,a-1,5),g(t,i-4,4),s=0;s<i;s++)g(t,t.bl_tree[2*n[s]+1],3);U(t,t.dyn_ltree,e-1),U(t,t.dyn_dtree,a-1)})(t,t.l_desc.max_code+1,t.d_desc.max_code+1,h+1),E(t,t.dyn_ltree,t.dyn_dtree)),y(t),i&&x(t)},O={_tr_init:t=>{S||((()=>{let t,n,w,m,b;const g=new Array(16);for(w=0,m=0;m<28;m++)for(h[m]=w,t=0;t<1<<e[m];t++)l[w++]=m;for(l[w-1]=m,b=0,m=0;m<16;m++)for(d[m]=b,t=0;t<1<<a[m];t++)o[b++]=m;for(b>>=7;m<30;m++)for(d[m]=b<<7,t=0;t<1<<a[m]-7;t++)o[256+b++]=m;for(n=0;n<=15;n++)g[n]=0;for(t=0;t<=143;)s[2*t+1]=8,t++,g[8]++;for(;t<=255;)s[2*t+1]=9,t++,g[9]++;for(;t<=279;)s[2*t+1]=7,t++,g[7]++;for(;t<=287;)s[2*t+1]=8,t++,g[8]++;for(v(s,287,g),t=0;t<30;t++)r[2*t+1]=5,r[2*t]=k(t,5);f=new _(s,e,257,286,15),c=new _(r,a,0,30,15),u=new _(new Array(0),i,0,19,7)})(),S=!0),t.l_desc=new w(t.dyn_ltree,f),t.d_desc=new w(t.dyn_dtree,c),t.bl_desc=new w(t.bl_tree,u),t.bi_buf=0,t.bi_valid=0,y(t)},_tr_stored_block:D,_tr_flush_block:T,_tr_tally:(t,e,a)=>(t.pending_buf[t.sym_buf+t.sym_next++]=e,t.pending_buf[t.sym_buf+t.sym_next++]=e>>8,t.pending_buf[t.sym_buf+t.sym_next++]=a,0===e?t.dyn_ltree[2*a]++:(t.matches++,e--,t.dyn_ltree[2*(l[a]+256+1)]++,t.dyn_dtree[2*m(e)]++),t.sym_next===t.sym_end),_tr_align:t=>{g(t,2,3),p(t,256,s),(t=>{16===t.bi_valid?(b(t,t.bi_buf),t.bi_buf=0,t.bi_valid=0):t.bi_valid>=8&&(t.pending_buf[t.pending++]=255&t.bi_buf,t.bi_buf>>=8,t.bi_valid-=8)})(t)}};var F=(t,e,a,i)=>{let n=65535&t|0,s=t>>>16&65535|0,r=0;for(;0!==a;){r=a>2e3?2e3:a,a-=r;do{n=n+e[i++]|0,s=s+n|0}while(--r);n%=65521,s%=65521}return n|s<<16|0};const L=new Uint32Array((()=>{let t,e=[];for(var a=0;a<256;a++){t=a;for(var i=0;i<8;i++)t=1&t?3988292384^t>>>1:t>>>1;e[a]=t}return e})());var N=(t,e,a,i)=>{const n=L,s=i+a;t^=-1;for(let a=i;a<s;a++)t=t>>>8^n[255&(t^e[a])];return-1^t},I={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"},B={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:C,_tr_stored_block:H,_tr_flush_block:M,_tr_tally:j,_tr_align:K}=O,{Z_NO_FLUSH:P,Z_PARTIAL_FLUSH:Y,Z_FULL_FLUSH:G,Z_FINISH:X,Z_BLOCK:W,Z_OK:q,Z_STREAM_END:J,Z_STREAM_ERROR:Q,Z_DATA_ERROR:V,Z_BUF_ERROR:$,Z_DEFAULT_COMPRESSION:tt,Z_FILTERED:et,Z_HUFFMAN_ONLY:at,Z_RLE:it,Z_FIXED:nt,Z_DEFAULT_STRATEGY:st,Z_UNKNOWN:rt,Z_DEFLATED:ot}=B,lt=(t,e)=>(t.msg=I[e],e),ht=t=>2*t-(t>4?9:0),dt=t=>{let e=t.length;for(;--e>=0;)t[e]=0},_t=t=>{let e,a,i,n=t.w_size;e=t.hash_size,i=e;do{a=t.head[--i],t.head[i]=a>=n?a-n:0}while(--e);e=n,i=e;do{a=t.prev[--i],t.prev[i]=a>=n?a-n:0}while(--e)};let ft=(t,e,a)=>(e<<t.hash_shift^a)&t.hash_mask;const ct=t=>{const e=t.state;let a=e.pending;a>t.avail_out&&(a=t.avail_out),0!==a&&(t.output.set(e.pending_buf.subarray(e.pending_out,e.pending_out+a),t.next_out),t.next_out+=a,e.pending_out+=a,t.total_out+=a,t.avail_out-=a,e.pending-=a,0===e.pending&&(e.pending_out=0))},ut=(t,e)=>{M(t,t.block_start>=0?t.block_start:-1,t.strstart-t.block_start,e),t.block_start=t.strstart,ct(t.strm)},wt=(t,e)=>{t.pending_buf[t.pending++]=e},mt=(t,e)=>{t.pending_buf[t.pending++]=e>>>8&255,t.pending_buf[t.pending++]=255&e},bt=(t,e,a,i)=>{let n=t.avail_in;return n>i&&(n=i),0===n?0:(t.avail_in-=n,e.set(t.input.subarray(t.next_in,t.next_in+n),a),1===t.state.wrap?t.adler=F(t.adler,e,n,a):2===t.state.wrap&&(t.adler=N(t.adler,e,n,a)),t.next_in+=n,t.total_in+=n,n)},gt=(t,e)=>{let a,i,n=t.max_chain_length,s=t.strstart,r=t.prev_length,o=t.nice_match;const l=t.strstart>t.w_size-262?t.strstart-(t.w_size-262):0,h=t.window,d=t.w_mask,_=t.prev,f=t.strstart+258;let c=h[s+r-1],u=h[s+r];t.prev_length>=t.good_match&&(n>>=2),o>t.lookahead&&(o=t.lookahead);do{if(a=e,h[a+r]===u&&h[a+r-1]===c&&h[a]===h[s]&&h[++a]===h[s+1]){s+=2,a++;do{}while(h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&s<f);if(i=258-(f-s),s=f-258,i>r){if(t.match_start=e,r=i,i>=o)break;c=h[s+r-1],u=h[s+r]}}}while((e=_[e&d])>l&&0!=--n);return r<=t.lookahead?r:t.lookahead},pt=t=>{const e=t.w_size;let a,i,n;do{if(i=t.window_size-t.lookahead-t.strstart,t.strstart>=e+(e-262)&&(t.window.set(t.window.subarray(e,e+e-i),0),t.match_start-=e,t.strstart-=e,t.block_start-=e,t.insert>t.strstart&&(t.insert=t.strstart),_t(t),i+=e),0===t.strm.avail_in)break;if(a=bt(t.strm,t.window,t.strstart+t.lookahead,i),t.lookahead+=a,t.lookahead+t.insert>=3)for(n=t.strstart-t.insert,t.ins_h=t.window[n],t.ins_h=ft(t,t.ins_h,t.window[n+1]);t.insert&&(t.ins_h=ft(t,t.ins_h,t.window[n+3-1]),t.prev[n&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=n,n++,t.insert--,!(t.lookahead+t.insert<3)););}while(t.lookahead<262&&0!==t.strm.avail_in)},kt=(t,e)=>{let a,i,n,s=t.pending_buf_size-5>t.w_size?t.w_size:t.pending_buf_size-5,r=0,o=t.strm.avail_in;do{if(a=65535,n=t.bi_valid+42>>3,t.strm.avail_out<n)break;if(n=t.strm.avail_out-n,i=t.strstart-t.block_start,a>i+t.strm.avail_in&&(a=i+t.strm.avail_in),a>n&&(a=n),a<s&&(0===a&&e!==X||e===P||a!==i+t.strm.avail_in))break;r=e===X&&a===i+t.strm.avail_in?1:0,H(t,0,0,r),t.pending_buf[t.pending-4]=a,t.pending_buf[t.pending-3]=a>>8,t.pending_buf[t.pending-2]=~a,t.pending_buf[t.pending-1]=~a>>8,ct(t.strm),i&&(i>a&&(i=a),t.strm.output.set(t.window.subarray(t.block_start,t.block_start+i),t.strm.next_out),t.strm.next_out+=i,t.strm.avail_out-=i,t.strm.total_out+=i,t.block_start+=i,a-=i),a&&(bt(t.strm,t.strm.output,t.strm.next_out,a),t.strm.next_out+=a,t.strm.avail_out-=a,t.strm.total_out+=a)}while(0===r);return o-=t.strm.avail_in,o&&(o>=t.w_size?(t.matches=2,t.window.set(t.strm.input.subarray(t.strm.next_in-t.w_size,t.strm.next_in),0),t.strstart=t.w_size,t.insert=t.strstart):(t.window_size-t.strstart<=o&&(t.strstart-=t.w_size,t.window.set(t.window.subarray(t.w_size,t.w_size+t.strstart),0),t.matches<2&&t.matches++,t.insert>t.strstart&&(t.insert=t.strstart)),t.window.set(t.strm.input.subarray(t.strm.next_in-o,t.strm.next_in),t.strstart),t.strstart+=o,t.insert+=o>t.w_size-t.insert?t.w_size-t.insert:o),t.block_start=t.strstart),t.high_water<t.strstart&&(t.high_water=t.strstart),r?4:e!==P&&e!==X&&0===t.strm.avail_in&&t.strstart===t.block_start?2:(n=t.window_size-t.strstart,t.strm.avail_in>n&&t.block_start>=t.w_size&&(t.block_start-=t.w_size,t.strstart-=t.w_size,t.window.set(t.window.subarray(t.w_size,t.w_size+t.strstart),0),t.matches<2&&t.matches++,n+=t.w_size,t.insert>t.strstart&&(t.insert=t.strstart)),n>t.strm.avail_in&&(n=t.strm.avail_in),n&&(bt(t.strm,t.window,t.strstart,n),t.strstart+=n,t.insert+=n>t.w_size-t.insert?t.w_size-t.insert:n),t.high_water<t.strstart&&(t.high_water=t.strstart),n=t.bi_valid+42>>3,n=t.pending_buf_size-n>65535?65535:t.pending_buf_size-n,s=n>t.w_size?t.w_size:n,i=t.strstart-t.block_start,(i>=s||(i||e===X)&&e!==P&&0===t.strm.avail_in&&i<=n)&&(a=i>n?n:i,r=e===X&&0===t.strm.avail_in&&a===i?1:0,H(t,t.block_start,a,r),t.block_start+=a,ct(t.strm)),r?3:1)},vt=(t,e)=>{let a,i;for(;;){if(t.lookahead<262){if(pt(t),t.lookahead<262&&e===P)return 1;if(0===t.lookahead)break}if(a=0,t.lookahead>=3&&(t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!==a&&t.strstart-a<=t.w_size-262&&(t.match_length=gt(t,a)),t.match_length>=3)if(i=j(t,t.strstart-t.match_start,t.match_length-3),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=3){t.match_length--;do{t.strstart++,t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart}while(0!=--t.match_length);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=ft(t,t.ins_h,t.window[t.strstart+1]);else i=j(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(i&&(ut(t,!1),0===t.strm.avail_out))return 1}return t.insert=t.strstart<2?t.strstart:2,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2},yt=(t,e)=>{let a,i,n;for(;;){if(t.lookahead<262){if(pt(t),t.lookahead<262&&e===P)return 1;if(0===t.lookahead)break}if(a=0,t.lookahead>=3&&(t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=2,0!==a&&t.prev_length<t.max_lazy_match&&t.strstart-a<=t.w_size-262&&(t.match_length=gt(t,a),t.match_length<=5&&(t.strategy===et||3===t.match_length&&t.strstart-t.match_start>4096)&&(t.match_length=2)),t.prev_length>=3&&t.match_length<=t.prev_length){n=t.strstart+t.lookahead-3,i=j(t,t.strstart-1-t.prev_match,t.prev_length-3),t.lookahead-=t.prev_length-1,t.prev_length-=2;do{++t.strstart<=n&&(t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart)}while(0!=--t.prev_length);if(t.match_available=0,t.match_length=2,t.strstart++,i&&(ut(t,!1),0===t.strm.avail_out))return 1}else if(t.match_available){if(i=j(t,0,t.window[t.strstart-1]),i&&ut(t,!1),t.strstart++,t.lookahead--,0===t.strm.avail_out)return 1}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(i=j(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<2?t.strstart:2,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2};function xt(t,e,a,i,n){this.good_length=t,this.max_lazy=e,this.nice_length=a,this.max_chain=i,this.func=n}const zt=[new xt(0,0,0,0,kt),new xt(4,4,8,4,vt),new xt(4,5,16,8,vt),new xt(4,6,32,32,vt),new xt(4,4,16,16,yt),new xt(8,16,32,32,yt),new xt(8,16,128,128,yt),new xt(8,32,128,256,yt),new xt(32,128,258,1024,yt),new xt(32,258,258,4096,yt)];function At(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=ot,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(1146),this.dyn_dtree=new Uint16Array(122),this.bl_tree=new Uint16Array(78),dt(this.dyn_ltree),dt(this.dyn_dtree),dt(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(16),this.heap=new Uint16Array(573),dt(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(573),dt(this.depth),this.sym_buf=0,this.lit_bufsize=0,this.sym_next=0,this.sym_end=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const Et=t=>{if(!t)return 1;const e=t.state;return!e||e.strm!==t||42!==e.status&&57!==e.status&&69!==e.status&&73!==e.status&&91!==e.status&&103!==e.status&&113!==e.status&&666!==e.status?1:0},Rt=t=>{if(Et(t))return lt(t,Q);t.total_in=t.total_out=0,t.data_type=rt;const e=t.state;return e.pending=0,e.pending_out=0,e.wrap<0&&(e.wrap=-e.wrap),e.status=2===e.wrap?57:e.wrap?42:113,t.adler=2===e.wrap?0:1,e.last_flush=-2,C(e),q},Zt=t=>{const e=Rt(t);var a;return e===q&&((a=t.state).window_size=2*a.w_size,dt(a.head),a.max_lazy_match=zt[a.level].max_lazy,a.good_match=zt[a.level].good_length,a.nice_match=zt[a.level].nice_length,a.max_chain_length=zt[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=2,a.match_available=0,a.ins_h=0),e},Ut=(t,e,a,i,n,s)=>{if(!t)return Q;let r=1;if(e===tt&&(e=6),i<0?(r=0,i=-i):i>15&&(r=2,i-=16),n<1||n>9||a!==ot||i<8||i>15||e<0||e>9||s<0||s>nt||8===i&&1!==r)return lt(t,Q);8===i&&(i=9);const o=new At;return t.state=o,o.strm=t,o.status=42,o.wrap=r,o.gzhead=null,o.w_bits=i,o.w_size=1<<o.w_bits,o.w_mask=o.w_size-1,o.hash_bits=n+7,o.hash_size=1<<o.hash_bits,o.hash_mask=o.hash_size-1,o.hash_shift=~~((o.hash_bits+3-1)/3),o.window=new Uint8Array(2*o.w_size),o.head=new Uint16Array(o.hash_size),o.prev=new Uint16Array(o.w_size),o.lit_bufsize=1<<n+6,o.pending_buf_size=4*o.lit_bufsize,o.pending_buf=new Uint8Array(o.pending_buf_size),o.sym_buf=o.lit_bufsize,o.sym_end=3*(o.lit_bufsize-1),o.level=e,o.strategy=s,o.method=a,Zt(t)};var St={deflateInit:(t,e)=>Ut(t,e,ot,15,8,st),deflateInit2:Ut,deflateReset:Zt,deflateResetKeep:Rt,deflateSetHeader:(t,e)=>Et(t)||2!==t.state.wrap?Q:(t.state.gzhead=e,q),deflate:(t,e)=>{if(Et(t)||e>W||e<0)return t?lt(t,Q):Q;const a=t.state;if(!t.output||0!==t.avail_in&&!t.input||666===a.status&&e!==X)return lt(t,0===t.avail_out?$:Q);const i=a.last_flush;if(a.last_flush=e,0!==a.pending){if(ct(t),0===t.avail_out)return a.last_flush=-1,q}else if(0===t.avail_in&&ht(e)<=ht(i)&&e!==X)return lt(t,$);if(666===a.status&&0!==t.avail_in)return lt(t,$);if(42===a.status&&0===a.wrap&&(a.status=113),42===a.status){let e=ot+(a.w_bits-8<<4)<<8,i=-1;if(i=a.strategy>=at||a.level<2?0:a.level<6?1:6===a.level?2:3,e|=i<<6,0!==a.strstart&&(e|=32),e+=31-e%31,mt(a,e),0!==a.strstart&&(mt(a,t.adler>>>16),mt(a,65535&t.adler)),t.adler=1,a.status=113,ct(t),0!==a.pending)return a.last_flush=-1,q}if(57===a.status)if(t.adler=0,wt(a,31),wt(a,139),wt(a,8),a.gzhead)wt(a,(a.gzhead.text?1:0)+(a.gzhead.hcrc?2:0)+(a.gzhead.extra?4:0)+(a.gzhead.name?8:0)+(a.gzhead.comment?16:0)),wt(a,255&a.gzhead.time),wt(a,a.gzhead.time>>8&255),wt(a,a.gzhead.time>>16&255),wt(a,a.gzhead.time>>24&255),wt(a,9===a.level?2:a.strategy>=at||a.level<2?4:0),wt(a,255&a.gzhead.os),a.gzhead.extra&&a.gzhead.extra.length&&(wt(a,255&a.gzhead.extra.length),wt(a,a.gzhead.extra.length>>8&255)),a.gzhead.hcrc&&(t.adler=N(t.adler,a.pending_buf,a.pending,0)),a.gzindex=0,a.status=69;else if(wt(a,0),wt(a,0),wt(a,0),wt(a,0),wt(a,0),wt(a,9===a.level?2:a.strategy>=at||a.level<2?4:0),wt(a,3),a.status=113,ct(t),0!==a.pending)return a.last_flush=-1,q;if(69===a.status){if(a.gzhead.extra){let e=a.pending,i=(65535&a.gzhead.extra.length)-a.gzindex;for(;a.pending+i>a.pending_buf_size;){let n=a.pending_buf_size-a.pending;if(a.pending_buf.set(a.gzhead.extra.subarray(a.gzindex,a.gzindex+n),a.pending),a.pending=a.pending_buf_size,a.gzhead.hcrc&&a.pending>e&&(t.adler=N(t.adler,a.pending_buf,a.pending-e,e)),a.gzindex+=n,ct(t),0!==a.pending)return a.last_flush=-1,q;e=0,i-=n}let n=new Uint8Array(a.gzhead.extra);a.pending_buf.set(n.subarray(a.gzindex,a.gzindex+i),a.pending),a.pending+=i,a.gzhead.hcrc&&a.pending>e&&(t.adler=N(t.adler,a.pending_buf,a.pending-e,e)),a.gzindex=0}a.status=73}if(73===a.status){if(a.gzhead.name){let e,i=a.pending;do{if(a.pending===a.pending_buf_size){if(a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i)),ct(t),0!==a.pending)return a.last_flush=-1,q;i=0}e=a.gzindex<a.gzhead.name.length?255&a.gzhead.name.charCodeAt(a.gzindex++):0,wt(a,e)}while(0!==e);a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i)),a.gzindex=0}a.status=91}if(91===a.status){if(a.gzhead.comment){let e,i=a.pending;do{if(a.pending===a.pending_buf_size){if(a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i)),ct(t),0!==a.pending)return a.last_flush=-1,q;i=0}e=a.gzindex<a.gzhead.comment.length?255&a.gzhead.comment.charCodeAt(a.gzindex++):0,wt(a,e)}while(0!==e);a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i))}a.status=103}if(103===a.status){if(a.gzhead.hcrc){if(a.pending+2>a.pending_buf_size&&(ct(t),0!==a.pending))return a.last_flush=-1,q;wt(a,255&t.adler),wt(a,t.adler>>8&255),t.adler=0}if(a.status=113,ct(t),0!==a.pending)return a.last_flush=-1,q}if(0!==t.avail_in||0!==a.lookahead||e!==P&&666!==a.status){let i=0===a.level?kt(a,e):a.strategy===at?((t,e)=>{let a;for(;;){if(0===t.lookahead&&(pt(t),0===t.lookahead)){if(e===P)return 1;break}if(t.match_length=0,a=j(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,a&&(ut(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2})(a,e):a.strategy===it?((t,e)=>{let a,i,n,s;const r=t.window;for(;;){if(t.lookahead<=258){if(pt(t),t.lookahead<=258&&e===P)return 1;if(0===t.lookahead)break}if(t.match_length=0,t.lookahead>=3&&t.strstart>0&&(n=t.strstart-1,i=r[n],i===r[++n]&&i===r[++n]&&i===r[++n])){s=t.strstart+258;do{}while(i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&n<s);t.match_length=258-(s-n),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=3?(a=j(t,1,t.match_length-3),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(a=j(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),a&&(ut(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2})(a,e):zt[a.level].func(a,e);if(3!==i&&4!==i||(a.status=666),1===i||3===i)return 0===t.avail_out&&(a.last_flush=-1),q;if(2===i&&(e===Y?K(a):e!==W&&(H(a,0,0,!1),e===G&&(dt(a.head),0===a.lookahead&&(a.strstart=0,a.block_start=0,a.insert=0))),ct(t),0===t.avail_out))return a.last_flush=-1,q}return e!==X?q:a.wrap<=0?J:(2===a.wrap?(wt(a,255&t.adler),wt(a,t.adler>>8&255),wt(a,t.adler>>16&255),wt(a,t.adler>>24&255),wt(a,255&t.total_in),wt(a,t.total_in>>8&255),wt(a,t.total_in>>16&255),wt(a,t.total_in>>24&255)):(mt(a,t.adler>>>16),mt(a,65535&t.adler)),ct(t),a.wrap>0&&(a.wrap=-a.wrap),0!==a.pending?q:J)},deflateEnd:t=>{if(Et(t))return Q;const e=t.state.status;return t.state=null,113===e?lt(t,V):q},deflateSetDictionary:(t,e)=>{let a=e.length;if(Et(t))return Q;const i=t.state,n=i.wrap;if(2===n||1===n&&42!==i.status||i.lookahead)return Q;if(1===n&&(t.adler=F(t.adler,e,a,0)),i.wrap=0,a>=i.w_size){0===n&&(dt(i.head),i.strstart=0,i.block_start=0,i.insert=0);let t=new Uint8Array(i.w_size);t.set(e.subarray(a-i.w_size,a),0),e=t,a=i.w_size}const s=t.avail_in,r=t.next_in,o=t.input;for(t.avail_in=a,t.next_in=0,t.input=e,pt(i);i.lookahead>=3;){let t=i.strstart,e=i.lookahead-2;do{i.ins_h=ft(i,i.ins_h,i.window[t+3-1]),i.prev[t&i.w_mask]=i.head[i.ins_h],i.head[i.ins_h]=t,t++}while(--e);i.strstart=t,i.lookahead=2,pt(i)}return i.strstart+=i.lookahead,i.block_start=i.strstart,i.insert=i.lookahead,i.lookahead=0,i.match_length=i.prev_length=2,i.match_available=0,t.next_in=r,t.input=o,t.avail_in=s,i.wrap=n,q},deflateInfo:\"pako deflate (from Nodeca project)\"};const Dt=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var Tt=function(t){const e=Array.prototype.slice.call(arguments,1);for(;e.length;){const a=e.shift();if(a){if(\"object\"!=typeof a)throw new TypeError(a+\"must be non-object\");for(const e in a)Dt(a,e)&&(t[e]=a[e])}}return t},Ot=t=>{let e=0;for(let a=0,i=t.length;a<i;a++)e+=t[a].length;const a=new Uint8Array(e);for(let e=0,i=0,n=t.length;e<n;e++){let n=t[e];a.set(n,i),i+=n.length}return a};let Ft=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(t){Ft=!1}const Lt=new Uint8Array(256);for(let t=0;t<256;t++)Lt[t]=t>=252?6:t>=248?5:t>=240?4:t>=224?3:t>=192?2:1;Lt[254]=Lt[254]=1;var Nt=t=>{if(\"function\"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(t);let e,a,i,n,s,r=t.length,o=0;for(n=0;n<r;n++)a=t.charCodeAt(n),55296==(64512&a)&&n+1<r&&(i=t.charCodeAt(n+1),56320==(64512&i)&&(a=65536+(a-55296<<10)+(i-56320),n++)),o+=a<128?1:a<2048?2:a<65536?3:4;for(e=new Uint8Array(o),s=0,n=0;s<o;n++)a=t.charCodeAt(n),55296==(64512&a)&&n+1<r&&(i=t.charCodeAt(n+1),56320==(64512&i)&&(a=65536+(a-55296<<10)+(i-56320),n++)),a<128?e[s++]=a:a<2048?(e[s++]=192|a>>>6,e[s++]=128|63&a):a<65536?(e[s++]=224|a>>>12,e[s++]=128|a>>>6&63,e[s++]=128|63&a):(e[s++]=240|a>>>18,e[s++]=128|a>>>12&63,e[s++]=128|a>>>6&63,e[s++]=128|63&a);return e},It=(t,e)=>{const a=e||t.length;if(\"function\"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(t.subarray(0,e));let i,n;const s=new Array(2*a);for(n=0,i=0;i<a;){let e=t[i++];if(e<128){s[n++]=e;continue}let r=Lt[e];if(r>4)s[n++]=65533,i+=r-1;else{for(e&=2===r?31:3===r?15:7;r>1&&i<a;)e=e<<6|63&t[i++],r--;r>1?s[n++]=65533:e<65536?s[n++]=e:(e-=65536,s[n++]=55296|e>>10&1023,s[n++]=56320|1023&e)}}return((t,e)=>{if(e<65534&&t.subarray&&Ft)return String.fromCharCode.apply(null,t.length===e?t:t.subarray(0,e));let a=\"\";for(let i=0;i<e;i++)a+=String.fromCharCode(t[i]);return a})(s,n)},Bt=(t,e)=>{(e=e||t.length)>t.length&&(e=t.length);let a=e-1;for(;a>=0&&128==(192&t[a]);)a--;return a<0||0===a?e:a+Lt[t[a]]>e?a:e};var Ct=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0};const Ht=Object.prototype.toString,{Z_NO_FLUSH:Mt,Z_SYNC_FLUSH:jt,Z_FULL_FLUSH:Kt,Z_FINISH:Pt,Z_OK:Yt,Z_STREAM_END:Gt,Z_DEFAULT_COMPRESSION:Xt,Z_DEFAULT_STRATEGY:Wt,Z_DEFLATED:qt}=B;function Jt(t){this.options=Tt({level:Xt,method:qt,chunkSize:16384,windowBits:15,memLevel:8,strategy:Wt},t||{});let e=this.options;e.raw&&e.windowBits>0?e.windowBits=-e.windowBits:e.gzip&&e.windowBits>0&&e.windowBits<16&&(e.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new Ct,this.strm.avail_out=0;let a=St.deflateInit2(this.strm,e.level,e.method,e.windowBits,e.memLevel,e.strategy);if(a!==Yt)throw new Error(I[a]);if(e.header&&St.deflateSetHeader(this.strm,e.header),e.dictionary){let t;if(t=\"string\"==typeof e.dictionary?Nt(e.dictionary):\"[object ArrayBuffer]\"===Ht.call(e.dictionary)?new Uint8Array(e.dictionary):e.dictionary,a=St.deflateSetDictionary(this.strm,t),a!==Yt)throw new Error(I[a]);this._dict_set=!0}}function Qt(t,e){const a=new Jt(e);if(a.push(t,!0),a.err)throw a.msg||I[a.err];return a.result}Jt.prototype.push=function(t,e){const a=this.strm,i=this.options.chunkSize;let n,s;if(this.ended)return!1;for(s=e===~~e?e:!0===e?Pt:Mt,\"string\"==typeof t?a.input=Nt(t):\"[object ArrayBuffer]\"===Ht.call(t)?a.input=new Uint8Array(t):a.input=t,a.next_in=0,a.avail_in=a.input.length;;)if(0===a.avail_out&&(a.output=new Uint8Array(i),a.next_out=0,a.avail_out=i),(s===jt||s===Kt)&&a.avail_out<=6)this.onData(a.output.subarray(0,a.next_out)),a.avail_out=0;else{if(n=St.deflate(a,s),n===Gt)return a.next_out>0&&this.onData(a.output.subarray(0,a.next_out)),n=St.deflateEnd(this.strm),this.onEnd(n),this.ended=!0,n===Yt;if(0!==a.avail_out){if(s>0&&a.next_out>0)this.onData(a.output.subarray(0,a.next_out)),a.avail_out=0;else if(0===a.avail_in)break}else this.onData(a.output)}return!0},Jt.prototype.onData=function(t){this.chunks.push(t)},Jt.prototype.onEnd=function(t){t===Yt&&(this.result=Ot(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};var Vt={Deflate:Jt,deflate:Qt,deflateRaw:function(t,e){return(e=e||{}).raw=!0,Qt(t,e)},gzip:function(t,e){return(e=e||{}).gzip=!0,Qt(t,e)},constants:B};var $t=function(t,e){let a,i,n,s,r,o,l,h,d,_,f,c,u,w,m,b,g,p,k,v,y,x,z,A;const E=t.state;a=t.next_in,z=t.input,i=a+(t.avail_in-5),n=t.next_out,A=t.output,s=n-(e-t.avail_out),r=n+(t.avail_out-257),o=E.dmax,l=E.wsize,h=E.whave,d=E.wnext,_=E.window,f=E.hold,c=E.bits,u=E.lencode,w=E.distcode,m=(1<<E.lenbits)-1,b=(1<<E.distbits)-1;t:do{c<15&&(f+=z[a++]<<c,c+=8,f+=z[a++]<<c,c+=8),g=u[f&m];e:for(;;){if(p=g>>>24,f>>>=p,c-=p,p=g>>>16&255,0===p)A[n++]=65535&g;else{if(!(16&p)){if(0==(64&p)){g=u[(65535&g)+(f&(1<<p)-1)];continue e}if(32&p){E.mode=16191;break t}t.msg=\"invalid literal/length code\",E.mode=16209;break t}k=65535&g,p&=15,p&&(c<p&&(f+=z[a++]<<c,c+=8),k+=f&(1<<p)-1,f>>>=p,c-=p),c<15&&(f+=z[a++]<<c,c+=8,f+=z[a++]<<c,c+=8),g=w[f&b];a:for(;;){if(p=g>>>24,f>>>=p,c-=p,p=g>>>16&255,!(16&p)){if(0==(64&p)){g=w[(65535&g)+(f&(1<<p)-1)];continue a}t.msg=\"invalid distance code\",E.mode=16209;break t}if(v=65535&g,p&=15,c<p&&(f+=z[a++]<<c,c+=8,c<p&&(f+=z[a++]<<c,c+=8)),v+=f&(1<<p)-1,v>o){t.msg=\"invalid distance too far back\",E.mode=16209;break t}if(f>>>=p,c-=p,p=n-s,v>p){if(p=v-p,p>h&&E.sane){t.msg=\"invalid distance too far back\",E.mode=16209;break t}if(y=0,x=_,0===d){if(y+=l-p,p<k){k-=p;do{A[n++]=_[y++]}while(--p);y=n-v,x=A}}else if(d<p){if(y+=l+d-p,p-=d,p<k){k-=p;do{A[n++]=_[y++]}while(--p);if(y=0,d<k){p=d,k-=p;do{A[n++]=_[y++]}while(--p);y=n-v,x=A}}}else if(y+=d-p,p<k){k-=p;do{A[n++]=_[y++]}while(--p);y=n-v,x=A}for(;k>2;)A[n++]=x[y++],A[n++]=x[y++],A[n++]=x[y++],k-=3;k&&(A[n++]=x[y++],k>1&&(A[n++]=x[y++]))}else{y=n-v;do{A[n++]=A[y++],A[n++]=A[y++],A[n++]=A[y++],k-=3}while(k>2);k&&(A[n++]=A[y++],k>1&&(A[n++]=A[y++]))}break}}break}}while(a<i&&n<r);k=c>>3,a-=k,c-=k<<3,f&=(1<<c)-1,t.next_in=a,t.next_out=n,t.avail_in=a<i?i-a+5:5-(a-i),t.avail_out=n<r?r-n+257:257-(n-r),E.hold=f,E.bits=c};const te=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),ee=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),ae=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),ie=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var ne=(t,e,a,i,n,s,r,o)=>{const l=o.bits;let h,d,_,f,c,u,w=0,m=0,b=0,g=0,p=0,k=0,v=0,y=0,x=0,z=0,A=null;const E=new Uint16Array(16),R=new Uint16Array(16);let Z,U,S,D=null;for(w=0;w<=15;w++)E[w]=0;for(m=0;m<i;m++)E[e[a+m]]++;for(p=l,g=15;g>=1&&0===E[g];g--);if(p>g&&(p=g),0===g)return n[s++]=20971520,n[s++]=20971520,o.bits=1,0;for(b=1;b<g&&0===E[b];b++);for(p<b&&(p=b),y=1,w=1;w<=15;w++)if(y<<=1,y-=E[w],y<0)return-1;if(y>0&&(0===t||1!==g))return-1;for(R[1]=0,w=1;w<15;w++)R[w+1]=R[w]+E[w];for(m=0;m<i;m++)0!==e[a+m]&&(r[R[e[a+m]]++]=m);if(0===t?(A=D=r,u=20):1===t?(A=te,D=ee,u=257):(A=ae,D=ie,u=0),z=0,m=0,w=b,c=s,k=p,v=0,_=-1,x=1<<p,f=x-1,1===t&&x>852||2===t&&x>592)return 1;for(;;){Z=w-v,r[m]+1<u?(U=0,S=r[m]):r[m]>=u?(U=D[r[m]-u],S=A[r[m]-u]):(U=96,S=0),h=1<<w-v,d=1<<k,b=d;do{d-=h,n[c+(z>>v)+d]=Z<<24|U<<16|S|0}while(0!==d);for(h=1<<w-1;z&h;)h>>=1;if(0!==h?(z&=h-1,z+=h):z=0,m++,0==--E[w]){if(w===g)break;w=e[a+r[m]]}if(w>p&&(z&f)!==_){for(0===v&&(v=p),c+=b,k=w-v,y=1<<k;k+v<g&&(y-=E[k+v],!(y<=0));)k++,y<<=1;if(x+=1<<k,1===t&&x>852||2===t&&x>592)return 1;_=z&f,n[_]=p<<24|k<<16|c-s|0}}return 0!==z&&(n[c+z]=w-v<<24|64<<16|0),o.bits=p,0};const{Z_FINISH:se,Z_BLOCK:re,Z_TREES:oe,Z_OK:le,Z_STREAM_END:he,Z_NEED_DICT:de,Z_STREAM_ERROR:_e,Z_DATA_ERROR:fe,Z_MEM_ERROR:ce,Z_BUF_ERROR:ue,Z_DEFLATED:we}=B,me=16209,be=t=>(t>>>24&255)+(t>>>8&65280)+((65280&t)<<8)+((255&t)<<24);function ge(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const pe=t=>{if(!t)return 1;const e=t.state;return!e||e.strm!==t||e.mode<16180||e.mode>16211?1:0},ke=t=>{if(pe(t))return _e;const e=t.state;return t.total_in=t.total_out=e.total=0,t.msg=\"\",e.wrap&&(t.adler=1&e.wrap),e.mode=16180,e.last=0,e.havedict=0,e.flags=-1,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new Int32Array(852),e.distcode=e.distdyn=new Int32Array(592),e.sane=1,e.back=-1,le},ve=t=>{if(pe(t))return _e;const e=t.state;return e.wsize=0,e.whave=0,e.wnext=0,ke(t)},ye=(t,e)=>{let a;if(pe(t))return _e;const i=t.state;return e<0?(a=0,e=-e):(a=5+(e>>4),e<48&&(e&=15)),e&&(e<8||e>15)?_e:(null!==i.window&&i.wbits!==e&&(i.window=null),i.wrap=a,i.wbits=e,ve(t))},xe=(t,e)=>{if(!t)return _e;const a=new ge;t.state=a,a.strm=t,a.window=null,a.mode=16180;const i=ye(t,e);return i!==le&&(t.state=null),i};let ze,Ae,Ee=!0;const Re=t=>{if(Ee){ze=new Int32Array(512),Ae=new Int32Array(32);let e=0;for(;e<144;)t.lens[e++]=8;for(;e<256;)t.lens[e++]=9;for(;e<280;)t.lens[e++]=7;for(;e<288;)t.lens[e++]=8;for(ne(1,t.lens,0,288,ze,0,t.work,{bits:9}),e=0;e<32;)t.lens[e++]=5;ne(2,t.lens,0,32,Ae,0,t.work,{bits:5}),Ee=!1}t.lencode=ze,t.lenbits=9,t.distcode=Ae,t.distbits=5},Ze=(t,e,a,i)=>{let n;const s=t.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new Uint8Array(s.wsize)),i>=s.wsize?(s.window.set(e.subarray(a-s.wsize,a),0),s.wnext=0,s.whave=s.wsize):(n=s.wsize-s.wnext,n>i&&(n=i),s.window.set(e.subarray(a-i,a-i+n),s.wnext),(i-=n)?(s.window.set(e.subarray(a-i,a),0),s.wnext=i,s.whave=s.wsize):(s.wnext+=n,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=n))),0};var Ue={inflateReset:ve,inflateReset2:ye,inflateResetKeep:ke,inflateInit:t=>xe(t,15),inflateInit2:xe,inflate:(t,e)=>{let a,i,n,s,r,o,l,h,d,_,f,c,u,w,m,b,g,p,k,v,y,x,z=0;const A=new Uint8Array(4);let E,R;const Z=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(pe(t)||!t.output||!t.input&&0!==t.avail_in)return _e;a=t.state,16191===a.mode&&(a.mode=16192),r=t.next_out,n=t.output,l=t.avail_out,s=t.next_in,i=t.input,o=t.avail_in,h=a.hold,d=a.bits,_=o,f=l,x=le;t:for(;;)switch(a.mode){case 16180:if(0===a.wrap){a.mode=16192;break}for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(2&a.wrap&&35615===h){0===a.wbits&&(a.wbits=15),a.check=0,A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0),h=0,d=0,a.mode=16181;break}if(a.head&&(a.head.done=!1),!(1&a.wrap)||(((255&h)<<8)+(h>>8))%31){t.msg=\"incorrect header check\",a.mode=me;break}if((15&h)!==we){t.msg=\"unknown compression method\",a.mode=me;break}if(h>>>=4,d-=4,y=8+(15&h),0===a.wbits&&(a.wbits=y),y>15||y>a.wbits){t.msg=\"invalid window size\",a.mode=me;break}a.dmax=1<<a.wbits,a.flags=0,t.adler=a.check=1,a.mode=512&h?16189:16191,h=0,d=0;break;case 16181:for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(a.flags=h,(255&a.flags)!==we){t.msg=\"unknown compression method\",a.mode=me;break}if(57344&a.flags){t.msg=\"unknown header flags set\",a.mode=me;break}a.head&&(a.head.text=h>>8&1),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0)),h=0,d=0,a.mode=16182;case 16182:for(;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.head&&(a.head.time=h),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,A[2]=h>>>16&255,A[3]=h>>>24&255,a.check=N(a.check,A,4,0)),h=0,d=0,a.mode=16183;case 16183:for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.head&&(a.head.xflags=255&h,a.head.os=h>>8),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0)),h=0,d=0,a.mode=16184;case 16184:if(1024&a.flags){for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.length=h,a.head&&(a.head.extra_len=h),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0)),h=0,d=0}else a.head&&(a.head.extra=null);a.mode=16185;case 16185:if(1024&a.flags&&(c=a.length,c>o&&(c=o),c&&(a.head&&(y=a.head.extra_len-a.length,a.head.extra||(a.head.extra=new Uint8Array(a.head.extra_len)),a.head.extra.set(i.subarray(s,s+c),y)),512&a.flags&&4&a.wrap&&(a.check=N(a.check,i,c,s)),o-=c,s+=c,a.length-=c),a.length))break t;a.length=0,a.mode=16186;case 16186:if(2048&a.flags){if(0===o)break t;c=0;do{y=i[s+c++],a.head&&y&&a.length<65536&&(a.head.name+=String.fromCharCode(y))}while(y&&c<o);if(512&a.flags&&4&a.wrap&&(a.check=N(a.check,i,c,s)),o-=c,s+=c,y)break t}else a.head&&(a.head.name=null);a.length=0,a.mode=16187;case 16187:if(4096&a.flags){if(0===o)break t;c=0;do{y=i[s+c++],a.head&&y&&a.length<65536&&(a.head.comment+=String.fromCharCode(y))}while(y&&c<o);if(512&a.flags&&4&a.wrap&&(a.check=N(a.check,i,c,s)),o-=c,s+=c,y)break t}else a.head&&(a.head.comment=null);a.mode=16188;case 16188:if(512&a.flags){for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(4&a.wrap&&h!==(65535&a.check)){t.msg=\"header crc mismatch\",a.mode=me;break}h=0,d=0}a.head&&(a.head.hcrc=a.flags>>9&1,a.head.done=!0),t.adler=a.check=0,a.mode=16191;break;case 16189:for(;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}t.adler=a.check=be(h),h=0,d=0,a.mode=16190;case 16190:if(0===a.havedict)return t.next_out=r,t.avail_out=l,t.next_in=s,t.avail_in=o,a.hold=h,a.bits=d,de;t.adler=a.check=1,a.mode=16191;case 16191:if(e===re||e===oe)break t;case 16192:if(a.last){h>>>=7&d,d-=7&d,a.mode=16206;break}for(;d<3;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}switch(a.last=1&h,h>>>=1,d-=1,3&h){case 0:a.mode=16193;break;case 1:if(Re(a),a.mode=16199,e===oe){h>>>=2,d-=2;break t}break;case 2:a.mode=16196;break;case 3:t.msg=\"invalid block type\",a.mode=me}h>>>=2,d-=2;break;case 16193:for(h>>>=7&d,d-=7&d;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if((65535&h)!=(h>>>16^65535)){t.msg=\"invalid stored block lengths\",a.mode=me;break}if(a.length=65535&h,h=0,d=0,a.mode=16194,e===oe)break t;case 16194:a.mode=16195;case 16195:if(c=a.length,c){if(c>o&&(c=o),c>l&&(c=l),0===c)break t;n.set(i.subarray(s,s+c),r),o-=c,s+=c,l-=c,r+=c,a.length-=c;break}a.mode=16191;break;case 16196:for(;d<14;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(a.nlen=257+(31&h),h>>>=5,d-=5,a.ndist=1+(31&h),h>>>=5,d-=5,a.ncode=4+(15&h),h>>>=4,d-=4,a.nlen>286||a.ndist>30){t.msg=\"too many length or distance symbols\",a.mode=me;break}a.have=0,a.mode=16197;case 16197:for(;a.have<a.ncode;){for(;d<3;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.lens[Z[a.have++]]=7&h,h>>>=3,d-=3}for(;a.have<19;)a.lens[Z[a.have++]]=0;if(a.lencode=a.lendyn,a.lenbits=7,E={bits:a.lenbits},x=ne(0,a.lens,0,19,a.lencode,0,a.work,E),a.lenbits=E.bits,x){t.msg=\"invalid code lengths set\",a.mode=me;break}a.have=0,a.mode=16198;case 16198:for(;a.have<a.nlen+a.ndist;){for(;z=a.lencode[h&(1<<a.lenbits)-1],m=z>>>24,b=z>>>16&255,g=65535&z,!(m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(g<16)h>>>=m,d-=m,a.lens[a.have++]=g;else{if(16===g){for(R=m+2;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(h>>>=m,d-=m,0===a.have){t.msg=\"invalid bit length repeat\",a.mode=me;break}y=a.lens[a.have-1],c=3+(3&h),h>>>=2,d-=2}else if(17===g){for(R=m+3;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=m,d-=m,y=0,c=3+(7&h),h>>>=3,d-=3}else{for(R=m+7;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=m,d-=m,y=0,c=11+(127&h),h>>>=7,d-=7}if(a.have+c>a.nlen+a.ndist){t.msg=\"invalid bit length repeat\",a.mode=me;break}for(;c--;)a.lens[a.have++]=y}}if(a.mode===me)break;if(0===a.lens[256]){t.msg=\"invalid code -- missing end-of-block\",a.mode=me;break}if(a.lenbits=9,E={bits:a.lenbits},x=ne(1,a.lens,0,a.nlen,a.lencode,0,a.work,E),a.lenbits=E.bits,x){t.msg=\"invalid literal/lengths set\",a.mode=me;break}if(a.distbits=6,a.distcode=a.distdyn,E={bits:a.distbits},x=ne(2,a.lens,a.nlen,a.ndist,a.distcode,0,a.work,E),a.distbits=E.bits,x){t.msg=\"invalid distances set\",a.mode=me;break}if(a.mode=16199,e===oe)break t;case 16199:a.mode=16200;case 16200:if(o>=6&&l>=258){t.next_out=r,t.avail_out=l,t.next_in=s,t.avail_in=o,a.hold=h,a.bits=d,$t(t,f),r=t.next_out,n=t.output,l=t.avail_out,s=t.next_in,i=t.input,o=t.avail_in,h=a.hold,d=a.bits,16191===a.mode&&(a.back=-1);break}for(a.back=0;z=a.lencode[h&(1<<a.lenbits)-1],m=z>>>24,b=z>>>16&255,g=65535&z,!(m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(b&&0==(240&b)){for(p=m,k=b,v=g;z=a.lencode[v+((h&(1<<p+k)-1)>>p)],m=z>>>24,b=z>>>16&255,g=65535&z,!(p+m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=p,d-=p,a.back+=p}if(h>>>=m,d-=m,a.back+=m,a.length=g,0===b){a.mode=16205;break}if(32&b){a.back=-1,a.mode=16191;break}if(64&b){t.msg=\"invalid literal/length code\",a.mode=me;break}a.extra=15&b,a.mode=16201;case 16201:if(a.extra){for(R=a.extra;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.length+=h&(1<<a.extra)-1,h>>>=a.extra,d-=a.extra,a.back+=a.extra}a.was=a.length,a.mode=16202;case 16202:for(;z=a.distcode[h&(1<<a.distbits)-1],m=z>>>24,b=z>>>16&255,g=65535&z,!(m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(0==(240&b)){for(p=m,k=b,v=g;z=a.distcode[v+((h&(1<<p+k)-1)>>p)],m=z>>>24,b=z>>>16&255,g=65535&z,!(p+m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=p,d-=p,a.back+=p}if(h>>>=m,d-=m,a.back+=m,64&b){t.msg=\"invalid distance code\",a.mode=me;break}a.offset=g,a.extra=15&b,a.mode=16203;case 16203:if(a.extra){for(R=a.extra;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.offset+=h&(1<<a.extra)-1,h>>>=a.extra,d-=a.extra,a.back+=a.extra}if(a.offset>a.dmax){t.msg=\"invalid distance too far back\",a.mode=me;break}a.mode=16204;case 16204:if(0===l)break t;if(c=f-l,a.offset>c){if(c=a.offset-c,c>a.whave&&a.sane){t.msg=\"invalid distance too far back\",a.mode=me;break}c>a.wnext?(c-=a.wnext,u=a.wsize-c):u=a.wnext-c,c>a.length&&(c=a.length),w=a.window}else w=n,u=r-a.offset,c=a.length;c>l&&(c=l),l-=c,a.length-=c;do{n[r++]=w[u++]}while(--c);0===a.length&&(a.mode=16200);break;case 16205:if(0===l)break t;n[r++]=a.length,l--,a.mode=16200;break;case 16206:if(a.wrap){for(;d<32;){if(0===o)break t;o--,h|=i[s++]<<d,d+=8}if(f-=l,t.total_out+=f,a.total+=f,4&a.wrap&&f&&(t.adler=a.check=a.flags?N(a.check,n,f,r-f):F(a.check,n,f,r-f)),f=l,4&a.wrap&&(a.flags?h:be(h))!==a.check){t.msg=\"incorrect data check\",a.mode=me;break}h=0,d=0}a.mode=16207;case 16207:if(a.wrap&&a.flags){for(;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(4&a.wrap&&h!==(4294967295&a.total)){t.msg=\"incorrect length check\",a.mode=me;break}h=0,d=0}a.mode=16208;case 16208:x=he;break t;case me:x=fe;break t;case 16210:return ce;default:return _e}return t.next_out=r,t.avail_out=l,t.next_in=s,t.avail_in=o,a.hold=h,a.bits=d,(a.wsize||f!==t.avail_out&&a.mode<me&&(a.mode<16206||e!==se))&&Ze(t,t.output,t.next_out,f-t.avail_out),_-=t.avail_in,f-=t.avail_out,t.total_in+=_,t.total_out+=f,a.total+=f,4&a.wrap&&f&&(t.adler=a.check=a.flags?N(a.check,n,f,t.next_out-f):F(a.check,n,f,t.next_out-f)),t.data_type=a.bits+(a.last?64:0)+(16191===a.mode?128:0)+(16199===a.mode||16194===a.mode?256:0),(0===_&&0===f||e===se)&&x===le&&(x=ue),x},inflateEnd:t=>{if(pe(t))return _e;let e=t.state;return e.window&&(e.window=null),t.state=null,le},inflateGetHeader:(t,e)=>{if(pe(t))return _e;const a=t.state;return 0==(2&a.wrap)?_e:(a.head=e,e.done=!1,le)},inflateSetDictionary:(t,e)=>{const a=e.length;let i,n,s;return pe(t)?_e:(i=t.state,0!==i.wrap&&16190!==i.mode?_e:16190===i.mode&&(n=1,n=F(n,e,a,0),n!==i.check)?fe:(s=Ze(t,e,a,a),s?(i.mode=16210,ce):(i.havedict=1,le)))},inflateInfo:\"pako inflate (from Nodeca project)\"};var Se=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1};const De=Object.prototype.toString,{Z_NO_FLUSH:Te,Z_FINISH:Oe,Z_OK:Fe,Z_STREAM_END:Le,Z_NEED_DICT:Ne,Z_STREAM_ERROR:Ie,Z_DATA_ERROR:Be,Z_MEM_ERROR:Ce}=B;function He(t){this.options=Tt({chunkSize:65536,windowBits:15,to:\"\"},t||{});const e=this.options;e.raw&&e.windowBits>=0&&e.windowBits<16&&(e.windowBits=-e.windowBits,0===e.windowBits&&(e.windowBits=-15)),!(e.windowBits>=0&&e.windowBits<16)||t&&t.windowBits||(e.windowBits+=32),e.windowBits>15&&e.windowBits<48&&0==(15&e.windowBits)&&(e.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new Ct,this.strm.avail_out=0;let a=Ue.inflateInit2(this.strm,e.windowBits);if(a!==Fe)throw new Error(I[a]);if(this.header=new Se,Ue.inflateGetHeader(this.strm,this.header),e.dictionary&&(\"string\"==typeof e.dictionary?e.dictionary=Nt(e.dictionary):\"[object ArrayBuffer]\"===De.call(e.dictionary)&&(e.dictionary=new Uint8Array(e.dictionary)),e.raw&&(a=Ue.inflateSetDictionary(this.strm,e.dictionary),a!==Fe)))throw new Error(I[a])}He.prototype.push=function(t,e){const a=this.strm,i=this.options.chunkSize,n=this.options.dictionary;let s,r,o;if(this.ended)return!1;for(r=e===~~e?e:!0===e?Oe:Te,\"[object ArrayBuffer]\"===De.call(t)?a.input=new Uint8Array(t):a.input=t,a.next_in=0,a.avail_in=a.input.length;;){for(0===a.avail_out&&(a.output=new Uint8Array(i),a.next_out=0,a.avail_out=i),s=Ue.inflate(a,r),s===Ne&&n&&(s=Ue.inflateSetDictionary(a,n),s===Fe?s=Ue.inflate(a,r):s===Be&&(s=Ne));a.avail_in>0&&s===Le&&a.state.wrap>0&&0!==t[a.next_in];)Ue.inflateReset(a),s=Ue.inflate(a,r);switch(s){case Ie:case Be:case Ne:case Ce:return this.onEnd(s),this.ended=!0,!1}if(o=a.avail_out,a.next_out&&(0===a.avail_out||s===Le))if(\"string\"===this.options.to){let t=Bt(a.output,a.next_out),e=a.next_out-t,n=It(a.output,t);a.next_out=e,a.avail_out=i-e,e&&a.output.set(a.output.subarray(t,t+e),0),this.onData(n)}else this.onData(a.output.length===a.next_out?a.output:a.output.subarray(0,a.next_out));if(s!==Fe||0!==o){if(s===Le)return s=Ue.inflateEnd(this.strm),this.onEnd(s),this.ended=!0,!0;if(0===a.avail_in)break}}return!0},He.prototype.onData=function(t){this.chunks.push(t)},He.prototype.onEnd=function(t){t===Fe&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=Ot(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};const{Deflate:Me,deflate:je,deflateRaw:Ke,gzip:Pe}=Vt;var Ye=Me,Ge=je,Xe=B;const We=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error(\"Adding invalid event\");const e=this._hasEvents?\",\":\"\";this.deflate.push(e+t,Xe.Z_SYNC_FLUSH),this._hasEvents=!0}finish(){if(this.deflate.push(\"]\",Xe.Z_FINISH),this.deflate.err)throw this.deflate.err;const t=this.deflate.result;return this._init(),t}_init(){this._hasEvents=!1,this.deflate=new Ye,this.deflate.push(\"[\",Xe.Z_NO_FLUSH)}},qe={clear:()=>{We.clear()},addEvent:t=>We.addEvent(t),finish:()=>We.finish(),compress:t=>function(t){return Ge(t)}(t)};addEventListener(\"message\",(function(t){const e=t.data.method,a=t.data.id,i=t.data.arg;if(e in qe&&\"function\"==typeof qe[e])try{const t=qe[e](i);postMessage({id:a,method:e,success:!0,response:t})}catch(t){postMessage({id:a,method:e,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:\"init\",success:!0,response:void 0});`;\n\nfunction e(){const e=new Blob([r]);return URL.createObjectURL(e)}\n\n/** This error indicates that the event buffer size exceeded the limit.. */\nclass EventBufferSizeExceededError extends Error {\n   constructor() {\n    super(`Event buffer exceeded maximum size of ${REPLAY_MAX_EVENT_BUFFER_SIZE}.`);\n  }\n}\n\n/**\n * A basic event buffer that does not do any compression.\n * Used as fallback if the compression worker cannot be loaded or is disabled.\n */\nclass EventBufferArray  {\n  /** All the events that are buffered to be sent. */\n\n   __init() {this._totalSize = 0;}\n\n   constructor() {EventBufferArray.prototype.__init.call(this);\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n   get hasEvents() {\n    return this.events.length > 0;\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return 'sync';\n  }\n\n  /** @inheritdoc */\n   destroy() {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n   async addEvent(event) {\n    const eventSize = JSON.stringify(event).length;\n    this._totalSize += eventSize;\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      throw new EventBufferSizeExceededError();\n    }\n\n    this.events.push(event);\n  }\n\n  /** @inheritdoc */\n   finish() {\n    return new Promise(resolve => {\n      // Make a copy of the events array reference and immediately clear the\n      // events member so that we do not lose new events while uploading\n      // attachment.\n      const eventsRet = this.events;\n      this.clear();\n      resolve(JSON.stringify(eventsRet));\n    });\n  }\n\n  /** @inheritdoc */\n   clear() {\n    this.events = [];\n    this._totalSize = 0;\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    const timestamp = this.events.map(event => event.timestamp).sort()[0];\n\n    if (!timestamp) {\n      return null;\n    }\n\n    return timestampToMs(timestamp);\n  }\n}\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nclass WorkerHandler {\n\n   constructor(worker) {\n    this._worker = worker;\n    this._id = 0;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n   ensureReady() {\n    // Ensure we only check once\n    if (this._ensureReadyPromise) {\n      return this._ensureReadyPromise;\n    }\n\n    this._ensureReadyPromise = new Promise((resolve, reject) => {\n      this._worker.addEventListener(\n        'message',\n        ({ data }) => {\n          if ((data ).success) {\n            resolve();\n          } else {\n            reject();\n          }\n        },\n        { once: true },\n      );\n\n      this._worker.addEventListener(\n        'error',\n        error => {\n          reject(error);\n        },\n        { once: true },\n      );\n    });\n\n    return this._ensureReadyPromise;\n  }\n\n  /**\n   * Destroy the worker.\n   */\n   destroy() {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Replay] Destroying compression worker');\n    this._worker.terminate();\n  }\n\n  /**\n   * Post message to worker and wait for response before resolving promise.\n   */\n   postMessage(method, arg) {\n    const id = this._getAndIncrementId();\n\n    return new Promise((resolve, reject) => {\n      const listener = ({ data }) => {\n        const response = data ;\n        if (response.method !== method) {\n          return;\n        }\n\n        // There can be multiple listeners for a single method, the id ensures\n        // that the response matches the caller.\n        if (response.id !== id) {\n          return;\n        }\n\n        // At this point, we'll always want to remove listener regardless of result status\n        this._worker.removeEventListener('message', listener);\n\n        if (!response.success) {\n          // TODO: Do some error handling, not sure what\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('[Replay]', response.response);\n\n          reject(new Error('Error in compression worker'));\n          return;\n        }\n\n        resolve(response.response );\n      };\n\n      // Note: we can't use `once` option because it's possible it needs to\n      // listen to multiple messages\n      this._worker.addEventListener('message', listener);\n      this._worker.postMessage({ id, method, arg });\n    });\n  }\n\n  /** Get the current ID and increment it for the next call. */\n   _getAndIncrementId() {\n    return this._id++;\n  }\n}\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nclass EventBufferCompressionWorker  {\n\n   __init() {this._totalSize = 0;}\n\n   constructor(worker) {EventBufferCompressionWorker.prototype.__init.call(this);\n    this._worker = new WorkerHandler(worker);\n    this._earliestTimestamp = null;\n  }\n\n  /** @inheritdoc */\n   get hasEvents() {\n    return !!this._earliestTimestamp;\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return 'worker';\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n   ensureReady() {\n    return this._worker.ensureReady();\n  }\n\n  /**\n   * Destroy the event buffer.\n   */\n   destroy() {\n    this._worker.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfuly received and processed by worker.\n   */\n   addEvent(event) {\n    const timestamp = timestampToMs(event.timestamp);\n    if (!this._earliestTimestamp || timestamp < this._earliestTimestamp) {\n      this._earliestTimestamp = timestamp;\n    }\n\n    const data = JSON.stringify(event);\n    this._totalSize += data.length;\n\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      return Promise.reject(new EventBufferSizeExceededError());\n    }\n\n    return this._sendEventToWorker(data);\n  }\n\n  /**\n   * Finish the event buffer and return the compressed data.\n   */\n   finish() {\n    return this._finishRequest();\n  }\n\n  /** @inheritdoc */\n   clear() {\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    // We do not wait on this, as we assume the order of messages is consistent for the worker\n    void this._worker.postMessage('clear');\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    return this._earliestTimestamp;\n  }\n\n  /**\n   * Send the event to the worker.\n   */\n   _sendEventToWorker(data) {\n    return this._worker.postMessage('addEvent', data);\n  }\n\n  /**\n   * Finish the request and return the compressed data from the worker.\n   */\n   async _finishRequest() {\n    const response = await this._worker.postMessage('finish');\n\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n\n    return response;\n  }\n}\n\n/**\n * This proxy will try to use the compression worker, and fall back to use the simple buffer if an error occurs there.\n * This can happen e.g. if the worker cannot be loaded.\n * Exported only for testing.\n */\nclass EventBufferProxy  {\n\n   constructor(worker) {\n    this._fallback = new EventBufferArray();\n    this._compression = new EventBufferCompressionWorker(worker);\n    this._used = this._fallback;\n\n    this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return this._used.type;\n  }\n\n  /** @inheritDoc */\n   get hasEvents() {\n    return this._used.hasEvents;\n  }\n\n  /** @inheritDoc */\n   destroy() {\n    this._fallback.destroy();\n    this._compression.destroy();\n  }\n\n  /** @inheritdoc */\n   clear() {\n    return this._used.clear();\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    return this._used.getEarliestTimestamp();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully added.\n   */\n   addEvent(event) {\n    return this._used.addEvent(event);\n  }\n\n  /** @inheritDoc */\n   async finish() {\n    // Ensure the worker is loaded, so the sent event is compressed\n    await this.ensureWorkerIsLoaded();\n\n    return this._used.finish();\n  }\n\n  /** Ensure the worker has loaded. */\n   ensureWorkerIsLoaded() {\n    return this._ensureWorkerIsLoadedPromise;\n  }\n\n  /** Actually check if the worker has been loaded. */\n   async _ensureWorkerIsLoaded() {\n    try {\n      await this._compression.ensureReady();\n    } catch (error) {\n      // If the worker fails to load, we fall back to the simple buffer.\n      // Nothing more to do from our side here\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Replay] Failed to load the compression worker, falling back to simple buffer');\n      return;\n    }\n\n    // Now we need to switch over the array buffer to the compression worker\n    await this._switchToCompressionWorker();\n  }\n\n  /** Switch the used buffer to the compression worker. */\n   async _switchToCompressionWorker() {\n    const { events } = this._fallback;\n\n    const addEventPromises = [];\n    for (const event of events) {\n      addEventPromises.push(this._compression.addEvent(event));\n    }\n\n    // We switch over to the new buffer immediately - any further events will be added\n    // after the previously buffered ones\n    this._used = this._compression;\n\n    // Wait for original events to be re-added before resolving\n    try {\n      await Promise.all(addEventPromises);\n    } catch (error) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('[Replay] Failed to add events when switching buffers.', error);\n    }\n  }\n}\n\n/**\n * Create an event buffer for replays.\n */\nfunction createEventBuffer({ useCompression }) {\n  // eslint-disable-next-line no-restricted-globals\n  if (useCompression && window.Worker) {\n    try {\n      const workerUrl = e();\n\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Replay] Using compression worker');\n      const worker = new Worker(workerUrl);\n      return new EventBufferProxy(worker);\n    } catch (error) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Replay] Failed to create compression worker');\n      // Fall back to use simple event buffer array\n    }\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Replay] Using simple buffer');\n  return new EventBufferArray();\n}\n\n/** If sessionStorage is available. */\nfunction hasSessionStorage() {\n  try {\n    // This can throw, e.g. when being accessed in a sandboxed iframe\n    return 'sessionStorage' in WINDOW && !!WINDOW.sessionStorage;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Removes the session from Session Storage and unsets session in replay instance\n */\nfunction clearSession(replay) {\n  deleteSession();\n  replay.session = undefined;\n}\n\n/**\n * Deletes a session from storage\n */\nfunction deleteSession() {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.removeItem(REPLAY_SESSION_KEY);\n  } catch (e) {\n    // Ignore potential SecurityError exceptions\n  }\n}\n\n/**\n * Given an initial timestamp and an expiry duration, checks to see if current\n * time should be considered as expired.\n */\nfunction isExpired(\n  initialTime,\n  expiry,\n  targetTime = +new Date(),\n) {\n  // Always expired if < 0\n  if (initialTime === null || expiry === undefined || expiry < 0) {\n    return true;\n  }\n\n  // Never expires if == 0\n  if (expiry === 0) {\n    return false;\n  }\n\n  return initialTime + expiry <= targetTime;\n}\n\n/**\n * Checks to see if session is expired\n */\nfunction isSessionExpired(session, timeouts, targetTime = +new Date()) {\n  return (\n    // First, check that maximum session length has not been exceeded\n    isExpired(session.started, timeouts.maxSessionLife, targetTime) ||\n    // check that the idle timeout has not been exceeded (i.e. user has\n    // performed an action within the last `sessionIdleExpire` ms)\n    isExpired(session.lastActivity, timeouts.sessionIdleExpire, targetTime)\n  );\n}\n\n/**\n * Given a sample rate, returns true if replay should be sampled.\n *\n * 1.0 = 100% sampling\n * 0.0 = 0% sampling\n */\nfunction isSampled(sampleRate) {\n  if (sampleRate === undefined) {\n    return false;\n  }\n\n  // Math.random() returns a number in range of 0 to 1 (inclusive of 0, but not 1)\n  return Math.random() < sampleRate;\n}\n\n/**\n * Save a session to session storage.\n */\nfunction saveSession(session) {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.setItem(REPLAY_SESSION_KEY, JSON.stringify(session));\n  } catch (e) {\n    // Ignore potential SecurityError exceptions\n  }\n}\n\n/**\n * Get a session with defaults & applied sampling.\n */\nfunction makeSession(session) {\n  const now = Date.now();\n  const id = session.id || uuid4();\n  // Note that this means we cannot set a started/lastActivity of `0`, but this should not be relevant outside of tests.\n  const started = session.started || now;\n  const lastActivity = session.lastActivity || now;\n  const segmentId = session.segmentId || 0;\n  const sampled = session.sampled;\n\n  return {\n    id,\n    started,\n    lastActivity,\n    segmentId,\n    sampled,\n    shouldRefresh: true,\n  };\n}\n\n/**\n * Get the sampled status for a session based on sample rates & current sampled status.\n */\nfunction getSessionSampleType(sessionSampleRate, allowBuffering) {\n  return isSampled(sessionSampleRate) ? 'session' : allowBuffering ? 'buffer' : false;\n}\n\n/**\n * Create a new session, which in its current implementation is a Sentry event\n * that all replays will be saved to as attachments. Currently, we only expect\n * one of these Sentry events per \"replay session\".\n */\nfunction createSession({ sessionSampleRate, allowBuffering, stickySession = false }) {\n  const sampled = getSessionSampleType(sessionSampleRate, allowBuffering);\n  const session = makeSession({\n    sampled,\n  });\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Replay] Creating new session: ${session.id}`);\n\n  if (stickySession) {\n    saveSession(session);\n  }\n\n  return session;\n}\n\n/**\n * Fetches a session from storage\n */\nfunction fetchSession() {\n  if (!hasSessionStorage()) {\n    return null;\n  }\n\n  try {\n    // This can throw if cookies are disabled\n    const sessionStringFromStorage = WINDOW.sessionStorage.getItem(REPLAY_SESSION_KEY);\n\n    if (!sessionStringFromStorage) {\n      return null;\n    }\n\n    const sessionObj = JSON.parse(sessionStringFromStorage) ;\n\n    return makeSession(sessionObj);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Get or create a session\n */\nfunction getSession({\n  timeouts,\n  currentSession,\n  stickySession,\n  sessionSampleRate,\n  allowBuffering,\n}) {\n  // If session exists and is passed, use it instead of always hitting session storage\n  const session = currentSession || (stickySession && fetchSession());\n\n  if (session) {\n    // If there is a session, check if it is valid (e.g. \"last activity\" time\n    // should be within the \"session idle time\", and \"session started\" time is\n    // within \"max session time\").\n    const isExpired = isSessionExpired(session, timeouts);\n\n    if (!isExpired || (allowBuffering && session.shouldRefresh)) {\n      return { type: 'saved', session };\n    } else if (!session.shouldRefresh) {\n      // This is the case if we have an error session that is completed\n      // (=triggered an error). Session will continue as session-based replay,\n      // and when this session is expired, it will not be renewed until user\n      // reloads.\n      const discardedSession = makeSession({ sampled: false });\n      return { type: 'new', session: discardedSession };\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Replay] Session has expired');\n    }\n    // Otherwise continue to create a new session\n  }\n\n  const newSession = createSession({\n    stickySession,\n    sessionSampleRate,\n    allowBuffering,\n  });\n\n  return { type: 'new', session: newSession };\n}\n\nfunction isCustomEvent(event) {\n  return event.type === EventType.Custom;\n}\n\n/**\n * Add an event to the event buffer.\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nasync function addEvent(\n  replay,\n  event,\n  isCheckout,\n) {\n  if (!replay.eventBuffer) {\n    // This implies that `_isEnabled` is false\n    return null;\n  }\n\n  if (replay.isPaused()) {\n    // Do not add to event buffer when recording is paused\n    return null;\n  }\n\n  const timestampInMs = timestampToMs(event.timestamp);\n\n  // Throw out events that happen more than 5 minutes ago. This can happen if\n  // page has been left open and idle for a long period of time and user\n  // comes back to trigger a new session. The performance entries rely on\n  // `performance.timeOrigin`, which is when the page first opened.\n  if (timestampInMs + replay.timeouts.sessionIdlePause < Date.now()) {\n    return null;\n  }\n\n  try {\n    if (isCheckout) {\n      replay.eventBuffer.clear();\n    }\n\n    const replayOptions = replay.getOptions();\n\n    const eventAfterPossibleCallback = maybeApplyCallback(event, replayOptions.beforeAddRecordingEvent);\n\n    if (!eventAfterPossibleCallback) {\n      return;\n    }\n\n    return await replay.eventBuffer.addEvent(eventAfterPossibleCallback);\n  } catch (error) {\n    const reason = error && error instanceof EventBufferSizeExceededError ? 'addEventSizeExceeded' : 'addEvent';\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(error);\n    await replay.stop(reason);\n\n    const client = getCurrentHub().getClient();\n\n    if (client) {\n      client.recordDroppedEvent('internal_sdk_error', 'replay');\n    }\n  }\n}\n\nfunction maybeApplyCallback(\n  event,\n  callback,\n) {\n  try {\n    if (typeof callback === 'function' && isCustomEvent(event)) {\n      return callback(event);\n    }\n  } catch (error) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.error('[Replay] An error occured in the `beforeAddRecordingEvent` callback, skipping the event...', error);\n    return null;\n  }\n\n  return event;\n}\n\n/** If the event is an error event */\nfunction isErrorEvent(event) {\n  return !event.type;\n}\n\n/** If the event is a transaction event */\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\n/** If the event is an replay event */\nfunction isReplayEvent(event) {\n  return event.type === 'replay_event';\n}\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nfunction handleAfterSendEvent(replay) {\n  // Custom transports may still be returning `Promise<void>`, which means we cannot expect the status code to be available there\n  // TODO (v8): remove this check as it will no longer be necessary\n  const enforceStatusCode = isBaseTransportSend();\n\n  return (event, sendResponse) => {\n    if (!isErrorEvent(event) && !isTransactionEvent(event)) {\n      return;\n    }\n\n    const statusCode = sendResponse && sendResponse.statusCode;\n\n    // We only want to do stuff on successful error sending, otherwise you get error replays without errors attached\n    // If not using the base transport, we allow `undefined` response (as a custom transport may not implement this correctly yet)\n    // If we do use the base transport, we skip if we encountered an non-OK status code\n    if (enforceStatusCode && (!statusCode || statusCode < 200 || statusCode >= 300)) {\n      return;\n    }\n\n    // Collect traceIds in _context regardless of `recordingMode`\n    // In error mode, _context gets cleared on every checkout\n    if (isTransactionEvent(event) && event.contexts && event.contexts.trace && event.contexts.trace.trace_id) {\n      replay.getContext().traceIds.add(event.contexts.trace.trace_id );\n      return;\n    }\n\n    // Everything below is just for error events\n    if (!isErrorEvent(event)) {\n      return;\n    }\n\n    // Add error to list of errorIds of replay. This is ok to do even if not\n    // sampled because context will get reset at next checkout.\n    // XXX: There is also a race condition where it's possible to capture an\n    // error to Sentry before Replay SDK has loaded, but response returns after\n    // it was loaded, and this gets called.\n    if (event.event_id) {\n      replay.getContext().errorIds.add(event.event_id);\n    }\n\n    // If error event is tagged with replay id it means it was sampled (when in buffer mode)\n    // Need to be very careful that this does not cause an infinite loop\n    if (replay.recordingMode === 'buffer' && event.tags && event.tags.replayId) {\n      setTimeout(() => {\n        // Capture current event buffer as new replay\n        void replay.sendBufferedReplayOrFlush();\n      });\n    }\n  };\n}\n\nfunction isBaseTransportSend() {\n  const client = getCurrentHub().getClient();\n  if (!client) {\n    return false;\n  }\n\n  const transport = client.getTransport();\n  if (!transport) {\n    return false;\n  }\n\n  return (\n    (transport.send ).__sentry__baseTransport__ || false\n  );\n}\n\n/**\n * Returns true if we think the given event is an error originating inside of rrweb.\n */\nfunction isRrwebError(event, hint) {\n  if (event.type || !event.exception || !event.exception.values || !event.exception.values.length) {\n    return false;\n  }\n\n  // @ts-ignore this may be set by rrweb when it finds errors\n  if (hint.originalException && hint.originalException.__rrweb__) {\n    return true;\n  }\n\n  // Check if any exception originates from rrweb\n  return event.exception.values.some(exception => {\n    if (!exception.stacktrace || !exception.stacktrace.frames || !exception.stacktrace.frames.length) {\n      return false;\n    }\n\n    return exception.stacktrace.frames.some(frame => frame.filename && frame.filename.includes('/rrweb/src/'));\n  });\n}\n\n/**\n * Determine if event should be sampled (only applies in buffer mode).\n * When an event is captured by `hanldleGlobalEvent`, when in buffer mode\n * we determine if we want to sample the error or not.\n */\nfunction shouldSampleForBufferEvent(replay, event) {\n  if (replay.recordingMode !== 'buffer') {\n    return false;\n  }\n\n  // ignore this error because otherwise we could loop indefinitely with\n  // trying to capture replay and failing\n  if (event.message === UNABLE_TO_SEND_REPLAY) {\n    return false;\n  }\n\n  // Require the event to be an error event & to have an exception\n  if (!event.exception || event.type) {\n    return false;\n  }\n\n  return isSampled(replay.getOptions().errorSampleRate);\n}\n\n/**\n * Returns a listener to be added to `addGlobalEventProcessor(listener)`.\n */\nfunction handleGlobalEventListener(\n  replay,\n  includeAfterSendEventHandling = false,\n) {\n  const afterSendHandler = includeAfterSendEventHandling ? handleAfterSendEvent(replay) : undefined;\n\n  return (event, hint) => {\n    if (isReplayEvent(event)) {\n      // Replays have separate set of breadcrumbs, do not include breadcrumbs\n      // from core SDK\n      delete event.breadcrumbs;\n      return event;\n    }\n\n    // We only want to handle errors & transactions, nothing else\n    if (!isErrorEvent(event) && !isTransactionEvent(event)) {\n      return event;\n    }\n\n    // Unless `captureExceptions` is enabled, we want to ignore errors coming from rrweb\n    // As there can be a bunch of stuff going wrong in internals there, that we don't want to bubble up to users\n    if (isRrwebError(event, hint) && !replay.getOptions()._experiments.captureExceptions) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Replay] Ignoring error from rrweb internals', event);\n      return null;\n    }\n\n    // When in buffer mode, we decide to sample here.\n    // Later, in `handleAfterSendEvent`, if the replayId is set, we know that we sampled\n    // And convert the buffer session to a full session\n    const isErrorEventSampled = shouldSampleForBufferEvent(replay, event);\n\n    // Tag errors if it has been sampled in buffer mode, or if it is session mode\n    // Only tag transactions if in session mode\n    const shouldTagReplayId = isErrorEventSampled || replay.recordingMode === 'session';\n\n    if (shouldTagReplayId) {\n      event.tags = { ...event.tags, replayId: replay.getSessionId() };\n    }\n\n    // In cases where a custom client is used that does not support the new hooks (yet),\n    // we manually call this hook method here\n    if (afterSendHandler) {\n      // Pretend the error had a 200 response so we always capture it\n      afterSendHandler(event, { statusCode: 200 });\n    }\n\n    return event;\n  };\n}\n\n/**\n * Create a \"span\" for each performance entry.\n */\nfunction createPerformanceSpans(\n  replay,\n  entries,\n) {\n  return entries.map(({ type, start, end, name, data }) => {\n    const response = replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: start,\n      data: {\n        tag: 'performanceSpan',\n        payload: {\n          op: type,\n          description: name,\n          startTimestamp: start,\n          endTimestamp: end,\n          data,\n        },\n      },\n    });\n\n    // If response is a string, it means its either THROTTLED or SKIPPED\n    return typeof response === 'string' ? Promise.resolve(null) : response;\n  });\n}\n\nfunction handleHistory(handlerData) {\n  const { from, to } = handlerData;\n\n  const now = Date.now() / 1000;\n\n  return {\n    type: 'navigation.push',\n    start: now,\n    end: now,\n    name: to,\n    data: {\n      previous: from,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addInstrumentationHandler('history', listener)`.\n */\nfunction handleHistorySpanListener(replay) {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleHistory(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    // Need to collect visited URLs\n    replay.getContext().urls.push(result.name);\n    replay.triggerUserActivity();\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning false to flush\n      return false;\n    });\n  };\n}\n\n/**\n * Check whether a given request URL should be filtered out. This is so we\n * don't log Sentry ingest requests.\n */\nfunction shouldFilterRequest(replay, url) {\n  // If we enabled the `traceInternals` experiment, we want to trace everything\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && replay.getOptions()._experiments.traceInternals) {\n    return false;\n  }\n\n  return _isSentryRequest(url);\n}\n\n/**\n * Checks wether a given URL belongs to the configured Sentry DSN.\n */\nfunction _isSentryRequest(url) {\n  const client = getCurrentHub().getClient();\n  const dsn = client && client.getDsn();\n  return dsn ? url.includes(dsn.host) : false;\n}\n\n/** Add a performance entry breadcrumb */\nfunction addNetworkBreadcrumb(\n  replay,\n  result,\n) {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  if (result === null) {\n    return;\n  }\n\n  if (shouldFilterRequest(replay, result.name)) {\n    return;\n  }\n\n  replay.addUpdate(() => {\n    createPerformanceSpans(replay, [result]);\n    // Returning true will cause `addUpdate` to not flush\n    // We do not want network requests to cause a flush. This will prevent\n    // recurring/polling requests from keeping the replay session alive.\n    return true;\n  });\n}\n\n/** only exported for tests */\nfunction handleFetch(handlerData) {\n  const { startTimestamp, endTimestamp, fetchData, response } = handlerData;\n\n  if (!endTimestamp) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url } = fetchData;\n\n  return {\n    type: 'resource.fetch',\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: {\n      method,\n      statusCode: response ? (response ).status : undefined,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addInstrumentationHandler('fetch', listener)`.\n */\nfunction handleFetchSpanListener(replay) {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleFetch(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n\n/** only exported for tests */\nfunction handleXhr(handlerData) {\n  const { startTimestamp, endTimestamp, xhr } = handlerData;\n\n  const sentryXhrData = xhr[SENTRY_XHR_DATA_KEY];\n\n  if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url, status_code: statusCode } = sentryXhrData;\n\n  if (url === undefined) {\n    return null;\n  }\n\n  return {\n    type: 'resource.xhr',\n    name: url,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    data: {\n      method,\n      statusCode,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addInstrumentationHandler('xhr', listener)`.\n */\nfunction handleXhrSpanListener(replay) {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleXhr(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n\nconst OBJ = 10;\nconst OBJ_KEY = 11;\nconst OBJ_KEY_STR = 12;\nconst OBJ_VAL = 13;\nconst OBJ_VAL_STR = 14;\nconst OBJ_VAL_COMPLETED = 15;\n\nconst ARR = 20;\nconst ARR_VAL = 21;\nconst ARR_VAL_STR = 22;\nconst ARR_VAL_COMPLETED = 23;\n\nconst ALLOWED_PRIMITIVES = ['true', 'false', 'null'];\n\n/**\n * Complete an incomplete JSON string.\n * This will ensure that the last element always has a `\"~~\"` to indicate it was truncated.\n * For example, `[1,2,` will be completed to `[1,2,\"~~\"]`\n * and `{\"aa\":\"b` will be completed to `{\"aa\":\"b~~\"}`\n */\nfunction completeJson(incompleteJson, stack) {\n  if (!stack.length) {\n    return incompleteJson;\n  }\n\n  let json = incompleteJson;\n\n  // Most checks are only needed for the last step in the stack\n  const lastPos = stack.length - 1;\n  const lastStep = stack[lastPos];\n\n  json = _fixLastStep(json, lastStep);\n\n  // Complete remaining steps - just add closing brackets\n  for (let i = lastPos; i >= 0; i--) {\n    const step = stack[i];\n\n    switch (step) {\n      case OBJ:\n        json = `${json}}`;\n        break;\n      case ARR:\n        json = `${json}]`;\n        break;\n    }\n  }\n\n  return json;\n}\n\nfunction _fixLastStep(json, lastStep) {\n  switch (lastStep) {\n    // Object cases\n    case OBJ:\n      return `${json}\"~~\":\"~~\"`;\n    case OBJ_KEY:\n      return `${json}:\"~~\"`;\n    case OBJ_KEY_STR:\n      return `${json}~~\":\"~~\"`;\n    case OBJ_VAL:\n      return _maybeFixIncompleteObjValue(json);\n    case OBJ_VAL_STR:\n      return `${json}~~\"`;\n    case OBJ_VAL_COMPLETED:\n      return `${json},\"~~\":\"~~\"`;\n\n    // Array cases\n    case ARR:\n      return `${json}\"~~\"`;\n    case ARR_VAL:\n      return _maybeFixIncompleteArrValue(json);\n    case ARR_VAL_STR:\n      return `${json}~~\"`;\n    case ARR_VAL_COMPLETED:\n      return `${json},\"~~\"`;\n  }\n\n  return json;\n}\n\nfunction _maybeFixIncompleteArrValue(json) {\n  const pos = _findLastArrayDelimiter(json);\n\n  if (pos > -1) {\n    const part = json.slice(pos + 1);\n\n    if (ALLOWED_PRIMITIVES.includes(part.trim())) {\n      return `${json},\"~~\"`;\n    }\n\n    // Everything else is replaced with `\"~~\"`\n    return `${json.slice(0, pos + 1)}\"~~\"`;\n  }\n\n  // fallback, this shouldn't happen, to be save\n  return json;\n}\n\nfunction _findLastArrayDelimiter(json) {\n  for (let i = json.length - 1; i >= 0; i--) {\n    const char = json[i];\n\n    if (char === ',' || char === '[') {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction _maybeFixIncompleteObjValue(json) {\n  const startPos = json.lastIndexOf(':');\n\n  const part = json.slice(startPos + 1);\n\n  if (ALLOWED_PRIMITIVES.includes(part.trim())) {\n    return `${json},\"~~\":\"~~\"`;\n  }\n\n  // Everything else is replaced with `\"~~\"`\n  // This also means we do not have incomplete numbers, e.g `[1` is replaced with `[\"~~\"]`\n  return `${json.slice(0, startPos + 1)}\"~~\"`;\n}\n\n/**\n * Evaluate an (incomplete) JSON string.\n */\nfunction evaluateJson(json) {\n  const stack = [];\n\n  for (let pos = 0; pos < json.length; pos++) {\n    _evaluateJsonPos(stack, json, pos);\n  }\n\n  return stack;\n}\n\nfunction _evaluateJsonPos(stack, json, pos) {\n  const curStep = stack[stack.length - 1];\n\n  const char = json[pos];\n\n  const whitespaceRegex = /\\s/;\n\n  if (whitespaceRegex.test(char)) {\n    return;\n  }\n\n  if (char === '\"' && !_isEscaped(json, pos)) {\n    _handleQuote(stack, curStep);\n    return;\n  }\n\n  switch (char) {\n    case '{':\n      _handleObj(stack, curStep);\n      break;\n    case '[':\n      _handleArr(stack, curStep);\n      break;\n    case ':':\n      _handleColon(stack, curStep);\n      break;\n    case ',':\n      _handleComma(stack, curStep);\n      break;\n    case '}':\n      _handleObjClose(stack, curStep);\n      break;\n    case ']':\n      _handleArrClose(stack, curStep);\n      break;\n  }\n}\n\nfunction _handleQuote(stack, curStep) {\n  // End of obj value\n  if (curStep === OBJ_VAL_STR) {\n    stack.pop();\n    stack.push(OBJ_VAL_COMPLETED);\n    return;\n  }\n\n  // End of arr value\n  if (curStep === ARR_VAL_STR) {\n    stack.pop();\n    stack.push(ARR_VAL_COMPLETED);\n    return;\n  }\n\n  // Start of obj value\n  if (curStep === OBJ_VAL) {\n    stack.push(OBJ_VAL_STR);\n    return;\n  }\n\n  // Start of arr value\n  if (curStep === ARR_VAL) {\n    stack.push(ARR_VAL_STR);\n    return;\n  }\n\n  // Start of obj key\n  if (curStep === OBJ) {\n    stack.push(OBJ_KEY_STR);\n    return;\n  }\n\n  // End of obj key\n  if (curStep === OBJ_KEY_STR) {\n    stack.pop();\n    stack.push(OBJ_KEY);\n    return;\n  }\n}\n\nfunction _handleObj(stack, curStep) {\n  // Initial object\n  if (!curStep) {\n    stack.push(OBJ);\n    return;\n  }\n\n  // New object as obj value\n  if (curStep === OBJ_VAL) {\n    stack.push(OBJ);\n    return;\n  }\n\n  // New object as array element\n  if (curStep === ARR_VAL) {\n    stack.push(OBJ);\n  }\n\n  // New object as first array element\n  if (curStep === ARR) {\n    stack.push(OBJ);\n    return;\n  }\n}\n\nfunction _handleArr(stack, curStep) {\n  // Initial array\n  if (!curStep) {\n    stack.push(ARR);\n    stack.push(ARR_VAL);\n    return;\n  }\n\n  // New array as obj value\n  if (curStep === OBJ_VAL) {\n    stack.push(ARR);\n    stack.push(ARR_VAL);\n    return;\n  }\n\n  // New array as array element\n  if (curStep === ARR_VAL) {\n    stack.push(ARR);\n    stack.push(ARR_VAL);\n  }\n\n  // New array as first array element\n  if (curStep === ARR) {\n    stack.push(ARR);\n    stack.push(ARR_VAL);\n    return;\n  }\n}\n\nfunction _handleColon(stack, curStep) {\n  if (curStep === OBJ_KEY) {\n    stack.pop();\n    stack.push(OBJ_VAL);\n  }\n}\n\nfunction _handleComma(stack, curStep) {\n  // Comma after obj value\n  if (curStep === OBJ_VAL) {\n    stack.pop();\n    return;\n  }\n  if (curStep === OBJ_VAL_COMPLETED) {\n    // Pop OBJ_VAL_COMPLETED & OBJ_VAL\n    stack.pop();\n    stack.pop();\n    return;\n  }\n\n  // Comma after arr value\n  if (curStep === ARR_VAL) {\n    // do nothing - basically we'd pop ARR_VAL but add it right back\n    return;\n  }\n\n  if (curStep === ARR_VAL_COMPLETED) {\n    // Pop ARR_VAL_COMPLETED\n    stack.pop();\n\n    // basically we'd pop ARR_VAL but add it right back\n    return;\n  }\n}\n\nfunction _handleObjClose(stack, curStep) {\n  // Empty object {}\n  if (curStep === OBJ) {\n    stack.pop();\n  }\n\n  // Object with element\n  if (curStep === OBJ_VAL) {\n    // Pop OBJ_VAL, OBJ\n    stack.pop();\n    stack.pop();\n  }\n\n  // Obj with element\n  if (curStep === OBJ_VAL_COMPLETED) {\n    // Pop OBJ_VAL_COMPLETED, OBJ_VAL, OBJ\n    stack.pop();\n    stack.pop();\n    stack.pop();\n  }\n\n  // if was obj value, complete it\n  if (stack[stack.length - 1] === OBJ_VAL) {\n    stack.push(OBJ_VAL_COMPLETED);\n  }\n\n  // if was arr value, complete it\n  if (stack[stack.length - 1] === ARR_VAL) {\n    stack.push(ARR_VAL_COMPLETED);\n  }\n}\n\nfunction _handleArrClose(stack, curStep) {\n  // Empty array []\n  if (curStep === ARR) {\n    stack.pop();\n  }\n\n  // Array with element\n  if (curStep === ARR_VAL) {\n    // Pop ARR_VAL, ARR\n    stack.pop();\n    stack.pop();\n  }\n\n  // Array with element\n  if (curStep === ARR_VAL_COMPLETED) {\n    // Pop ARR_VAL_COMPLETED, ARR_VAL, ARR\n    stack.pop();\n    stack.pop();\n    stack.pop();\n  }\n\n  // if was obj value, complete it\n  if (stack[stack.length - 1] === OBJ_VAL) {\n    stack.push(OBJ_VAL_COMPLETED);\n  }\n\n  // if was arr value, complete it\n  if (stack[stack.length - 1] === ARR_VAL) {\n    stack.push(ARR_VAL_COMPLETED);\n  }\n}\n\nfunction _isEscaped(str, pos) {\n  const previousChar = str[pos - 1];\n\n  return previousChar === '\\\\' && !_isEscaped(str, pos - 1);\n}\n\n/* eslint-disable max-lines */\n\n/**\n * Takes an incomplete JSON string, and returns a hopefully valid JSON string.\n * Note that this _can_ fail, so you should check the return value is valid JSON.\n */\nfunction fixJson(incompleteJson) {\n  const stack = evaluateJson(incompleteJson);\n\n  return completeJson(incompleteJson, stack);\n}\n\n/** Get the size of a body. */\nfunction getBodySize(\n  body,\n  textEncoder,\n) {\n  if (!body) {\n    return undefined;\n  }\n\n  try {\n    if (typeof body === 'string') {\n      return textEncoder.encode(body).length;\n    }\n\n    if (body instanceof URLSearchParams) {\n      return textEncoder.encode(body.toString()).length;\n    }\n\n    if (body instanceof FormData) {\n      const formDataStr = _serializeFormData(body);\n      return textEncoder.encode(formDataStr).length;\n    }\n\n    if (body instanceof Blob) {\n      return body.size;\n    }\n\n    if (body instanceof ArrayBuffer) {\n      return body.byteLength;\n    }\n\n    // Currently unhandled types: ArrayBufferView, ReadableStream\n  } catch (e) {\n    // just return undefined\n  }\n\n  return undefined;\n}\n\n/** Convert a Content-Length header to number/undefined.  */\nfunction parseContentLengthHeader(header) {\n  if (!header) {\n    return undefined;\n  }\n\n  const size = parseInt(header, 10);\n  return isNaN(size) ? undefined : size;\n}\n\n/** Get the string representation of a body. */\nfunction getBodyString(body) {\n  if (typeof body === 'string') {\n    return body;\n  }\n\n  if (body instanceof URLSearchParams) {\n    return body.toString();\n  }\n\n  if (body instanceof FormData) {\n    return _serializeFormData(body);\n  }\n\n  return undefined;\n}\n\n/** Convert ReplayNetworkRequestData to a PerformanceEntry. */\nfunction makeNetworkReplayBreadcrumb(\n  type,\n  data,\n) {\n  if (!data) {\n    return null;\n  }\n\n  const { startTimestamp, endTimestamp, url, method, statusCode, request, response } = data;\n\n  const result = {\n    type,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: dropUndefinedKeys({\n      method,\n      statusCode,\n      request,\n      response,\n    }),\n  };\n\n  return result;\n}\n\n/** Build the request or response part of a replay network breadcrumb that was skipped. */\nfunction buildSkippedNetworkRequestOrResponse(bodySize) {\n  return {\n    headers: {},\n    size: bodySize,\n    _meta: {\n      warnings: ['URL_SKIPPED'],\n    },\n  };\n}\n\n/** Build the request or response part of a replay network breadcrumb. */\nfunction buildNetworkRequestOrResponse(\n  headers,\n  bodySize,\n  body,\n) {\n  if (!bodySize && Object.keys(headers).length === 0) {\n    return undefined;\n  }\n\n  if (!bodySize) {\n    return {\n      headers,\n    };\n  }\n\n  if (!body) {\n    return {\n      headers,\n      size: bodySize,\n    };\n  }\n\n  const info = {\n    headers,\n    size: bodySize,\n  };\n\n  const { body: normalizedBody, warnings } = normalizeNetworkBody(body);\n  info.body = normalizedBody;\n  if (warnings.length > 0) {\n    info._meta = {\n      warnings,\n    };\n  }\n\n  return info;\n}\n\n/** Filter a set of headers */\nfunction getAllowedHeaders(headers, allowedHeaders) {\n  return Object.keys(headers).reduce((filteredHeaders, key) => {\n    const normalizedKey = key.toLowerCase();\n    // Avoid putting empty strings into the headers\n    if (allowedHeaders.includes(normalizedKey) && headers[key]) {\n      filteredHeaders[normalizedKey] = headers[key];\n    }\n    return filteredHeaders;\n  }, {});\n}\n\nfunction _serializeFormData(formData) {\n  // This is a bit simplified, but gives us a decent estimate\n  // This converts e.g. { name: 'Anne Smith', age: 13 } to 'name=Anne+Smith&age=13'\n  // @ts-ignore passing FormData to URLSearchParams actually works\n  return new URLSearchParams(formData).toString();\n}\n\nfunction normalizeNetworkBody(body)\n\n {\n  if (!body || typeof body !== 'string') {\n    return {\n      body,\n      warnings: [],\n    };\n  }\n\n  const exceedsSizeLimit = body.length > NETWORK_BODY_MAX_SIZE;\n\n  if (_strIsProbablyJson(body)) {\n    try {\n      const json = exceedsSizeLimit ? fixJson(body.slice(0, NETWORK_BODY_MAX_SIZE)) : body;\n      const normalizedBody = JSON.parse(json);\n      return {\n        body: normalizedBody,\n        warnings: exceedsSizeLimit ? ['JSON_TRUNCATED'] : [],\n      };\n    } catch (e3) {\n      return {\n        body: exceedsSizeLimit ? `${body.slice(0, NETWORK_BODY_MAX_SIZE)}…` : body,\n        warnings: exceedsSizeLimit ? ['INVALID_JSON', 'TEXT_TRUNCATED'] : ['INVALID_JSON'],\n      };\n    }\n  }\n\n  return {\n    body: exceedsSizeLimit ? `${body.slice(0, NETWORK_BODY_MAX_SIZE)}…` : body,\n    warnings: exceedsSizeLimit ? ['TEXT_TRUNCATED'] : [],\n  };\n}\n\nfunction _strIsProbablyJson(str) {\n  const first = str[0];\n  const last = str[str.length - 1];\n\n  // Simple check: If this does not start & end with {} or [], it's not JSON\n  return (first === '[' && last === ']') || (first === '{' && last === '}');\n}\n\n/** Match an URL against a list of strings/Regex. */\nfunction urlMatches(url, urls) {\n  const fullUrl = getFullUrl(url);\n\n  return stringMatchesSomePattern(fullUrl, urls);\n}\n\n/** exported for tests */\nfunction getFullUrl(url, baseURI = WINDOW.document.baseURI) {\n  // Short circuit for common cases:\n  if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith(WINDOW.location.origin)) {\n    return url;\n  }\n  const fixedUrl = new URL(url, baseURI);\n\n  // If these do not match, we are not dealing with a relative URL, so just return it\n  if (fixedUrl.origin !== new URL(baseURI).origin) {\n    return url;\n  }\n\n  const fullUrl = fixedUrl.href;\n\n  // Remove trailing slashes, if they don't match the original URL\n  if (!url.endsWith('/') && fullUrl.endsWith('/')) {\n    return fullUrl.slice(0, -1);\n  }\n\n  return fullUrl;\n}\n\n/**\n * Capture a fetch breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nasync function captureFetchBreadcrumbToReplay(\n  breadcrumb,\n  hint,\n  options\n\n,\n) {\n  try {\n    const data = await _prepareFetchData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.fetch', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('[Replay] Failed to capture fetch breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nfunction enrichFetchBreadcrumb(\n  breadcrumb,\n  hint,\n  options,\n) {\n  const { input, response } = hint;\n\n  const body = _getFetchRequestArgBody(input);\n  const reqSize = getBodySize(body, options.textEncoder);\n\n  const resSize = response ? parseContentLengthHeader(response.headers.get('content-length')) : undefined;\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nasync function _prepareFetchData(\n  breadcrumb,\n  hint,\n  options\n\n,\n) {\n  const { startTimestamp, endTimestamp } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  const captureDetails =\n    urlMatches(url, options.networkDetailAllowUrls) && !urlMatches(url, options.networkDetailDenyUrls);\n\n  const request = captureDetails\n    ? _getRequestInfo(options, hint.input, requestBodySize)\n    : buildSkippedNetworkRequestOrResponse(requestBodySize);\n  const response = await _getResponseInfo(captureDetails, options, hint.response, responseBodySize);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request,\n    response,\n  };\n}\n\nfunction _getRequestInfo(\n  { networkCaptureBodies, networkRequestHeaders },\n  input,\n  requestBodySize,\n) {\n  const headers = getRequestHeaders(input, networkRequestHeaders);\n\n  if (!networkCaptureBodies) {\n    return buildNetworkRequestOrResponse(headers, requestBodySize, undefined);\n  }\n\n  // We only want to transmit string or string-like bodies\n  const requestBody = _getFetchRequestArgBody(input);\n  const bodyStr = getBodyString(requestBody);\n  return buildNetworkRequestOrResponse(headers, requestBodySize, bodyStr);\n}\n\nasync function _getResponseInfo(\n  captureDetails,\n  {\n    networkCaptureBodies,\n    textEncoder,\n    networkResponseHeaders,\n  }\n\n,\n  response,\n  responseBodySize,\n) {\n  if (!captureDetails && responseBodySize !== undefined) {\n    return buildSkippedNetworkRequestOrResponse(responseBodySize);\n  }\n\n  const headers = getAllHeaders(response.headers, networkResponseHeaders);\n\n  if (!networkCaptureBodies && responseBodySize !== undefined) {\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n\n  // Only clone the response if we need to\n  try {\n    // We have to clone this, as the body can only be read once\n    const res = response.clone();\n    const bodyText = await _parseFetchBody(res);\n\n    const size =\n      bodyText && bodyText.length && responseBodySize === undefined\n        ? getBodySize(bodyText, textEncoder)\n        : responseBodySize;\n\n    if (!captureDetails) {\n      return buildSkippedNetworkRequestOrResponse(size);\n    }\n\n    if (networkCaptureBodies) {\n      return buildNetworkRequestOrResponse(headers, size, bodyText);\n    }\n\n    return buildNetworkRequestOrResponse(headers, size, undefined);\n  } catch (e) {\n    // fallback\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n}\n\nasync function _parseFetchBody(response) {\n  try {\n    return await response.text();\n  } catch (e2) {\n    return undefined;\n  }\n}\n\nfunction _getFetchRequestArgBody(fetchArgs = []) {\n  // We only support getting the body from the fetch options\n  if (fetchArgs.length !== 2 || typeof fetchArgs[1] !== 'object') {\n    return undefined;\n  }\n\n  return (fetchArgs[1] ).body;\n}\n\nfunction getAllHeaders(headers, allowedHeaders) {\n  const allHeaders = {};\n\n  allowedHeaders.forEach(header => {\n    if (headers.get(header)) {\n      allHeaders[header] = headers.get(header) ;\n    }\n  });\n\n  return allHeaders;\n}\n\nfunction getRequestHeaders(fetchArgs, allowedHeaders) {\n  if (fetchArgs.length === 1 && typeof fetchArgs[0] !== 'string') {\n    return getHeadersFromOptions(fetchArgs[0] , allowedHeaders);\n  }\n\n  if (fetchArgs.length === 2) {\n    return getHeadersFromOptions(fetchArgs[1] , allowedHeaders);\n  }\n\n  return {};\n}\n\nfunction getHeadersFromOptions(\n  input,\n  allowedHeaders,\n) {\n  if (!input) {\n    return {};\n  }\n\n  const headers = input.headers;\n\n  if (!headers) {\n    return {};\n  }\n\n  if (headers instanceof Headers) {\n    return getAllHeaders(headers, allowedHeaders);\n  }\n\n  // We do not support this, as it is not really documented (anymore?)\n  if (Array.isArray(headers)) {\n    return {};\n  }\n\n  return getAllowedHeaders(headers, allowedHeaders);\n}\n\n/**\n * Capture an XHR breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nasync function captureXhrBreadcrumbToReplay(\n  breadcrumb,\n  hint,\n  options,\n) {\n  try {\n    const data = _prepareXhrData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.xhr', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('[Replay] Failed to capture fetch breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nfunction enrichXhrBreadcrumb(\n  breadcrumb,\n  hint,\n  options,\n) {\n  const { xhr, input } = hint;\n\n  const reqSize = getBodySize(input, options.textEncoder);\n  const resSize = xhr.getResponseHeader('content-length')\n    ? parseContentLengthHeader(xhr.getResponseHeader('content-length'))\n    : getBodySize(xhr.response, options.textEncoder);\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nfunction _prepareXhrData(\n  breadcrumb,\n  hint,\n  options,\n) {\n  const { startTimestamp, endTimestamp, input, xhr } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  if (!url) {\n    return null;\n  }\n\n  if (!urlMatches(url, options.networkDetailAllowUrls) || urlMatches(url, options.networkDetailDenyUrls)) {\n    const request = buildSkippedNetworkRequestOrResponse(requestBodySize);\n    const response = buildSkippedNetworkRequestOrResponse(responseBodySize);\n    return {\n      startTimestamp,\n      endTimestamp,\n      url,\n      method,\n      statusCode,\n      request,\n      response,\n    };\n  }\n\n  const xhrInfo = xhr[SENTRY_XHR_DATA_KEY];\n  const networkRequestHeaders = xhrInfo\n    ? getAllowedHeaders(xhrInfo.request_headers, options.networkRequestHeaders)\n    : {};\n  const networkResponseHeaders = getAllowedHeaders(getResponseHeaders(xhr), options.networkResponseHeaders);\n\n  const request = buildNetworkRequestOrResponse(\n    networkRequestHeaders,\n    requestBodySize,\n    options.networkCaptureBodies ? getBodyString(input) : undefined,\n  );\n  const response = buildNetworkRequestOrResponse(\n    networkResponseHeaders,\n    responseBodySize,\n    options.networkCaptureBodies ? hint.xhr.responseText : undefined,\n  );\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request,\n    response,\n  };\n}\n\nfunction getResponseHeaders(xhr) {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc, line) => {\n    const [key, value] = line.split(': ');\n    acc[key.toLowerCase()] = value;\n    return acc;\n  }, {});\n}\n\n/**\n * This method does two things:\n * - It enriches the regular XHR/fetch breadcrumbs with request/response size data\n * - It captures the XHR/fetch breadcrumbs to the replay\n *   (enriching it with further data that is _not_ added to the regular breadcrumbs)\n */\nfunction handleNetworkBreadcrumbs(replay) {\n  const client = getCurrentHub().getClient();\n\n  try {\n    const textEncoder = new TextEncoder();\n\n    const {\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    } = replay.getOptions();\n\n    const options = {\n      replay,\n      textEncoder,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    };\n\n    if (client && client.on) {\n      client.on('beforeAddBreadcrumb', (breadcrumb, hint) => beforeAddNetworkBreadcrumb(options, breadcrumb, hint));\n    } else {\n      // Fallback behavior\n      addInstrumentationHandler('fetch', handleFetchSpanListener(replay));\n      addInstrumentationHandler('xhr', handleXhrSpanListener(replay));\n    }\n  } catch (e2) {\n    // Do nothing\n  }\n}\n\n/** just exported for tests */\nfunction beforeAddNetworkBreadcrumb(\n  options,\n  breadcrumb,\n  hint,\n) {\n  if (!breadcrumb.data) {\n    return;\n  }\n\n  try {\n    if (_isXhrBreadcrumb(breadcrumb) && _isXhrHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichXhrBreadcrumb(breadcrumb, hint, options);\n\n      void captureXhrBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n\n    if (_isFetchBreadcrumb(breadcrumb) && _isFetchHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichFetchBreadcrumb(breadcrumb, hint, options);\n\n      void captureFetchBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n  } catch (e) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Error when enriching network breadcrumb');\n  }\n}\n\nfunction _isXhrBreadcrumb(breadcrumb) {\n  return breadcrumb.category === 'xhr';\n}\n\nfunction _isFetchBreadcrumb(breadcrumb) {\n  return breadcrumb.category === 'fetch';\n}\n\nfunction _isXhrHint(hint) {\n  return hint && hint.xhr;\n}\n\nfunction _isFetchHint(hint) {\n  return hint && hint.response;\n}\n\nlet _LAST_BREADCRUMB = null;\n\nfunction isBreadcrumbWithCategory(breadcrumb) {\n  return !!breadcrumb.category;\n}\n\nconst handleScopeListener =\n  (replay) =>\n  (scope) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleScope(scope);\n\n    if (!result) {\n      return;\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n\n/**\n * An event handler to handle scope changes.\n */\nfunction handleScope(scope) {\n  // TODO (v8): Remove this guard. This was put in place because we introduced\n  // Scope.getLastBreadcrumb mid-v7 which caused incompatibilities with older SDKs.\n  // For now, we'll just return null if the method doesn't exist but we should eventually\n  // get rid of this guard.\n  const newBreadcrumb = scope.getLastBreadcrumb && scope.getLastBreadcrumb();\n\n  // Listener can be called when breadcrumbs have not changed, so we store the\n  // reference to the last crumb and only return a crumb if it has changed\n  if (_LAST_BREADCRUMB === newBreadcrumb || !newBreadcrumb) {\n    return null;\n  }\n\n  _LAST_BREADCRUMB = newBreadcrumb;\n\n  if (\n    !isBreadcrumbWithCategory(newBreadcrumb) ||\n    ['fetch', 'xhr', 'sentry.event', 'sentry.transaction'].includes(newBreadcrumb.category) ||\n    newBreadcrumb.category.startsWith('ui.')\n  ) {\n    return null;\n  }\n\n  if (newBreadcrumb.category === 'console') {\n    return normalizeConsoleBreadcrumb(newBreadcrumb);\n  }\n\n  return createBreadcrumb(newBreadcrumb);\n}\n\n/** exported for tests only */\nfunction normalizeConsoleBreadcrumb(\n  breadcrumb,\n) {\n  const args = breadcrumb.data && breadcrumb.data.arguments;\n\n  if (!Array.isArray(args) || args.length === 0) {\n    return createBreadcrumb(breadcrumb);\n  }\n\n  let isTruncated = false;\n\n  // Avoid giant args captures\n  const normalizedArgs = args.map(arg => {\n    if (!arg) {\n      return arg;\n    }\n    if (typeof arg === 'string') {\n      if (arg.length > CONSOLE_ARG_MAX_SIZE) {\n        isTruncated = true;\n        return `${arg.slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n      }\n\n      return arg;\n    }\n    if (typeof arg === 'object') {\n      try {\n        const normalizedArg = normalize(arg, 7);\n        const stringified = JSON.stringify(normalizedArg);\n        if (stringified.length > CONSOLE_ARG_MAX_SIZE) {\n          const fixedJson = fixJson(stringified.slice(0, CONSOLE_ARG_MAX_SIZE));\n          const json = JSON.parse(fixedJson);\n          // We only set this after JSON.parse() was successfull, so we know we didn't run into `catch`\n          isTruncated = true;\n          return json;\n        }\n        return normalizedArg;\n      } catch (e) {\n        // fall back to default\n      }\n    }\n\n    return arg;\n  });\n\n  return createBreadcrumb({\n    ...breadcrumb,\n    data: {\n      ...breadcrumb.data,\n      arguments: normalizedArgs,\n      ...(isTruncated ? { _meta: { warnings: ['CONSOLE_ARG_TRUNCATED'] } } : {}),\n    },\n  });\n}\n\n/**\n * Add global listeners that cannot be removed.\n */\nfunction addGlobalListeners(replay) {\n  // Listeners from core SDK //\n  const scope = getCurrentHub().getScope();\n  const client = getCurrentHub().getClient();\n\n  if (scope) {\n    scope.addScopeListener(handleScopeListener(replay));\n  }\n  addInstrumentationHandler('dom', handleDomListener(replay));\n  addInstrumentationHandler('history', handleHistorySpanListener(replay));\n  handleNetworkBreadcrumbs(replay);\n\n  // Tag all (non replay) events that get sent to Sentry with the current\n  // replay ID so that we can reference them later in the UI\n  addGlobalEventProcessor(handleGlobalEventListener(replay, !hasHooks(client)));\n\n  // If a custom client has no hooks yet, we continue to use the \"old\" implementation\n  if (hasHooks(client)) {\n    client.on('afterSendEvent', handleAfterSendEvent(replay));\n    client.on('createDsc', (dsc) => {\n      const replayId = replay.getSessionId();\n      // We do not want to set the DSC when in buffer mode, as that means the replay has not been sent (yet)\n      if (replayId && replay.isEnabled() && replay.recordingMode === 'session') {\n        dsc.replay_id = replayId;\n      }\n    });\n\n    client.on('startTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n\n    // We may be missing the initial startTransaction due to timing issues,\n    // so we capture it on finish again.\n    client.on('finishTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction hasHooks(client) {\n  return !!(client && client.on);\n}\n\n/**\n * Create a \"span\" for the total amount of memory being used by JS objects\n * (including v8 internal objects).\n */\nasync function addMemoryEntry(replay) {\n  // window.performance.memory is a non-standard API and doesn't work on all browsers, so we try-catch this\n  try {\n    return Promise.all(\n      createPerformanceSpans(replay, [\n        // @ts-ignore memory doesn't exist on type Performance as the API is non-standard (we check that it exists above)\n        createMemoryEntry(WINDOW.performance.memory),\n      ]),\n    );\n  } catch (error) {\n    // Do nothing\n    return [];\n  }\n}\n\nfunction createMemoryEntry(memoryEntry) {\n  const { jsHeapSizeLimit, totalJSHeapSize, usedJSHeapSize } = memoryEntry;\n  // we don't want to use `getAbsoluteTime` because it adds the event time to the\n  // time origin, so we get the current timestamp instead\n  const time = Date.now() / 1000;\n  return {\n    type: 'memory',\n    name: 'memory',\n    start: time,\n    end: time,\n    data: {\n      memory: {\n        jsHeapSizeLimit,\n        totalJSHeapSize,\n        usedJSHeapSize,\n      },\n    },\n  };\n}\n\n// Map entryType -> function to normalize data for event\n// @ts-ignore TODO: entry type does not fit the create* functions entry type\nconst ENTRY_TYPES\n\n = {\n  // @ts-ignore TODO: entry type does not fit the create* functions entry type\n  resource: createResourceEntry,\n  paint: createPaintEntry,\n  // @ts-ignore TODO: entry type does not fit the create* functions entry type\n  navigation: createNavigationEntry,\n  // @ts-ignore TODO: entry type does not fit the create* functions entry type\n  ['largest-contentful-paint']: createLargestContentfulPaint,\n};\n\n/**\n * Create replay performance entries from the browser performance entries.\n */\nfunction createPerformanceEntries(\n  entries,\n) {\n  return entries.map(createPerformanceEntry).filter(Boolean) ;\n}\n\nfunction createPerformanceEntry(entry) {\n  if (ENTRY_TYPES[entry.entryType] === undefined) {\n    return null;\n  }\n\n  return ENTRY_TYPES[entry.entryType](entry);\n}\n\nfunction getAbsoluteTime(time) {\n  // browserPerformanceTimeOrigin can be undefined if `performance` or\n  // `performance.now` doesn't exist, but this is already checked by this integration\n  return ((browserPerformanceTimeOrigin || WINDOW.performance.timeOrigin) + time) / 1000;\n}\n\nfunction createPaintEntry(entry) {\n  const { duration, entryType, name, startTime } = entry;\n\n  const start = getAbsoluteTime(startTime);\n  return {\n    type: entryType,\n    name,\n    start,\n    end: start + duration,\n    data: undefined,\n  };\n}\n\nfunction createNavigationEntry(entry) {\n  const {\n    entryType,\n    name,\n    decodedBodySize,\n    duration,\n    domComplete,\n    encodedBodySize,\n    domContentLoadedEventStart,\n    domContentLoadedEventEnd,\n    domInteractive,\n    loadEventStart,\n    loadEventEnd,\n    redirectCount,\n    startTime,\n    transferSize,\n    type,\n  } = entry;\n\n  // Ignore entries with no duration, they do not seem to be useful and cause dupes\n  if (duration === 0) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${type}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(domComplete),\n    name,\n    data: {\n      size: transferSize,\n      decodedBodySize,\n      encodedBodySize,\n      duration,\n      domInteractive,\n      domContentLoadedEventStart,\n      domContentLoadedEventEnd,\n      loadEventStart,\n      loadEventEnd,\n      domComplete,\n      redirectCount,\n    },\n  };\n}\n\nfunction createResourceEntry(\n  entry,\n) {\n  const {\n    entryType,\n    initiatorType,\n    name,\n    responseEnd,\n    startTime,\n    decodedBodySize,\n    encodedBodySize,\n    responseStatus,\n    transferSize,\n  } = entry;\n\n  // Core SDK handles these\n  if (['fetch', 'xmlhttprequest'].includes(initiatorType)) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${initiatorType}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(responseEnd),\n    name,\n    data: {\n      size: transferSize,\n      statusCode: responseStatus,\n      decodedBodySize,\n      encodedBodySize,\n    },\n  };\n}\n\nfunction createLargestContentfulPaint(\n  entry,\n) {\n  const { entryType, startTime, size } = entry;\n\n  let startTimeOrNavigationActivation = 0;\n\n  if (WINDOW.performance) {\n    const navEntry = WINDOW.performance.getEntriesByType('navigation')[0]\n\n;\n\n    // See https://github.com/GoogleChrome/web-vitals/blob/9f11c4c6578fb4c5ee6fa4e32b9d1d756475f135/src/lib/getActivationStart.ts#L21\n    startTimeOrNavigationActivation = (navEntry && navEntry.activationStart) || 0;\n  }\n\n  // value is in ms\n  const value = Math.max(startTime - startTimeOrNavigationActivation, 0);\n  // LCP doesn't have a \"duration\", it just happens at a single point in time.\n  // But the UI expects both, so use end (in seconds) for both timestamps.\n  const end = getAbsoluteTime(startTimeOrNavigationActivation) + value / 1000;\n\n  return {\n    type: entryType,\n    name: entryType,\n    start: end,\n    end,\n    data: {\n      value, // LCP \"duration\" in ms\n      size,\n      // Not sure why this errors, Node should be correct (Argument of type 'Node' is not assignable to parameter of type 'INode')\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      nodeId: record.mirror.getId(entry.element ),\n    },\n  };\n}\n\n/**\n * Heavily simplified debounce function based on lodash.debounce.\n *\n * This function takes a callback function (@param fun) and delays its invocation\n * by @param wait milliseconds. Optionally, a maxWait can be specified in @param options,\n * which ensures that the callback is invoked at least once after the specified max. wait time.\n *\n * @param func the function whose invocation is to be debounced\n * @param wait the minimum time until the function is invoked after it was called once\n * @param options the options object, which can contain the `maxWait` property\n *\n * @returns the debounced version of the function, which needs to be called at least once to start the\n *          debouncing process. Subsequent calls will reset the debouncing timer and, in case @paramfunc\n *          was already invoked in the meantime, return @param func's return value.\n *          The debounced function has two additional properties:\n *          - `flush`: Invokes the debounced function immediately and returns its return value\n *          - `cancel`: Cancels the debouncing process and resets the debouncing timer\n */\nfunction debounce(func, wait, options) {\n  let callbackReturnValue;\n\n  let timerId;\n  let maxTimerId;\n\n  const maxWait = options && options.maxWait ? Math.max(options.maxWait, wait) : 0;\n\n  function invokeFunc() {\n    cancelTimers();\n    callbackReturnValue = func();\n    return callbackReturnValue;\n  }\n\n  function cancelTimers() {\n    timerId !== undefined && clearTimeout(timerId);\n    maxTimerId !== undefined && clearTimeout(maxTimerId);\n    timerId = maxTimerId = undefined;\n  }\n\n  function flush() {\n    if (timerId !== undefined || maxTimerId !== undefined) {\n      return invokeFunc();\n    }\n    return callbackReturnValue;\n  }\n\n  function debounced() {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(invokeFunc, wait);\n\n    if (maxWait && maxTimerId === undefined) {\n      maxTimerId = setTimeout(invokeFunc, maxWait);\n    }\n\n    return callbackReturnValue;\n  }\n\n  debounced.cancel = cancelTimers;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Handler for recording events.\n *\n * Adds to event buffer, and has varying flushing behaviors if the event was a checkout.\n */\nfunction getHandleRecordingEmit(replay) {\n  let hadFirstEvent = false;\n\n  return (event, _isCheckout) => {\n    // If this is false, it means session is expired, create and a new session and wait for checkout\n    if (!replay.checkAndHandleExpiredSession()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('[Replay] Received replay event after session expired.');\n\n      return;\n    }\n\n    // `_isCheckout` is only set when the checkout is due to `checkoutEveryNms`\n    // We also want to treat the first event as a checkout, so we handle this specifically here\n    const isCheckout = _isCheckout || !hadFirstEvent;\n    hadFirstEvent = true;\n\n    // The handler returns `true` if we do not want to trigger debounced flush, `false` if we want to debounce flush.\n    replay.addUpdate(() => {\n      // The session is always started immediately on pageload/init, but for\n      // error-only replays, it should reflect the most recent checkout\n      // when an error occurs. Clear any state that happens before this current\n      // checkout. This needs to happen before `addEvent()` which updates state\n      // dependent on this reset.\n      if (replay.recordingMode === 'buffer' && isCheckout) {\n        replay.setInitialState();\n      }\n\n      // We need to clear existing events on a checkout, otherwise they are\n      // incremental event updates and should be appended\n      void addEvent(replay, event, isCheckout);\n\n      // Different behavior for full snapshots (type=2), ignore other event types\n      // See https://github.com/rrweb-io/rrweb/blob/d8f9290ca496712aa1e7d472549480c4e7876594/packages/rrweb/src/types.ts#L16\n      if (!isCheckout) {\n        return false;\n      }\n\n      // Additionally, create a meta event that will capture certain SDK settings.\n      // In order to handle buffer mode, this needs to either be done when we\n      // receive checkout events or at flush time.\n      //\n      // `isCheckout` is always true, but want to be explicit that it should\n      // only be added for checkouts\n      void addSettingsEvent(replay, isCheckout);\n\n      // If there is a previousSessionId after a full snapshot occurs, then\n      // the replay session was started due to session expiration. The new session\n      // is started before triggering a new checkout and contains the id\n      // of the previous session. Do not immediately flush in this case\n      // to avoid capturing only the checkout and instead the replay will\n      // be captured if they perform any follow-up actions.\n      if (replay.session && replay.session.previousSessionId) {\n        return true;\n      }\n\n      // When in buffer mode, make sure we adjust the session started date to the current earliest event of the buffer\n      // this should usually be the timestamp of the checkout event, but to be safe...\n      if (replay.recordingMode === 'buffer' && replay.session && replay.eventBuffer) {\n        const earliestEvent = replay.eventBuffer.getEarliestTimestamp();\n        if (earliestEvent) {\n          // eslint-disable-next-line no-console\n          const log = replay.getOptions()._experiments.traceInternals ? console.info : logger.info;\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n            log(`[Replay] Updating session start time to earliest event in buffer at ${earliestEvent}`);\n\n          replay.session.started = earliestEvent;\n\n          if (replay.getOptions().stickySession) {\n            saveSession(replay.session);\n          }\n        }\n      }\n\n      if (replay.recordingMode === 'session') {\n        // If the full snapshot is due to an initial load, we will not have\n        // a previous session ID. In this case, we want to buffer events\n        // for a set amount of time before flushing. This can help avoid\n        // capturing replays of users that immediately close the window.\n        void replay.flush();\n      }\n\n      return true;\n    });\n  };\n}\n\n/**\n * Exported for tests\n */\nfunction createOptionsEvent(replay) {\n  const options = replay.getOptions();\n  return {\n    type: EventType.Custom,\n    timestamp: Date.now(),\n    data: {\n      tag: 'options',\n      payload: {\n        sessionSampleRate: options.sessionSampleRate,\n        errorSampleRate: options.errorSampleRate,\n        useCompressionOption: options.useCompression,\n        blockAllMedia: options.blockAllMedia,\n        maskAllText: options.maskAllText,\n        maskAllInputs: options.maskAllInputs,\n        useCompression: replay.eventBuffer ? replay.eventBuffer.type === 'worker' : false,\n        networkDetailHasUrls: options.networkDetailAllowUrls.length > 0,\n        networkCaptureBodies: options.networkCaptureBodies,\n        networkRequestHasHeaders: options.networkRequestHeaders.length > 0,\n        networkResponseHasHeaders: options.networkResponseHeaders.length > 0,\n      },\n    },\n  };\n}\n\n/**\n * Add a \"meta\" event that contains a simplified view on current configuration\n * options. This should only be included on the first segment of a recording.\n */\nfunction addSettingsEvent(replay, isCheckout) {\n  // Only need to add this event when sending the first segment\n  if (!isCheckout || !replay.session || replay.session.segmentId !== 0) {\n    return Promise.resolve(null);\n  }\n\n  return addEvent(replay, createOptionsEvent(replay), false);\n}\n\n/**\n * Create a replay envelope ready to be sent.\n * This includes both the replay event, as well as the recording data.\n */\nfunction createReplayEnvelope(\n  replayEvent,\n  recordingData,\n  dsn,\n  tunnel,\n) {\n  return createEnvelope(\n    createEventEnvelopeHeaders(replayEvent, getSdkMetadataForEnvelopeHeader(replayEvent), tunnel, dsn),\n    [\n      [{ type: 'replay_event' }, replayEvent],\n      [\n        {\n          type: 'replay_recording',\n          // If string then we need to encode to UTF8, otherwise will have\n          // wrong size. TextEncoder has similar browser support to\n          // MutationObserver, although it does not accept IE11.\n          length:\n            typeof recordingData === 'string' ? new TextEncoder().encode(recordingData).length : recordingData.length,\n        },\n        recordingData,\n      ],\n    ],\n  );\n}\n\n/**\n * Prepare the recording data ready to be sent.\n */\nfunction prepareRecordingData({\n  recordingData,\n  headers,\n}\n\n) {\n  let payloadWithSequence;\n\n  // XXX: newline is needed to separate sequence id from events\n  const replayHeaders = `${JSON.stringify(headers)}\n`;\n\n  if (typeof recordingData === 'string') {\n    payloadWithSequence = `${replayHeaders}${recordingData}`;\n  } else {\n    const enc = new TextEncoder();\n    // XXX: newline is needed to separate sequence id from events\n    const sequence = enc.encode(replayHeaders);\n    // Merge the two Uint8Arrays\n    payloadWithSequence = new Uint8Array(sequence.length + recordingData.length);\n    payloadWithSequence.set(sequence);\n    payloadWithSequence.set(recordingData, sequence.length);\n  }\n\n  return payloadWithSequence;\n}\n\n/**\n * Prepare a replay event & enrich it with the SDK metadata.\n */\nasync function prepareReplayEvent({\n  client,\n  scope,\n  replayId: event_id,\n  event,\n}\n\n) {\n  const integrations =\n    typeof client._integrations === 'object' && client._integrations !== null && !Array.isArray(client._integrations)\n      ? Object.keys(client._integrations)\n      : undefined;\n  const preparedEvent = (await prepareEvent(\n    client.getOptions(),\n    event,\n    { event_id, integrations },\n    scope,\n  )) ;\n\n  // If e.g. a global event processor returned null\n  if (!preparedEvent) {\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n  const metadata = client.getSdkMetadata && client.getSdkMetadata();\n  const { name, version } = (metadata && metadata.sdk) || {};\n\n  preparedEvent.sdk = {\n    ...preparedEvent.sdk,\n    name: name || 'sentry.javascript.unknown',\n    version: version || '0.0.0',\n  };\n\n  return preparedEvent;\n}\n\n/**\n * Send replay attachment using `fetch()`\n */\nasync function sendReplayRequest({\n  recordingData,\n  replayId,\n  segmentId: segment_id,\n  eventContext,\n  timestamp,\n  session,\n}) {\n  const preparedRecordingData = prepareRecordingData({\n    recordingData,\n    headers: {\n      segment_id,\n    },\n  });\n\n  const { urls, errorIds, traceIds, initialTimestamp } = eventContext;\n\n  const hub = getCurrentHub();\n  const client = hub.getClient();\n  const scope = hub.getScope();\n  const transport = client && client.getTransport();\n  const dsn = client && client.getDsn();\n\n  if (!client || !transport || !dsn || !session.sampled) {\n    return;\n  }\n\n  const baseEvent = {\n    type: REPLAY_EVENT_NAME,\n    replay_start_timestamp: initialTimestamp / 1000,\n    timestamp: timestamp / 1000,\n    error_ids: errorIds,\n    trace_ids: traceIds,\n    urls,\n    replay_id: replayId,\n    segment_id,\n    replay_type: session.sampled,\n  };\n\n  const replayEvent = await prepareReplayEvent({ scope, client, replayId, event: baseEvent });\n\n  if (!replayEvent) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'replay', baseEvent);\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('An event processor returned `null`, will not send event.');\n    return;\n  }\n\n  /*\n  For reference, the fully built event looks something like this:\n  {\n      \"type\": \"replay_event\",\n      \"timestamp\": 1670837008.634,\n      \"error_ids\": [\n          \"errorId\"\n      ],\n      \"trace_ids\": [\n          \"traceId\"\n      ],\n      \"urls\": [\n          \"https://example.com\"\n      ],\n      \"replay_id\": \"eventId\",\n      \"segment_id\": 3,\n      \"replay_type\": \"error\",\n      \"platform\": \"javascript\",\n      \"event_id\": \"eventId\",\n      \"environment\": \"production\",\n      \"sdk\": {\n          \"integrations\": [\n              \"BrowserTracing\",\n              \"Replay\"\n          ],\n          \"name\": \"sentry.javascript.browser\",\n          \"version\": \"7.25.0\"\n      },\n      \"sdkProcessingMetadata\": {},\n      \"contexts\": {\n      },\n  }\n  */\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete replayEvent.sdkProcessingMetadata;\n\n  const envelope = createReplayEnvelope(replayEvent, preparedRecordingData, dsn, client.getOptions().tunnel);\n\n  let response;\n\n  try {\n    response = await transport.send(envelope);\n  } catch (err) {\n    const error = new Error(UNABLE_TO_SEND_REPLAY);\n\n    try {\n      // In case browsers don't allow this property to be writable\n      // @ts-ignore This needs lib es2022 and newer\n      error.cause = err;\n    } catch (e) {\n      // nothing to do\n    }\n    throw error;\n  }\n\n  // TODO (v8): we can remove this guard once transport.send's type signature doesn't include void anymore\n  if (!response) {\n    return response;\n  }\n\n  // If the status code is invalid, we want to immediately stop & not retry\n  if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n    throw new TransportStatusCodeError(response.statusCode);\n  }\n\n  return response;\n}\n\n/**\n * This error indicates that the transport returned an invalid status code.\n */\nclass TransportStatusCodeError extends Error {\n   constructor(statusCode) {\n    super(`Transport returned status code ${statusCode}`);\n  }\n}\n\n/**\n * Finalize and send the current replay event to Sentry\n */\nasync function sendReplay(\n  replayData,\n  retryConfig = {\n    count: 0,\n    interval: RETRY_BASE_INTERVAL,\n  },\n) {\n  const { recordingData, options } = replayData;\n\n  // short circuit if there's no events to upload (this shouldn't happen as _runFlush makes this check)\n  if (!recordingData.length) {\n    return;\n  }\n\n  try {\n    await sendReplayRequest(replayData);\n    return true;\n  } catch (err) {\n    if (err instanceof TransportStatusCodeError) {\n      throw err;\n    }\n\n    // Capture error for every failed replay\n    setContext('Replays', {\n      _retryCount: retryConfig.count,\n    });\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && options._experiments && options._experiments.captureExceptions) {\n      captureException(err);\n    }\n\n    // If an error happened here, it's likely that uploading the attachment\n    // failed, we'll can retry with the same events payload\n    if (retryConfig.count >= RETRY_MAX_COUNT) {\n      const error = new Error(`${UNABLE_TO_SEND_REPLAY} - max retries exceeded`);\n\n      try {\n        // In case browsers don't allow this property to be writable\n        // @ts-ignore This needs lib es2022 and newer\n        error.cause = err;\n      } catch (e) {\n        // nothing to do\n      }\n\n      throw error;\n    }\n\n    // will retry in intervals of 5, 10, 30\n    retryConfig.interval *= ++retryConfig.count;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          await sendReplay(replayData, retryConfig);\n          resolve(true);\n        } catch (err) {\n          reject(err);\n        }\n      }, retryConfig.interval);\n    });\n  }\n}\n\nconst THROTTLED = '__THROTTLED';\nconst SKIPPED = '__SKIPPED';\n\n/**\n * Create a throttled function off a given function.\n * When calling the throttled function, it will call the original function only\n * if it hasn't been called more than `maxCount` times in the last `durationSeconds`.\n *\n * Returns `THROTTLED` if throttled for the first time, after that `SKIPPED`,\n * or else the return value of the original function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction throttle(\n  fn,\n  maxCount,\n  durationSeconds,\n) {\n  const counter = new Map();\n\n  const _cleanup = (now) => {\n    const threshold = now - durationSeconds;\n    counter.forEach((_value, key) => {\n      if (key < threshold) {\n        counter.delete(key);\n      }\n    });\n  };\n\n  const _getTotalCount = () => {\n    return [...counter.values()].reduce((a, b) => a + b, 0);\n  };\n\n  let isThrottled = false;\n\n  return (...rest) => {\n    // Date in second-precision, which we use as basis for the throttling\n    const now = Math.floor(Date.now() / 1000);\n\n    // First, make sure to delete any old entries\n    _cleanup(now);\n\n    // If already over limit, do nothing\n    if (_getTotalCount() >= maxCount) {\n      const wasThrottled = isThrottled;\n      isThrottled = true;\n      return wasThrottled ? SKIPPED : THROTTLED;\n    }\n\n    isThrottled = false;\n    const count = counter.get(now) || 0;\n    counter.set(now, count + 1);\n\n    return fn(...rest);\n  };\n}\n\n/* eslint-disable max-lines */ // TODO: We might want to split this file up\n\n/**\n * The main replay container class, which holds all the state and methods for recording and sending replays.\n */\nclass ReplayContainer  {\n   __init() {this.eventBuffer = null;}\n\n  /**\n   * List of PerformanceEntry from PerformanceObserver\n   */\n   __init2() {this.performanceEvents = [];}\n\n  /**\n   * Recording can happen in one of three modes:\n   *   - session: Record the whole session, sending it continuously\n   *   - buffer: Always keep the last 60s of recording, requires:\n   *     - having replaysOnErrorSampleRate > 0 to capture replay when an error occurs\n   *     - or calling `flush()` to send the replay\n   */\n   __init3() {this.recordingMode = 'session';}\n\n  /**\n   * The current or last active transcation.\n   * This is only available when performance is enabled.\n   */\n\n  /**\n   * These are here so we can overwrite them in tests etc.\n   * @hidden\n   */\n    __init4() {this.timeouts = {\n    sessionIdlePause: SESSION_IDLE_PAUSE_DURATION,\n    sessionIdleExpire: SESSION_IDLE_EXPIRE_DURATION,\n    maxSessionLife: MAX_SESSION_LIFE,\n  }; }\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n\n   __init5() {this._performanceObserver = null;}\n\n   __init6() {this._flushLock = null;}\n\n  /**\n   * Timestamp of the last user activity. This lives across sessions.\n   */\n   __init7() {this._lastActivity = Date.now();}\n\n  /**\n   * Is the integration currently active?\n   */\n   __init8() {this._isEnabled = false;}\n\n  /**\n   * Paused is a state where:\n   * - DOM Recording is not listening at all\n   * - Nothing will be added to event buffer (e.g. core SDK events)\n   */\n   __init9() {this._isPaused = false;}\n\n  /**\n   * Have we attached listeners to the core SDK?\n   * Note we have to track this as there is no way to remove instrumentation handlers.\n   */\n   __init10() {this._hasInitializedCoreListeners = false;}\n\n  /**\n   * Function to stop recording\n   */\n   __init11() {this._stopRecording = null;}\n\n   __init12() {this._context = {\n    errorIds: new Set(),\n    traceIds: new Set(),\n    urls: [],\n    initialTimestamp: Date.now(),\n    initialUrl: '',\n  };}\n\n   constructor({\n    options,\n    recordingOptions,\n  }\n\n) {ReplayContainer.prototype.__init.call(this);ReplayContainer.prototype.__init2.call(this);ReplayContainer.prototype.__init3.call(this);ReplayContainer.prototype.__init4.call(this);ReplayContainer.prototype.__init5.call(this);ReplayContainer.prototype.__init6.call(this);ReplayContainer.prototype.__init7.call(this);ReplayContainer.prototype.__init8.call(this);ReplayContainer.prototype.__init9.call(this);ReplayContainer.prototype.__init10.call(this);ReplayContainer.prototype.__init11.call(this);ReplayContainer.prototype.__init12.call(this);ReplayContainer.prototype.__init13.call(this);ReplayContainer.prototype.__init14.call(this);ReplayContainer.prototype.__init15.call(this);ReplayContainer.prototype.__init16.call(this);ReplayContainer.prototype.__init17.call(this);ReplayContainer.prototype.__init18.call(this);\n    this._recordingOptions = recordingOptions;\n    this._options = options;\n\n    this._debouncedFlush = debounce(() => this._flush(), this._options.flushMinDelay, {\n      maxWait: this._options.flushMaxDelay,\n    });\n\n    this._throttledAddEvent = throttle(\n      (event, isCheckout) => addEvent(this, event, isCheckout),\n      // Max 300 events...\n      300,\n      // ... per 5s\n      5,\n    );\n\n    const { slowClickTimeout, slowClickIgnoreSelectors } = this.getOptions();\n\n    const slowClickConfig = slowClickTimeout\n      ? {\n          threshold: Math.min(SLOW_CLICK_THRESHOLD, slowClickTimeout),\n          timeout: slowClickTimeout,\n          scrollTimeout: SLOW_CLICK_SCROLL_TIMEOUT,\n          ignoreSelector: slowClickIgnoreSelectors ? slowClickIgnoreSelectors.join(',') : '',\n        }\n      : undefined;\n\n    if (slowClickConfig) {\n      this.clickDetector = new ClickDetector(this, slowClickConfig);\n    }\n  }\n\n  /** Get the event context. */\n   getContext() {\n    return this._context;\n  }\n\n  /** If recording is currently enabled. */\n   isEnabled() {\n    return this._isEnabled;\n  }\n\n  /** If recording is currently paused. */\n   isPaused() {\n    return this._isPaused;\n  }\n\n  /** Get the replay integration options. */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * Initializes the plugin based on sampling configuration. Should not be\n   * called outside of constructor.\n   */\n   initializeSampling() {\n    const { errorSampleRate, sessionSampleRate } = this._options;\n\n    // If neither sample rate is > 0, then do nothing - user will need to call one of\n    // `start()` or `startBuffering` themselves.\n    if (errorSampleRate <= 0 && sessionSampleRate <= 0) {\n      return;\n    }\n\n    // Otherwise if there is _any_ sample rate set, try to load an existing\n    // session, or create a new one.\n    const isSessionSampled = this._loadAndCheckSession();\n\n    if (!isSessionSampled) {\n      // This should only occur if `errorSampleRate` is 0 and was unsampled for\n      // session-based replay. In this case there is nothing to do.\n      return;\n    }\n\n    if (!this.session) {\n      // This should not happen, something wrong has occurred\n      this._handleException(new Error('Unable to initialize and create session'));\n      return;\n    }\n\n    if (this.session.sampled && this.session.sampled !== 'session') {\n      // If not sampled as session-based, then recording mode will be `buffer`\n      // Note that we don't explicitly check if `sampled === 'buffer'` because we\n      // could have sessions from Session storage that are still `error` from\n      // prior SDK version.\n      this.recordingMode = 'buffer';\n    }\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * _performanceObserver, Recording, Sentry SDK, etc)\n   */\n   start() {\n    if (this._isEnabled && this.recordingMode === 'session') {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    if (this._isEnabled && this.recordingMode === 'buffer') {\n      throw new Error('Replay buffering is in progress, call `flush()` to save the replay');\n    }\n\n    const previousSessionId = this.session && this.session.id;\n\n    const { session } = getSession({\n      timeouts: this.timeouts,\n      stickySession: Boolean(this._options.stickySession),\n      currentSession: this.session,\n      // This is intentional: create a new session-based replay when calling `start()`\n      sessionSampleRate: 1,\n      allowBuffering: false,\n    });\n\n    session.previousSessionId = previousSessionId;\n    this.session = session;\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, an error occurs.\n   */\n   startBuffering() {\n    if (this._isEnabled) {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    const previousSessionId = this.session && this.session.id;\n\n    const { session } = getSession({\n      timeouts: this.timeouts,\n      stickySession: Boolean(this._options.stickySession),\n      currentSession: this.session,\n      sessionSampleRate: 0,\n      allowBuffering: true,\n    });\n\n    session.previousSessionId = previousSessionId;\n    this.session = session;\n\n    this.recordingMode = 'buffer';\n    this._initializeRecording();\n  }\n\n  /**\n   * Start recording.\n   *\n   * Note that this will cause a new DOM checkout\n   */\n   startRecording() {\n    try {\n      this._stopRecording = record({\n        ...this._recordingOptions,\n        // When running in error sampling mode, we need to overwrite `checkoutEveryNms`\n        // Without this, it would record forever, until an error happens, which we don't want\n        // instead, we'll always keep the last 60 seconds of replay before an error happened\n        ...(this.recordingMode === 'buffer' && { checkoutEveryNms: BUFFER_CHECKOUT_TIME }),\n        emit: getHandleRecordingEmit(this),\n        onMutation: this._onMutationHandler,\n      });\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Stops the recording, if it was running.\n   *\n   * Returns true if it was previously stopped, or is now stopped,\n   * otherwise false.\n   */\n   stopRecording() {\n    try {\n      if (this._stopRecording) {\n        this._stopRecording();\n        this._stopRecording = undefined;\n      }\n\n      return true;\n    } catch (err) {\n      this._handleException(err);\n      return false;\n    }\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n   async stop(reason) {\n    if (!this._isEnabled) {\n      return;\n    }\n\n    try {\n      if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n        const msg = `[Replay] Stopping Replay${reason ? ` triggered by ${reason}` : ''}`;\n\n        // When `traceInternals` is enabled, we want to log this to the console\n        // Else, use the regular debug output\n        // eslint-disable-next-line\n        const log = this.getOptions()._experiments.traceInternals ? console.warn : logger.log;\n        log(msg);\n      }\n\n      // We can't move `_isEnabled` after awaiting a flush, otherwise we can\n      // enter into an infinite loop when `stop()` is called while flushing.\n      this._isEnabled = false;\n      this._removeListeners();\n      this.stopRecording();\n\n      this._debouncedFlush.cancel();\n      // See comment above re: `_isEnabled`, we \"force\" a flush, ignoring the\n      // `_isEnabled` state of the plugin since it was disabled above.\n      if (this.recordingMode === 'session') {\n        await this._flush({ force: true });\n      }\n\n      // After flush, destroy event buffer\n      this.eventBuffer && this.eventBuffer.destroy();\n      this.eventBuffer = null;\n\n      // Clear session from session storage, note this means if a new session\n      // is started after, it will not have `previousSessionId`\n      clearSession(this);\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Pause some replay functionality. See comments for `_isPaused`.\n   * This differs from stop as this only stops DOM recording, it is\n   * not as thorough of a shutdown as `stop()`.\n   */\n   pause() {\n    this._isPaused = true;\n    this.stopRecording();\n  }\n\n  /**\n   * Resumes recording, see notes for `pause().\n   *\n   * Note that calling `startRecording()` here will cause a\n   * new DOM checkout.`\n   */\n   resume() {\n    if (!this._loadAndCheckSession()) {\n      return;\n    }\n\n    this._isPaused = false;\n    this.startRecording();\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n   async sendBufferedReplayOrFlush({ continueRecording = true } = {}) {\n    if (this.recordingMode === 'session') {\n      return this.flushImmediate();\n    }\n\n    const activityTime = Date.now();\n\n    // eslint-disable-next-line no-console\n    const log = this.getOptions()._experiments.traceInternals ? console.info : logger.info;\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && log(`[Replay] Converting buffer to session, starting at ${activityTime}`);\n\n    // Allow flush to complete before resuming as a session recording, otherwise\n    // the checkout from `startRecording` may be included in the payload.\n    // Prefer to keep the error replay as a separate (and smaller) segment\n    // than the session replay.\n    await this.flushImmediate();\n\n    const hasStoppedRecording = this.stopRecording();\n\n    if (!continueRecording || !hasStoppedRecording) {\n      return;\n    }\n\n    // Re-start recording, but in \"session\" recording mode\n\n    // Reset all \"capture on error\" configuration before\n    // starting a new recording\n    this.recordingMode = 'session';\n\n    // Once this session ends, we do not want to refresh it\n    if (this.session) {\n      this.session.shouldRefresh = false;\n\n      // It's possible that the session lifespan is > max session lifespan\n      // because we have been buffering beyond max session lifespan (we ignore\n      // expiration given that `shouldRefresh` is true). Since we flip\n      // `shouldRefresh`, the session could be considered expired due to\n      // lifespan, which is not what we want. Update session start date to be\n      // the current timestamp, so that session is not considered to be\n      // expired. This means that max replay duration can be MAX_SESSION_LIFE +\n      // (length of buffer), which we are ok with.\n      this._updateUserActivity(activityTime);\n      this._updateSessionActivity(activityTime);\n      this.session.started = activityTime;\n      this._maybeSaveSession();\n    }\n\n    this.startRecording();\n  }\n\n  /**\n   * We want to batch uploads of replay events. Save events only if\n   * `<flushMinDelay>` milliseconds have elapsed since the last event\n   * *OR* if `<flushMaxDelay>` milliseconds have elapsed.\n   *\n   * Accepts a callback to perform side-effects and returns true to stop batch\n   * processing and hand back control to caller.\n   */\n   addUpdate(cb) {\n    // We need to always run `cb` (e.g. in the case of `this.recordingMode == 'buffer'`)\n    const cbResult = cb();\n\n    // If this option is turned on then we will only want to call `flush`\n    // explicitly\n    if (this.recordingMode === 'buffer') {\n      return;\n    }\n\n    // If callback is true, we do not want to continue with flushing -- the\n    // caller will need to handle it.\n    if (cbResult === true) {\n      return;\n    }\n\n    // addUpdate is called quite frequently - use _debouncedFlush so that it\n    // respects the flush delays and does not flush immediately\n    this._debouncedFlush();\n  }\n\n  /**\n   * Updates the user activity timestamp and resumes recording. This should be\n   * called in an event handler for a user action that we consider as the user\n   * being \"active\" (e.g. a mouse click).\n   */\n   triggerUserActivity() {\n    this._updateUserActivity();\n\n    // This case means that recording was once stopped due to inactivity.\n    // Ensure that recording is resumed.\n    if (!this._stopRecording) {\n      // Create a new session, otherwise when the user action is flushed, it\n      // will get rejected due to an expired session.\n      if (!this._loadAndCheckSession()) {\n        return;\n      }\n\n      // Note: This will cause a new DOM checkout\n      this.resume();\n      return;\n    }\n\n    // Otherwise... recording was never suspended, continue as normalish\n    this.checkAndHandleExpiredSession();\n\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Updates the user activity timestamp *without* resuming\n   * recording. Some user events (e.g. keydown) can be create\n   * low-value replays that only contain the keypress as a\n   * breadcrumb. Instead this would require other events to\n   * create a new replay after a session has expired.\n   */\n   updateUserActivity() {\n    this._updateUserActivity();\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Only flush if `this.recordingMode === 'session'`\n   */\n   conditionalFlush() {\n    if (this.recordingMode === 'buffer') {\n      return Promise.resolve();\n    }\n\n    return this.flushImmediate();\n  }\n\n  /**\n   * Flush using debounce flush\n   */\n   flush() {\n    return this._debouncedFlush() ;\n  }\n\n  /**\n   * Always flush via `_debouncedFlush` so that we do not have flushes triggered\n   * from calling both `flush` and `_debouncedFlush`. Otherwise, there could be\n   * cases of mulitple flushes happening closely together.\n   */\n   flushImmediate() {\n    this._debouncedFlush();\n    // `.flush` is provided by the debounced function, analogously to lodash.debounce\n    return this._debouncedFlush.flush() ;\n  }\n\n  /**\n   * Cancels queued up flushes.\n   */\n   cancelFlush() {\n    this._debouncedFlush.cancel();\n  }\n\n  /** Get the current sesion (=replay) ID */\n   getSessionId() {\n    return this.session && this.session.id;\n  }\n\n  /**\n   * Checks if recording should be stopped due to user inactivity. Otherwise\n   * check if session is expired and create a new session if so. Triggers a new\n   * full snapshot on new session.\n   *\n   * Returns true if session is not expired, false otherwise.\n   * @hidden\n   */\n   checkAndHandleExpiredSession() {\n    const oldSessionId = this.getSessionId();\n\n    // Prevent starting a new session if the last user activity is older than\n    // SESSION_IDLE_PAUSE_DURATION. Otherwise non-user activity can trigger a new\n    // session+recording. This creates noisy replays that do not have much\n    // content in them.\n    if (\n      this._lastActivity &&\n      isExpired(this._lastActivity, this.timeouts.sessionIdlePause) &&\n      this.session &&\n      this.session.sampled === 'session'\n    ) {\n      // Pause recording only for session-based replays. Otherwise, resuming\n      // will create a new replay and will conflict with users who only choose\n      // to record error-based replays only. (e.g. the resumed replay will not\n      // contain a reference to an error)\n      this.pause();\n      return;\n    }\n\n    // --- There is recent user activity --- //\n    // This will create a new session if expired, based on expiry length\n    if (!this._loadAndCheckSession()) {\n      return;\n    }\n\n    // Session was expired if session ids do not match\n    const expired = oldSessionId !== this.getSessionId();\n\n    if (!expired) {\n      return true;\n    }\n\n    // Session is expired, trigger a full snapshot (which will create a new session)\n    this._triggerFullSnapshot();\n\n    return false;\n  }\n\n  /**\n   * Capture some initial state that can change throughout the lifespan of the\n   * replay. This is required because otherwise they would be captured at the\n   * first flush.\n   */\n   setInitialState() {\n    const urlPath = `${WINDOW.location.pathname}${WINDOW.location.hash}${WINDOW.location.search}`;\n    const url = `${WINDOW.location.origin}${urlPath}`;\n\n    this.performanceEvents = [];\n\n    // Reset _context as well\n    this._clearContext();\n\n    this._context.initialUrl = url;\n    this._context.initialTimestamp = Date.now();\n    this._context.urls.push(url);\n  }\n\n  /**\n   * Add a breadcrumb event, that may be throttled.\n   * If it was throttled, we add a custom breadcrumb to indicate that.\n   */\n   throttledAddEvent(\n    event,\n    isCheckout,\n  ) {\n    const res = this._throttledAddEvent(event, isCheckout);\n\n    // If this is THROTTLED, it means we have throttled the event for the first time\n    // In this case, we want to add a breadcrumb indicating that something was skipped\n    if (res === THROTTLED) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.throttled',\n      });\n\n      this.addUpdate(() => {\n        void addEvent(this, {\n          type: EventType.Custom,\n          timestamp: breadcrumb.timestamp || 0,\n          data: {\n            tag: 'breadcrumb',\n            payload: breadcrumb,\n            metric: true,\n          },\n        });\n      });\n    }\n\n    return res;\n  }\n\n  /**\n   * This will get the parametrized route name of the current page.\n   * This is only available if performance is enabled, and if an instrumented router is used.\n   */\n   getCurrentRoute() {\n    const lastTransaction = this.lastTransaction || getCurrentHub().getScope().getTransaction();\n    if (!lastTransaction || !['route', 'custom'].includes(lastTransaction.metadata.source)) {\n      return undefined;\n    }\n\n    return lastTransaction.name;\n  }\n\n  /**\n   * Initialize and start all listeners to varying events (DOM,\n   * Performance Observer, Recording, Sentry SDK, etc)\n   */\n   _initializeRecording() {\n    this.setInitialState();\n\n    // this method is generally called on page load or manually - in both cases\n    // we should treat it as an activity\n    this._updateSessionActivity();\n\n    this.eventBuffer = createEventBuffer({\n      useCompression: this._options.useCompression,\n    });\n\n    this._removeListeners();\n    this._addListeners();\n\n    // Need to set as enabled before we start recording, as `record()` can trigger a flush with a new checkout\n    this._isEnabled = true;\n\n    this.startRecording();\n  }\n\n  /** A wrapper to conditionally capture exceptions. */\n   _handleException(error) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('[Replay]', error);\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && this._options._experiments && this._options._experiments.captureExceptions) {\n      captureException(error);\n    }\n  }\n\n  /**\n   * Loads (or refreshes) the current session.\n   * Returns false if session is not recorded.\n   */\n   _loadAndCheckSession() {\n    const { type, session } = getSession({\n      timeouts: this.timeouts,\n      stickySession: Boolean(this._options.stickySession),\n      currentSession: this.session,\n      sessionSampleRate: this._options.sessionSampleRate,\n      allowBuffering: this._options.errorSampleRate > 0 || this.recordingMode === 'buffer',\n    });\n\n    // If session was newly created (i.e. was not loaded from storage), then\n    // enable flag to create the root replay\n    if (type === 'new') {\n      this.setInitialState();\n    }\n\n    const currentSessionId = this.getSessionId();\n    if (session.id !== currentSessionId) {\n      session.previousSessionId = currentSessionId;\n    }\n\n    this.session = session;\n\n    if (!this.session.sampled) {\n      void this.stop('session unsampled');\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Adds listeners to record events for the replay\n   */\n   _addListeners() {\n    try {\n      WINDOW.document.addEventListener('visibilitychange', this._handleVisibilityChange);\n      WINDOW.addEventListener('blur', this._handleWindowBlur);\n      WINDOW.addEventListener('focus', this._handleWindowFocus);\n      WINDOW.addEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.addListeners();\n      }\n\n      // There is no way to remove these listeners, so ensure they are only added once\n      if (!this._hasInitializedCoreListeners) {\n        addGlobalListeners(this);\n\n        this._hasInitializedCoreListeners = true;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n\n    // PerformanceObserver //\n    if (!('PerformanceObserver' in WINDOW)) {\n      return;\n    }\n\n    this._performanceObserver = setupPerformanceObserver(this);\n  }\n\n  /**\n   * Cleans up listeners that were created in `_addListeners`\n   */\n   _removeListeners() {\n    try {\n      WINDOW.document.removeEventListener('visibilitychange', this._handleVisibilityChange);\n\n      WINDOW.removeEventListener('blur', this._handleWindowBlur);\n      WINDOW.removeEventListener('focus', this._handleWindowFocus);\n      WINDOW.removeEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.removeListeners();\n      }\n\n      if (this._performanceObserver) {\n        this._performanceObserver.disconnect();\n        this._performanceObserver = null;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Handle when visibility of the page content changes. Opening a new tab will\n   * cause the state to change to hidden because of content of current page will\n   * be hidden. Likewise, moving a different window to cover the contents of the\n   * page will also trigger a change to a hidden state.\n   */\n   __init13() {this._handleVisibilityChange = () => {\n    if (WINDOW.document.visibilityState === 'visible') {\n      this._doChangeToForegroundTasks();\n    } else {\n      this._doChangeToBackgroundTasks();\n    }\n  };}\n\n  /**\n   * Handle when page is blurred\n   */\n   __init14() {this._handleWindowBlur = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.blur',\n    });\n\n    // Do not count blur as a user action -- it's part of the process of them\n    // leaving the page\n    this._doChangeToBackgroundTasks(breadcrumb);\n  };}\n\n  /**\n   * Handle when page is focused\n   */\n   __init15() {this._handleWindowFocus = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.focus',\n    });\n\n    // Do not count focus as a user action -- instead wait until they focus and\n    // interactive with page\n    this._doChangeToForegroundTasks(breadcrumb);\n  };}\n\n  /** Ensure page remains active when a key is pressed. */\n   __init16() {this._handleKeyboardEvent = (event) => {\n    handleKeyboardEvent(this, event);\n  };}\n\n  /**\n   * Tasks to run when we consider a page to be hidden (via blurring and/or visibility)\n   */\n   _doChangeToBackgroundTasks(breadcrumb) {\n    if (!this.session) {\n      return;\n    }\n\n    const expired = isSessionExpired(this.session, this.timeouts);\n\n    if (breadcrumb && !expired) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Send replay when the page/tab becomes hidden. There is no reason to send\n    // replay if it becomes visible, since no actions we care about were done\n    // while it was hidden\n    void this.conditionalFlush();\n  }\n\n  /**\n   * Tasks to run when we consider a page to be visible (via focus and/or visibility)\n   */\n   _doChangeToForegroundTasks(breadcrumb) {\n    if (!this.session) {\n      return;\n    }\n\n    const isSessionActive = this.checkAndHandleExpiredSession();\n\n    if (!isSessionActive) {\n      // If the user has come back to the page within SESSION_IDLE_PAUSE_DURATION\n      // ms, we will re-use the existing session, otherwise create a new\n      // session\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Replay] Document has become active, but session has expired');\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n  }\n\n  /**\n   * Trigger rrweb to take a full snapshot which will cause this plugin to\n   * create a new Replay event.\n   */\n   _triggerFullSnapshot(checkout = true) {\n    try {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Replay] Taking full rrweb snapshot');\n      record.takeFullSnapshot(checkout);\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Update user activity (across session lifespans)\n   */\n   _updateUserActivity(_lastActivity = Date.now()) {\n    this._lastActivity = _lastActivity;\n  }\n\n  /**\n   * Updates the session's last activity timestamp\n   */\n   _updateSessionActivity(_lastActivity = Date.now()) {\n    if (this.session) {\n      this.session.lastActivity = _lastActivity;\n      this._maybeSaveSession();\n    }\n  }\n\n  /**\n   * Helper to create (and buffer) a replay breadcrumb from a core SDK breadcrumb\n   */\n   _createCustomBreadcrumb(breadcrumb) {\n    this.addUpdate(() => {\n      void this.throttledAddEvent({\n        type: EventType.Custom,\n        timestamp: breadcrumb.timestamp || 0,\n        data: {\n          tag: 'breadcrumb',\n          payload: breadcrumb,\n        },\n      });\n    });\n  }\n\n  /**\n   * Observed performance events are added to `this.performanceEvents`. These\n   * are included in the replay event before it is finished and sent to Sentry.\n   */\n   _addPerformanceEntries() {\n    // Copy and reset entries before processing\n    const entries = [...this.performanceEvents];\n    this.performanceEvents = [];\n\n    return Promise.all(createPerformanceSpans(this, createPerformanceEntries(entries)));\n  }\n\n  /**\n   * Clear _context\n   */\n   _clearContext() {\n    // XXX: `initialTimestamp` and `initialUrl` do not get cleared\n    this._context.errorIds.clear();\n    this._context.traceIds.clear();\n    this._context.urls = [];\n  }\n\n  /** Update the initial timestamp based on the buffer content. */\n   _updateInitialTimestampFromEventBuffer() {\n    const { session, eventBuffer } = this;\n    if (!session || !eventBuffer) {\n      return;\n    }\n\n    // we only ever update this on the initial segment\n    if (session.segmentId) {\n      return;\n    }\n\n    const earliestEvent = eventBuffer.getEarliestTimestamp();\n    if (earliestEvent && earliestEvent < this._context.initialTimestamp) {\n      this._context.initialTimestamp = earliestEvent;\n    }\n  }\n\n  /**\n   * Return and clear _context\n   */\n   _popEventContext() {\n    const _context = {\n      initialTimestamp: this._context.initialTimestamp,\n      initialUrl: this._context.initialUrl,\n      errorIds: Array.from(this._context.errorIds),\n      traceIds: Array.from(this._context.traceIds),\n      urls: this._context.urls,\n    };\n\n    this._clearContext();\n\n    return _context;\n  }\n\n  /**\n   * Flushes replay event buffer to Sentry.\n   *\n   * Performance events are only added right before flushing - this is\n   * due to the buffered performance observer events.\n   *\n   * Should never be called directly, only by `flush`\n   */\n   async _runFlush() {\n    if (!this.session || !this.eventBuffer) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('[Replay] No session or eventBuffer found to flush.');\n      return;\n    }\n\n    await this._addPerformanceEntries();\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer || !this.eventBuffer.hasEvents) {\n      return;\n    }\n\n    // Only attach memory event if eventBuffer is not empty\n    await addMemoryEntry(this);\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer) {\n      return;\n    }\n\n    try {\n      // This uses the data from the eventBuffer, so we need to call this before `finish()\n      this._updateInitialTimestampFromEventBuffer();\n\n      // Note this empties the event buffer regardless of outcome of sending replay\n      const recordingData = await this.eventBuffer.finish();\n\n      // NOTE: Copy values from instance members, as it's possible they could\n      // change before the flush finishes.\n      const replayId = this.session.id;\n      const eventContext = this._popEventContext();\n      // Always increment segmentId regardless of outcome of sending replay\n      const segmentId = this.session.segmentId++;\n      this._maybeSaveSession();\n\n      await sendReplay({\n        replayId,\n        recordingData,\n        segmentId,\n        eventContext,\n        session: this.session,\n        options: this.getOptions(),\n        timestamp: Date.now(),\n      });\n    } catch (err) {\n      this._handleException(err);\n\n      // This means we retried 3 times and all of them failed,\n      // or we ran into a problem we don't want to retry, like rate limiting.\n      // In this case, we want to completely stop the replay - otherwise, we may get inconsistent segments\n      void this.stop('sendReplay');\n\n      const client = getCurrentHub().getClient();\n\n      if (client) {\n        client.recordDroppedEvent('send_error', 'replay');\n      }\n    }\n  }\n\n  /**\n   * Flush recording data to Sentry. Creates a lock so that only a single flush\n   * can be active at a time. Do not call this directly.\n   */\n   __init17() {this._flush = async ({\n    force = false,\n  }\n\n = {}) => {\n    if (!this._isEnabled && !force) {\n      // This can happen if e.g. the replay was stopped because of exceeding the retry limit\n      return;\n    }\n\n    if (!this.checkAndHandleExpiredSession()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('[Replay] Attempting to finish replay event after session expired.');\n      return;\n    }\n\n    if (!this.session) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('[Replay] No session found to flush.');\n      return;\n    }\n\n    const start = this.session.started;\n    const now = Date.now();\n    const duration = now - start;\n\n    // If session is too short, or too long (allow some wiggle room over maxSessionLife), do not send it\n    // This _should_ not happen, but it may happen if flush is triggered due to a page activity change or similar\n    if (duration < this._options.minReplayDuration || duration > this.timeouts.maxSessionLife + 5000) {\n      // eslint-disable-next-line no-console\n      const log = this.getOptions()._experiments.traceInternals ? console.warn : logger.warn;\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        log(\n          `[Replay] Session duration (${Math.floor(duration / 1000)}s) is too short or too long, not sending replay.`,\n        );\n\n      return;\n    }\n\n    // A flush is about to happen, cancel any queued flushes\n    this._debouncedFlush.cancel();\n\n    // this._flushLock acts as a lock so that future calls to `_flush()`\n    // will be blocked until this promise resolves\n    if (!this._flushLock) {\n      this._flushLock = this._runFlush();\n      await this._flushLock;\n      this._flushLock = null;\n      return;\n    }\n\n    // Wait for previous flush to finish, then call the debounced `_flush()`.\n    // It's possible there are other flush requests queued and waiting for it\n    // to resolve. We want to reduce all outstanding requests (as well as any\n    // new flush requests that occur within a second of the locked flush\n    // completing) into a single flush.\n\n    try {\n      await this._flushLock;\n    } catch (err) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(err);\n    } finally {\n      this._debouncedFlush();\n    }\n  };}\n\n  /** Save the session, if it is sticky */\n   _maybeSaveSession() {\n    if (this.session && this._options.stickySession) {\n      saveSession(this.session);\n    }\n  }\n\n  /** Handler for rrweb.record.onMutation */\n   __init18() {this._onMutationHandler = (mutations) => {\n    const count = mutations.length;\n\n    const mutationLimit = this._options.mutationLimit;\n    const mutationBreadcrumbLimit = this._options.mutationBreadcrumbLimit;\n    const overMutationLimit = mutationLimit && count > mutationLimit;\n\n    // Create a breadcrumb if a lot of mutations happen at the same time\n    // We can show this in the UI as an information with potential performance improvements\n    if (count > mutationBreadcrumbLimit || overMutationLimit) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.mutations',\n        data: {\n          count,\n          limit: overMutationLimit,\n        },\n      });\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Stop replay if over the mutation limit\n    if (overMutationLimit) {\n      void this.stop('mutationLimit');\n      return false;\n    }\n\n    // `true` means we use the regular mutation handling by rrweb\n    return true;\n  };}\n}\n\nfunction getOption(\n  selectors,\n  defaultSelectors,\n  deprecatedClassOption,\n  deprecatedSelectorOption,\n) {\n  const deprecatedSelectors = typeof deprecatedSelectorOption === 'string' ? deprecatedSelectorOption.split(',') : [];\n\n  const allSelectors = [\n    ...selectors,\n    // @deprecated\n    ...deprecatedSelectors,\n\n    // sentry defaults\n    ...defaultSelectors,\n  ];\n\n  // @deprecated\n  if (typeof deprecatedClassOption !== 'undefined') {\n    // NOTE: No support for RegExp\n    if (typeof deprecatedClassOption === 'string') {\n      allSelectors.push(`.${deprecatedClassOption}`);\n    }\n\n    // eslint-disable-next-line no-console\n    console.warn(\n      '[Replay] You are using a deprecated configuration item for privacy. Read the documentation on how to use the new privacy configuration.',\n    );\n  }\n\n  return allSelectors.join(',');\n}\n\n/**\n * Returns privacy related configuration for use in rrweb\n */\nfunction getPrivacyOptions({\n  mask,\n  unmask,\n  block,\n  unblock,\n  ignore,\n\n  // eslint-disable-next-line deprecation/deprecation\n  blockClass,\n  // eslint-disable-next-line deprecation/deprecation\n  blockSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextClass,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  ignoreClass,\n}) {\n  const defaultBlockedElements = ['base[href=\"/\"]'];\n\n  const maskSelector = getOption(mask, ['.sentry-mask', '[data-sentry-mask]'], maskTextClass, maskTextSelector);\n  const unmaskSelector = getOption(unmask, ['.sentry-unmask', '[data-sentry-unmask]']);\n\n  const options = {\n    // We are making the decision to make text and input selectors the same\n    maskTextSelector: maskSelector,\n    unmaskTextSelector: unmaskSelector,\n    maskInputSelector: maskSelector,\n    unmaskInputSelector: unmaskSelector,\n\n    blockSelector: getOption(\n      block,\n      ['.sentry-block', '[data-sentry-block]', ...defaultBlockedElements],\n      blockClass,\n      blockSelector,\n    ),\n    unblockSelector: getOption(unblock, ['.sentry-unblock', '[data-sentry-unblock]']),\n    ignoreSelector: getOption(ignore, ['.sentry-ignore', '[data-sentry-ignore]', 'input[type=\"file\"]'], ignoreClass),\n  };\n\n  if (blockClass instanceof RegExp) {\n    options.blockClass = blockClass;\n  }\n\n  if (maskTextClass instanceof RegExp) {\n    options.maskTextClass = maskTextClass;\n  }\n\n  return options;\n}\n\n/**\n * Returns true if we are in the browser.\n */\nfunction isBrowser() {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' && (!isNodeEnv() || isElectronNodeRenderer());\n}\n\n// Electron renderers with nodeIntegration enabled are detected as Node.js so we specifically test for them\nfunction isElectronNodeRenderer() {\n  return typeof process !== 'undefined' && (process ).type === 'renderer';\n}\n\nconst MEDIA_SELECTORS =\n  'img,image,svg,video,object,picture,embed,map,audio,link[rel=\"icon\"],link[rel=\"apple-touch-icon\"]';\n\nconst DEFAULT_NETWORK_HEADERS = ['content-length', 'content-type', 'accept'];\n\nlet _initialized = false;\n\n/**\n * The main replay integration class, to be passed to `init({  integrations: [] })`.\n */\nclass Replay  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Replay';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Replay.id;}\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n\n  /**\n   * Initial options passed to the replay integration, merged with default values.\n   * Note: `sessionSampleRate` and `errorSampleRate` are not required here, as they\n   * can only be finally set when setupOnce() is called.\n   *\n   * @private\n   */\n\n   constructor({\n    flushMinDelay = DEFAULT_FLUSH_MIN_DELAY,\n    flushMaxDelay = DEFAULT_FLUSH_MAX_DELAY,\n    minReplayDuration = MIN_REPLAY_DURATION,\n    stickySession = true,\n    useCompression = true,\n    _experiments = {},\n    sessionSampleRate,\n    errorSampleRate,\n    maskAllText = true,\n    maskAllInputs = true,\n    blockAllMedia = true,\n\n    mutationBreadcrumbLimit = 750,\n    mutationLimit = 10000,\n\n    slowClickTimeout = 7000,\n    slowClickIgnoreSelectors = [],\n\n    networkDetailAllowUrls = [],\n    networkDetailDenyUrls = [],\n    networkCaptureBodies = true,\n    networkRequestHeaders = [],\n    networkResponseHeaders = [],\n\n    mask = [],\n    unmask = [],\n    block = [],\n    unblock = [],\n    ignore = [],\n    maskFn,\n\n    beforeAddRecordingEvent,\n\n    // eslint-disable-next-line deprecation/deprecation\n    blockClass,\n    // eslint-disable-next-line deprecation/deprecation\n    blockSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    maskInputOptions,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextClass,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    ignoreClass,\n  } = {}) {Replay.prototype.__init.call(this);\n    this._recordingOptions = {\n      maskAllInputs,\n      maskAllText,\n      maskInputOptions: { ...(maskInputOptions || {}), password: true },\n      maskTextFn: maskFn,\n      maskInputFn: maskFn,\n\n      ...getPrivacyOptions({\n        mask,\n        unmask,\n        block,\n        unblock,\n        ignore,\n        blockClass,\n        blockSelector,\n        maskTextClass,\n        maskTextSelector,\n        ignoreClass,\n      }),\n\n      // Our defaults\n      slimDOMOptions: 'all',\n      inlineStylesheet: true,\n      // Disable inline images as it will increase segment/replay size\n      inlineImages: false,\n      // collect fonts, but be aware that `sentry.io` needs to be an allowed\n      // origin for playback\n      collectFonts: true,\n    };\n\n    this._initialOptions = {\n      flushMinDelay,\n      flushMaxDelay,\n      minReplayDuration: Math.min(minReplayDuration, MIN_REPLAY_DURATION_LIMIT),\n      stickySession,\n      sessionSampleRate,\n      errorSampleRate,\n      useCompression,\n      blockAllMedia,\n      maskAllInputs,\n      maskAllText,\n      mutationBreadcrumbLimit,\n      mutationLimit,\n      slowClickTimeout,\n      slowClickIgnoreSelectors,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders: _getMergedNetworkHeaders(networkRequestHeaders),\n      networkResponseHeaders: _getMergedNetworkHeaders(networkResponseHeaders),\n      beforeAddRecordingEvent,\n\n      _experiments,\n    };\n\n    if (typeof sessionSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`sessionSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysSessionSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysSessionSampleRate: ${sessionSampleRate} })`,\n      );\n\n      this._initialOptions.sessionSampleRate = sessionSampleRate;\n    }\n\n    if (typeof errorSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`errorSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysOnErrorSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysOnErrorSampleRate: ${errorSampleRate} })`,\n      );\n\n      this._initialOptions.errorSampleRate = errorSampleRate;\n    }\n\n    if (this._initialOptions.blockAllMedia) {\n      // `blockAllMedia` is a more user friendly option to configure blocking\n      // embedded media elements\n      this._recordingOptions.blockSelector = !this._recordingOptions.blockSelector\n        ? MEDIA_SELECTORS\n        : `${this._recordingOptions.blockSelector},${MEDIA_SELECTORS}`;\n    }\n\n    if (this._isInitialized && isBrowser()) {\n      throw new Error('Multiple Sentry Session Replay instances are not supported');\n    }\n\n    this._isInitialized = true;\n  }\n\n  /** If replay has already been initialized */\n   get _isInitialized() {\n    return _initialized;\n  }\n\n  /** Update _isInitialized */\n   set _isInitialized(value) {\n    _initialized = value;\n  }\n\n  /**\n   * Setup and initialize replay container\n   */\n   setupOnce() {\n    if (!isBrowser()) {\n      return;\n    }\n\n    this._setup();\n\n    // Once upon a time, we tried to create a transaction in `setupOnce` and it would\n    // potentially create a transaction before some native SDK integrations have run\n    // and applied their own global event processor. An example is:\n    // https://github.com/getsentry/sentry-javascript/blob/b47ceafbdac7f8b99093ce6023726ad4687edc48/packages/browser/src/integrations/useragent.ts\n    //\n    // So we call `this._initialize()` in next event loop as a workaround to wait for other\n    // global event processors to finish. This is no longer needed, but keeping it\n    // here to avoid any future issues.\n    setTimeout(() => this._initialize());\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * PerformanceObserver, Recording, Sentry SDK, etc)\n   */\n   start() {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.start();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, until an error occurs.\n   */\n   startBuffering() {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.startBuffering();\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n   stop() {\n    if (!this._replay) {\n      return Promise.resolve();\n    }\n\n    return this._replay.stop();\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n   flush(options) {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return Promise.resolve();\n    }\n\n    return this._replay.sendBufferedReplayOrFlush(options);\n  }\n\n  /**\n   * Get the current session ID.\n   */\n   getReplayId() {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return;\n    }\n\n    return this._replay.getSessionId();\n  }\n  /**\n   * Initializes replay.\n   */\n   _initialize() {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.initializeSampling();\n  }\n\n  /** Setup the integration. */\n   _setup() {\n    // Client is not available in constructor, so we need to wait until setupOnce\n    const finalOptions = loadReplayOptionsFromClient(this._initialOptions);\n\n    this._replay = new ReplayContainer({\n      options: finalOptions,\n      recordingOptions: this._recordingOptions,\n    });\n  }\n} Replay.__initStatic();\n\n/** Parse Replay-related options from SDK options */\nfunction loadReplayOptionsFromClient(initialOptions) {\n  const client = getCurrentHub().getClient();\n  const opt = client && (client.getOptions() );\n\n  const finalOptions = { sessionSampleRate: 0, errorSampleRate: 0, ...dropUndefinedKeys(initialOptions) };\n\n  if (!opt) {\n    // eslint-disable-next-line no-console\n    console.warn('SDK client is not available.');\n    return finalOptions;\n  }\n\n  if (\n    initialOptions.sessionSampleRate == null && // TODO remove once deprecated rates are removed\n    initialOptions.errorSampleRate == null && // TODO remove once deprecated rates are removed\n    opt.replaysSessionSampleRate == null &&\n    opt.replaysOnErrorSampleRate == null\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      'Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.',\n    );\n  }\n\n  if (typeof opt.replaysSessionSampleRate === 'number') {\n    finalOptions.sessionSampleRate = opt.replaysSessionSampleRate;\n  }\n\n  if (typeof opt.replaysOnErrorSampleRate === 'number') {\n    finalOptions.errorSampleRate = opt.replaysOnErrorSampleRate;\n  }\n\n  return finalOptions;\n}\n\nfunction _getMergedNetworkHeaders(headers) {\n  return [...DEFAULT_NETWORK_HEADERS, ...headers.map(header => header.toLowerCase())];\n}\n\nexport { Replay };\n//# sourceMappingURL=index.js.map\n","import { CONSOLE_LEVELS, GLOBAL_OBJ, fill, severityLevelFromString, safeJoin } from '@sentry/utils';\n\n/** Send Console API calls as Sentry Events */\nclass CaptureConsole  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'CaptureConsole';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = CaptureConsole.id;}\n\n  /**\n   * @inheritDoc\n   */\n    __init2() {this._levels = CONSOLE_LEVELS;}\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {CaptureConsole.prototype.__init.call(this);CaptureConsole.prototype.__init2.call(this);\n    if (options.levels) {\n      this._levels = options.levels;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if (!('console' in GLOBAL_OBJ)) {\n      return;\n    }\n\n    this._levels.forEach((level) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n      if (!(level in (GLOBAL_OBJ ).console)) {\n        return;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      fill((GLOBAL_OBJ ).console, level, (originalConsoleMethod) => (...args) => {\n        const hub = getCurrentHub();\n\n        if (hub.getIntegration(CaptureConsole)) {\n          hub.withScope(scope => {\n            scope.setLevel(severityLevelFromString(level));\n            scope.setExtra('arguments', args);\n            scope.addEventProcessor(event => {\n              event.logger = 'console';\n              return event;\n            });\n\n            let message = safeJoin(args, ' ');\n            if (level === 'assert') {\n              if (args[0] === false) {\n                message = `Assertion failed: ${safeJoin(args.slice(1), ' ') || 'console.assert'}`;\n                scope.setExtra('arguments', args.slice(1));\n                hub.captureMessage(message);\n              }\n            } else if (level === 'error' && args[0] instanceof Error) {\n              hub.captureException(args[0]);\n            } else {\n              hub.captureMessage(message);\n            }\n          });\n        }\n\n        // this fails for some browsers. :(\n        if (originalConsoleMethod) {\n          originalConsoleMethod.apply(GLOBAL_OBJ.console, args);\n        }\n      });\n    });\n  }\n} CaptureConsole.__initStatic();\n\nexport { CaptureConsole };\n//# sourceMappingURL=captureconsole.js.map\n","import { dev } from '$app/environment';\nimport * as Sentry from '@sentry/browser';\nimport { CaptureConsole } from '@sentry/integrations';\n\nexport const initSentry = (): void => {\n  if (dev) return;\n\n  Sentry.init({\n    dsn: 'https://c966f7e8cb1d4306be20b26bb4f0cc96@o476906.ingest.sentry.io/5999999',\n    integrations: [\n      new CaptureConsole({\n        levels: ['error']\n      }),\n      new Sentry.Replay()\n    ],\n    environment: 'production',\n    replaysSessionSampleRate: 0.5,\n    replaysOnErrorSampleRate: 1.0\n  });\n};\n\nexport const setSentryUser = (user: Record<string, any>): void => {\n  if (dev) return;\n\n  Sentry.setUser(user);\n};\n","import axios from 'axios';\n\ninterface SubscriptionData {\n  productId: string;\n  email: string;\n  name: string;\n  triggeredBy: string;\n  orgId: string;\n}\n\ninterface SubscriptionResponse {\n  success: boolean;\n  checkoutURL: string;\n}\n\nexport async function subscribeToProduct(data: SubscriptionData): Promise<SubscriptionResponse> {\n  const response = await axios({\n    method: 'POST',\n    url: '/api/lmz/subscribe',\n    data\n  });\n\n  return response.data;\n}\n","<script lang=\"ts\">\n  import { onMount, onDestroy } from 'svelte';\n  import type { OrganizationPlan } from '$lib/utils/types';\n  import { supabase } from '$lib/utils/functions/supabase';\n  import { goto } from '$app/navigation';\n  import { currentOrg, currentOrgPath } from '$lib/utils/store/org';\n  import { page } from '$app/stores';\n  import Checkmark from 'carbon-icons-svelte/lib/Checkmark.svelte';\n  import PLANS from 'shared/src/plans/data.json';\n  import { profile } from '$lib/utils/store/user';\n  import { subscribeToProduct } from '$lib/utils/services/lemonsqueezy/subscribe';\n  import { snackbar } from '$lib/components/Snackbar/store';\n  import { Loading } from 'carbon-components-svelte';\n  import Modal from '$lib/components/Modal/index.svelte';\n  import StepDoneIcon from '$lib/components/Icons/StepDoneIcon.svelte';\n  import PrimaryButton from '$lib/components/PrimaryButton/index.svelte';\n  import { VARIANTS } from '$lib/components/PrimaryButton/constants';\n  import type { RealtimeChannel, RealtimePostgresChangesPayload } from '@supabase/supabase-js';\n  import Confetti from '$lib/components/Confetti/index.svelte';\n  import { toggleConfetti } from '$lib/components/Confetti/store';\n  import { t } from '$lib/utils/functions/translations';\n\n  const disabledClass = 'bg-gray-300 text-gray-400 hover:cursor-not-allowed';\n\n  let isLoadingPlan: string | null = null;\n  let orgPlanChannel: RealtimeChannel;\n  let open = false;\n  let upgraded = false;\n  let isYearlyPlan = false;\n\n  async function handleClick(plan, planName: string) {\n    if (plan.CTA.IS_DISABLED || !$profile.id) {\n      return;\n    }\n\n    if (!plan.CTA.PRODUCT_ID && plan.CTA.DASHBOARD_LINK) {\n      window.open(plan.CTA.DASHBOARD_LINK, '_blank');\n      return;\n    }\n\n    isLoadingPlan = planName;\n\n    try {\n      const { checkoutURL } = await subscribeToProduct({\n        productId: isYearlyPlan ? plan.CTA.PRODUCT_ID_YEARLY : plan.CTA.PRODUCT_ID,\n        email: $profile.email,\n        name: $profile.fullname,\n        triggeredBy: $currentOrg.memberId,\n        orgId: $currentOrg.id\n      });\n\n      if (!checkoutURL) {\n        snackbar.error('snackbar.upgrade.generate_fail');\n        return;\n      }\n\n      window.open(checkoutURL, '_blank');\n    } catch (error) {\n      console.error('Error subscribing', error);\n\n      snackbar.error('snackbar.upgrade.failed');\n    }\n\n    isLoadingPlan = null;\n  }\n\n  async function handleInsert(payload: RealtimePostgresChangesPayload<OrganizationPlan>) {\n    const newPlan = payload.new as OrganizationPlan;\n\n    console.log('A new plan was inserted');\n    // If plan was successfully generated\n    if (newPlan.org_id === $currentOrg.id && newPlan.is_active) {\n      upgraded = true;\n      toggleConfetti();\n\n      setTimeout(() => {\n        toggleConfetti();\n      }, 1000);\n    }\n  }\n\n  function onClose() {\n    if (upgraded) {\n      window.location.href = $currentOrgPath;\n    } else {\n      goto($page.url.pathname);\n    }\n  }\n\n  function onLearnMore() {\n    window.open('https://KinetsHub.com', '_blank');\n  }\n  function toggleIsYearlyPlan() {\n    isYearlyPlan = !isYearlyPlan;\n  }\n\n  onMount(() => {\n    orgPlanChannel = supabase\n      .channel('any')\n      .on(\n        'postgres_changes',\n        { event: 'INSERT', schema: 'public', table: 'organization_plan' },\n        handleInsert\n      )\n      .subscribe();\n  });\n\n  onDestroy(() => {\n    if (orgPlanChannel) {\n      supabase.removeChannel(orgPlanChannel);\n    }\n  });\n\n  $: {\n    const query = new URLSearchParams($page.url.search);\n    open = (query.get('upgrade') || '') === 'true';\n  }\n  $: planNames = Object.keys(PLANS);\n</script>\n\n{#if upgraded}\n  <Confetti />\n{/if}\n\n<Modal\n  {onClose}\n  {open}\n  width=\"w-4/5\"\n  maxWidth={upgraded ? 'max-w-[600px]' : undefined}\n  modalHeading={$t('pricing.modal.heading')}\n  containerClass=\"pt-4\"\n>\n  {#if upgraded}\n    <div class=\"flex flex-col items-center justify-center mb-4 w-full relative\">\n      <StepDoneIcon />\n      <h4 class=\"text-2xl\">{$t('pricing.modal.thanks')}</h4>\n      <p class=\"mb-4 text-center\">\n        {$t('pricing.modal.plan')}\n      </p>\n      <div class=\"flex items-center gap-4\">\n        <PrimaryButton\n          label={$t('pricing.modal.close')}\n          variant={VARIANTS.OUTLINED}\n          onClick={onClose}\n        />\n        <PrimaryButton\n          label={$t('pricing.modal.learn')}\n          variant={VARIANTS.CONTAINED_DARK}\n          onClick={onLearnMore}\n        />\n      </div>\n    </div>\n  {:else}\n    <div class=\"flex flex-col items-center justify-center\">\n      <div class=\"relative mb-2 flex items-center rounded-[30px] border-[2px] p-[2px] lg:scale-100\">\n        <button\n          style=\"background-color: {isYearlyPlan ? 'initial' : '#1D4EE2'}; color: {isYearlyPlan\n            ? '#5e636b'\n            : '#fff'}\"\n          class=\"rounded-[30px] bg-blue-700 px-3 py-1 text-xs text-white lg:px-4 lg:py-2 transition-all duration-500 ease-in-out\"\n          on:click={toggleIsYearlyPlan}\n        >\n          {$t('pricing.modal.monthly')}\n        </button>\n        <button\n          style=\"background-color: {isYearlyPlan ? '#1D4EE2' : ''}; color: {isYearlyPlan\n            ? '#fff'\n            : '#5e636b'}\"\n          class=\"relative rounded-[30px] px-3 py-1 text-xs text-white lg:px-4 lg:py-2 transition-all duration-500 ease-in-out\"\n          on:click={toggleIsYearlyPlan}\n        >\n          {$t('pricing.modal.annually')}\n          <div\n            class=\"absolute right-[-40%] -top-4 scale-[90%] rounded-full bg-[#006600] px-1.5 py-1 text-[0.7rem] text-white\"\n          >\n            {$t('pricing.modal.save')}\n          </div>\n        </button>\n      </div>\n      <div class=\"isolate grid grid-cols-1 gap-3 lg:grid-cols-3\">\n        {#each planNames as planName}\n          <div\n            class=\"max-w-xl rounded-xl {planName === 'EARLY_ADOPTER' &&\n              'cio-bg-blue'} p-4 ring-1 ring-gray-200 lg:max-w-sm\"\n          >\n            <p\n              class=\"mb-2 text-lg font-semibold leading-8 {planName === 'EARLY_ADOPTER'\n                ? 'text-white'\n                : 'text-gray-900'} dark:text-white lg:text-xl\"\n            >\n              {PLANS[planName].NAME}\n            </p>\n            <p\n              class=\"text-baseline flex items-baseline gap-x-1 font-medium {planName ===\n              'EARLY_ADOPTER'\n                ? 'text-white'\n                : 'text-black'} dark:text-gray-300\"\n            >\n              {PLANS[planName].PRICE.CURRENCY}\n              {isYearlyPlan ? PLANS[planName].PRICE.YEARLY : PLANS[planName].PRICE.MONTHLY}\n            </p>\n            <p\n              class=\" mt-4 text-sm font-light leading-6 {planName === 'EARLY_ADOPTER'\n                ? 'text-white'\n                : 'text-black'} dark:text-gray-300 lg:leading-6\"\n            >\n              {PLANS[planName].DESCRIPTION}\n            </p>\n\n            <button\n              class=\"text-md mt-4 block w-full rounded-md {isLoadingPlan === planName &&\n                disabledClass} {planName === 'EARLY_ADOPTER'\n                ? 'bg-white text-slate-900 hover:bg-indigo-50'\n                : PLANS[planName].CTA.IS_DISABLED\n                  ? disabledClass\n                  : 'bg-primary-900 hover:bg-primary-700 text-white'} py-3 text-center font-medium hover:no-underline lg:rounded-md lg:py-3 lg:text-lg lg:font-semibold flex items-center justify-center\"\n              on:click={() => {\n                if (isLoadingPlan === planName) return;\n\n                handleClick(PLANS[planName], planName);\n              }}\n            >\n              {#if isLoadingPlan === planName}\n                <Loading withOverlay={false} small />\n              {:else}\n                {PLANS[planName].CTA.DASHBOARD_LABEL}\n              {/if}\n            </button>\n\n            <ul\n              class=\"mt-4 space-y-2 text-sm {planName === 'EARLY_ADOPTER'\n                ? 'text-white'\n                : 'text-black'} dark:text-gray-300\"\n            >\n              {#each PLANS[planName].FEATURES as features}\n                <li class=\"flex items-center\">\n                  <div>\n                    <Checkmark\n                      size={16}\n                      fill={planName === 'EARLY_ADOPTER' ? '#fff' : '#1D4EE2'}\n                      class=\"mr-2 lg:mr-3\"\n                    />\n                  </div>\n                  <p class=\"text-sm\">\n                    {features}\n                  </p>\n                </li>\n              {/each}\n            </ul>\n          </div>\n        {/each}\n      </div>\n    </div>\n  {/if}\n</Modal>\n","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { MetaTags } from 'svelte-meta-tags';\n  import { fly } from 'svelte/transition';\n  import { derived } from 'svelte/store';\n  import { goto } from '$app/navigation';\n  import { browser, dev } from '$app/environment';\n  import { page, navigating } from '$app/stores';\n  import isEmpty from 'lodash/isEmpty';\n  import merge from 'lodash/merge';\n  import { Theme, ToastNotification, Loading } from 'carbon-components-svelte';\n  import type { CarbonTheme } from 'carbon-components-svelte/types/Theme/Theme.svelte';\n  import LandingNavigation from '$lib/components/Navigation/index.svelte';\n  import OrgNavigation from '$lib/components/Navigation/app.svelte';\n  import LMSNavigation from '$lib/components/Navigation/lms.svelte';\n  import OrgLandingPage from '$lib/components/Org/LandingPage/index.svelte';\n  import Snackbar from '$lib/components/Snackbar/index.svelte';\n  import Restricted from '$lib/components/Page/Restricted.svelte';\n  import Backdrop from '$lib/components/Backdrop/index.svelte';\n  import Apps from '$lib/components/Apps/index.svelte';\n  import PlayQuiz from '$lib/components/Org/Quiz/Play/index.svelte';\n  import { course } from '$lib/components/Course/store';\n  import { isCoursesPage, isOrgPage, isLMSPage } from '$lib/utils/functions/app';\n  import showAppsSideBar from '$lib/utils/functions/showAppsSideBar';\n  import isPublicRoute from '$lib/utils/functions/routes/isPublicRoute';\n  import { user, profile } from '$lib/utils/store/user';\n  import { getSupabase } from '$lib/utils/functions/supabase';\n  import { isMobile } from '$lib/utils/store/useMobile';\n  import { ROUTE } from '$lib/utils/constants/routes';\n  import { getOrganizations } from '$lib/utils/services/org';\n  import { toggleBodyByMode } from '$lib/utils/functions/app';\n  import { globalStore } from '$lib/utils/store/app';\n  import { currentOrg, currentOrgDomain } from '$lib/utils/store/org';\n  import { setTheme } from '$lib/utils/functions/theme';\n  import hideNavByRoute from '$lib/utils/functions/routes/hideNavByRoute';\n  import shouldRedirectOnAuth from '$lib/utils/functions/routes/shouldRedirectOnAuth';\n  import { identifyPosthogUser, initPosthog } from '$lib/utils/services/posthog';\n  import { initSentry, setSentryUser } from '$lib/utils/services/sentry';\n  import UpgradeModal from '$lib/components/Upgrade/Modal.svelte';\n  import { handleLocaleChange } from '$lib/utils/functions/translations';\n\n  import '../app.postcss';\n  import { ROLE } from '$lib/utils/constants/roles';\n\n  export let data;\n\n  let supabase = getSupabase();\n  let path = $page.url?.pathname?.replace('/', '');\n  let queryParam = $page.url?.search;\n  let carbonTheme: CarbonTheme = 'white';\n\n  const delayedPreloading = derived(navigating, (currentPreloading, set) => {\n    setTimeout(() => set(currentPreloading), 250);\n  });\n\n  function setupAnalytics() {\n    // Set up sentry\n    initSentry();\n\n    // Set up posthog\n    initPosthog();\n  }\n\n  function setAnalyticsUser() {\n    if ($profile.id) {\n      setSentryUser({\n        id: $profile.id,\n        username: $profile.username,\n        email: $profile.email,\n        fullname: $profile.fullname\n      });\n\n      identifyPosthogUser($profile.id, { email: $profile.email, name: $profile.fullname });\n    }\n  }\n\n  async function getProfile() {\n    const params = new URLSearchParams(window.location.search);\n    // Get user profile\n    const {\n      data: { session }\n    } = await supabase.auth.getSession();\n    const { user: authUser } = session || {};\n    console.log('Get user', authUser);\n\n    if (!authUser && !isPublicRoute($page.url?.pathname)) {\n      return goto('/login?redirect=/' + path + queryParam);\n    }\n\n    // Skip refetching profile, if already in store\n    if ($profile.id) return;\n\n    // Check if user has profile\n    let {\n      data: profileData,\n      error,\n      status\n    } = await supabase.from('profile').select(`*`).eq('id', authUser?.id).single();\n    console.log('Get profile', profileData);\n\n    if (error && !profileData && status === 406 && authUser) {\n      // User wasn't found, create profile\n      console.log(`User wasn't found, create profile`);\n\n      const [regexUsernameMatch] = [...(authUser.email?.matchAll(/(.*)@/g) || [])];\n\n      const isGoogleAuth = !!authUser.app_metadata?.providers?.includes('google');\n\n      const { data: newProfileData, error } = await supabase\n        .from('profile')\n        .insert({\n          id: authUser.id,\n          username: regexUsernameMatch[1] + `${new Date().getTime()}`,\n          fullname: regexUsernameMatch[1],\n          email: authUser.email,\n          is_email_verified: isGoogleAuth,\n          verified_at: isGoogleAuth ? new Date().toDateString() : undefined\n        })\n        .select();\n\n      // Profile created, go to onboarding or lms\n      if (!error && newProfileData) {\n        $user.fetchingUser = false;\n        $user.isLoggedIn = true;\n        $user.currentSession = authUser;\n\n        profile.set(newProfileData[0]);\n\n        setAnalyticsUser();\n\n        // Fetch language\n        handleLocaleChange($profile.locale);\n\n        if (data.isOrgSite) {\n          const { data, error } = await supabase\n            .from('organizationmember')\n            .insert({\n              organization_id: $currentOrg.id,\n              profile_id: $profile.id,\n              role_id: 3\n            })\n            .select();\n          if (error) {\n            console.error('Error adding user to organisation', error);\n          } else {\n            console.log('Success adding user to organisation', data);\n            const memberId = data?.[0]?.id || '';\n\n            $currentOrg.memberId = memberId;\n          }\n\n          if (params.get('redirect')) {\n            goto(params.get('redirect') || '');\n          } else {\n            goto('/lms');\n          }\n          return;\n        }\n\n        // On invite page, don't go to onboarding\n        if (!path.includes('invite')) {\n          goto(ROUTE.ONBOARDING);\n        }\n      }\n      $user.fetchingUser = false;\n    } else if (profileData) {\n      // Profile exists, go to profile page\n      $user.fetchingUser = false;\n      $user.isLoggedIn = true;\n      $user.currentSession = authUser;\n      profile.set(profileData);\n\n      // Set user in sentry\n      setAnalyticsUser();\n\n      // Fetch language\n      handleLocaleChange($profile.locale);\n\n      const orgRes = await getOrganizations(profileData.id, data.isOrgSite, data.orgSiteName);\n      const isStudentAccount = orgRes.currentOrg.role_id == ROLE.STUDENT;\n\t\t\tconsole.info('here', orgRes, isStudentAccount);\n\n      // student redirect\n      if (data.isOrgSite) {\n        if (params.has('redirect')) {\n          goto(params.get('redirect') || '');\n        } else if (shouldRedirectOnAuth(path)) {\n          goto('/lms');\n        }\n      } else {\n        if (isStudentAccount) {\n          // Check if the student logged into the dashboard.\n          console.log('Student logged into dashboard');\n          if (dev) {\n            goto('/lms');\n          } else {\n            window.location.replace(`${$currentOrgDomain}/lms`);\n          }\n        } else if (isEmpty(orgRes.orgs) && !path.includes('invite')) {\n          // Not on invite page or no org, go to onboarding\n          goto(ROUTE.ONBOARDING);\n        } else if (params.has('redirect')) {\n          goto(params.get('redirect') || '');\n        } else if (shouldRedirectOnAuth(path)) {\n          // By default redirect to first organization\n          goto(`/org/${orgRes.currentOrg.siteName}`);\n        }\n      }\n\n      setTheme(orgRes?.currentOrg?.theme);\n    }\n\n    if (!profileData && !isPublicRoute($page.url?.pathname)) {\n      goto('/login?redirect=/' + path);\n    }\n  }\n\n  function handleResize() {\n    isMobile.update(() => window.innerWidth <= 760);\n  }\n\n  onMount(() => {\n    console.log(\n      'Welcome to KinetsHub, we are grateful you chose us.',\n      $page.url.host,\n      `\\nIs student domain: ${data.isOrgSite}`\n    );\n\n    if (browser) {\n      // Update theme - dark or light mode\n      $globalStore.isDark = localStorage.getItem('mode') === 'dark';\n      toggleBodyByMode($globalStore.isDark);\n\n      if (data.isOrgSite && data.org?.theme) {\n        setTheme(data.org?.theme);\n      }\n    }\n\n    setupAnalytics();\n\n    handleResize();\n\n    // if (!isSupabaseTokenInLocalStorage() && !isPublicRoute($page.url?.pathname)) {\n    //   console.log('No auth token and is not a public route, redirect to login', path);\n    //   return goto('/login?redirect=/' + path);\n    // }\n\n    const { data: authListener } = supabase.auth.onAuthStateChange((event, session) => {\n      // Log key events\n      console.log(`event`, event);\n\n      if (path.includes('reset')) {\n        console.log('Dont change auth when on reset page');\n        return;\n      }\n\n      // Skip Authentication\n      if (data.skipAuth || $user.fetchingUser) return;\n\n      // Authentication Steps\n      if (event === 'SIGNED_IN' || event === 'INITIAL_SESSION') {\n        $user.fetchingUser = true;\n        getProfile().then(() => {\n          $user.fetchingUser = false;\n        });\n      }\n      // else if (!['TOKEN_REFRESHED'].includes(event)) {\n      //   console.log('not logged in, go to login');\n      //   return goto('/login');\n      // }\n    });\n\n    if (data.isOrgSite && data.org) {\n      $globalStore.orgSiteName = data.orgSiteName;\n      $globalStore.isOrgSite = data.isOrgSite;\n\n      currentOrg.set(data.org);\n    }\n\n    return () => {\n      console.log('unsubscribed');\n      authListener.subscription.unsubscribe();\n    };\n  });\n\n  $: path = $page.url?.pathname?.replace('/', '');\n  $: carbonTheme = $globalStore.isDark ? 'g100' : 'white';\n  $: metaTags = merge(data.baseMetaTags, $page.data.pageMetaTags);\n</script>\n\n<svelte:window on:resize={handleResize} />\n\n<MetaTags {...metaTags} />\n\n<Theme bind:theme={carbonTheme} />\n\n<UpgradeModal />\n<Snackbar />\n\n{#if data.org?.is_restricted || $currentOrg.is_restricted}\n  <Restricted />\n{:else if data.skipAuth}\n  <PlayQuiz />\n{:else if data.isOrgSite && !path}\n  <OrgLandingPage orgSiteName={data.orgSiteName} org={data.org} />\n{:else}\n  <main class=\"dark:bg-black\">\n    {#if $navigating && $delayedPreloading}\n      <Backdrop disableCenteredContent={true} className=\"\">\n        <div class=\"h-full w-full relative\" transition:fly={{ x: -200, duration: 500 }}>\n          <ToastNotification kind=\"info-square\" class=\"absolute bottom-5 left-5\">\n            <span slot=\"title\" class=\"flex items-center\">\n              <span class=\"mr-2\">Redirecting</span>\n              <Loading withOverlay={false} small />\n            </span>\n            <span slot=\"caption\">Taking you to the next page, please wait.</span>\n          </ToastNotification>\n        </div>\n      </Backdrop>\n    {/if}\n    {#if !hideNavByRoute($page.url?.pathname)}\n      {#if isOrgPage($page.url?.pathname) || $page.url?.pathname.includes('profile') || isCoursesPage(path)}\n        <OrgNavigation bind:title={$course.title} isCoursePage={isCoursesPage(path)} />\n      {:else if isLMSPage($page.url?.pathname)}\n        <LMSNavigation />\n      {:else}\n        <LandingNavigation\n          isOrgSite={data.isOrgSite}\n          logo={data.isOrgSite ? $currentOrg.avatar_url : undefined}\n          orgName={data.isOrgSite ? $currentOrg.name : undefined}\n          disableSignup={false}\n        />\n      {/if}\n    {/if}\n\n    <div class={path.includes('home') ? '' : 'flex justify-between'}>\n      <slot />\n\n      {#if showAppsSideBar(path)}\n        <Apps />\n      {/if}\n    </div>\n  </main>\n{/if}\n\n<style>\n  main {\n    background-color: white;\n    box-sizing: border-box;\n  }\n\n  :global(a:hover) {\n    text-decoration: underline;\n  }\n  :global(:root) {\n    --main-primary-color: rgba(29, 78, 216, 1);\n    --border-color: #eaecef;\n    --app-background-color: #fafbfc;\n    --app-background: radial-gradient(\n      circle at 10% 20%,\n      rgb(239, 246, 249) 0%,\n      rgb(206, 239, 253) 90%\n    );\n    --dark-app-background: radial-gradient(circle at 10% 20%, rgb(0 0 0) 0%, rgb(27 60 74) 90%);\n  }\n\n  :global(.app-background) {\n    background: var(--app-background);\n  }\n  :global(.dark .app-background) {\n    background: var(--dark-app-background);\n  }\n\n  :global(.bx--data-table-container) {\n    width: 100%;\n  }\n\n  :global(.dark svg.dark) {\n    fill: #fff;\n  }\n\n  :global(.border-c) {\n    border: 1px solid var(--border-color);\n  }\n\n  :global(.border-bottom-c) {\n    border-bottom: 1px solid var(--border-color);\n  }\n\n  :global(.bx--search-close > svg) {\n    fill: black;\n  }\n\n  :global(.dark .bx--search-close:hover > svg) {\n    fill: #fff;\n  }\n\n  :global(.plyr__controls) {\n    background:\n      url(/logo-192.png) 99% 70% no-repeat,\n      linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.5)) !important;\n    background-size:\n      50px auto,\n      auto !important;\n  }\n\n  :global(.cards-container) {\n    width: 90%;\n    margin: 0 auto;\n    padding: 0;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    column-gap: 12px;\n    row-gap: 12px;\n  }\n\n  @media screen and (max-width: 768px) {\n    :global(.cards-container) {\n      width: 95%;\n      margin: 0 auto;\n      padding: 0;\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n      column-gap: 12px;\n      row-gap: 12px;\n    }\n  }\n</style>\n"],"names":["attr","meta","meta_content_value","ctx","dirty","link","link_media_value","link_href_value","link_hreflang_value","if_block0","create_if_block_58","if_block1","create_if_block_57","if_block2","create_if_block_56","if_block3","create_if_block_55","if_block4","create_if_block_54","if_block5","create_if_block_53","if_block6","create_if_block_52","create_if_block_21","create_if_block_13","create_if_block_8","create_if_block_5$3","if_block7","create_if_block_4$4","if_block8","create_if_block_3$4","show_if_3","create_if_block_48","create_if_block_47","each_value_4","ensure_array_like","create_if_block_18","create_if_block_17","create_if_block_16","create_if_block_15","create_if_block_14","each_value_3","create_if_block_12","create_if_block_11","create_if_block_10","create_if_block_9","each_value_2","create_if_block_7$1","create_if_block_6$1","show_if","create_if_block_64","_a","create_if_block_61","create_if_block_59","if_block10","_b","create_if_block$l","title","$$props","titleTemplate","robots","additionalRobotsProps","description","mobileAlternate","languageAlternates","twitter","facebook","openGraph","canonical","keywords","additionalMetaTags","additionalLinkTags","robotsParams","nosnippet","maxSnippet","maxImagePreview","maxVideoPreview","noarchive","noimageindex","notranslate","unavailableAfter","baseAssignValue","_baseAssignValue","eq$1","eq_1","assignMergeValue$2","object","key","value","_assignMergeValue","createBaseFor$1","fromRight","iteratee","keysFunc","index","iterable","props","length","_createBaseFor","createBaseFor","baseFor$1","_baseFor","isArrayLike$1","isArrayLike_1","isObjectLike$1","isObjectLike_1","isArrayLikeObject$1","isArrayLikeObject_1","baseGetTag","_baseGetTag","getPrototype","_getPrototype","isObjectLike","objectTag","funcProto","objectProto","funcToString","hasOwnProperty","objectCtorString","isPlainObject$2","proto","Ctor","isPlainObject_1","safeGet$2","_safeGet","copyObject","_copyObject","keysIn$1","keysIn_1","toPlainObject$1","toPlainObject_1","assignMergeValue$1","cloneBuffer","_cloneBufferExports","cloneTypedArray","_cloneTypedArray","copyArray","_copyArray","initCloneObject","_initCloneObject","isArguments","isArguments_1","isArray","isArray_1","isArrayLikeObject","isBuffer","isBufferExports","isFunction","isFunction_1","isObject$2","isObject_1","isPlainObject$1","isTypedArray","isTypedArray_1","safeGet$1","toPlainObject","baseMergeDeep$1","source","srcIndex","mergeFunc","customizer","stack","objValue","srcValue","stacked","newValue","isCommon","isArr","isBuff","isTyped","_baseMergeDeep","Stack","_Stack","assignMergeValue","baseFor","baseMergeDeep","isObject$1","keysIn","safeGet","baseMerge$1","_baseMerge","identity$2","identity_1","apply$1","func","thisArg","args","_apply","apply","nativeMax","overRest$1","start","transform","array","otherArgs","_overRest","constant$1","constant_1","constant","defineProperty","_defineProperty","identity$1","baseSetToString$1","string","_baseSetToString","HOT_COUNT","HOT_SPAN","nativeNow","shortOut$1","count","lastCalled","stamp","remaining","_shortOut","baseSetToString","shortOut","setToString$1","_setToString","identity","overRest","setToString","baseRest$1","_baseRest","eq","isArrayLike","isIndex","_isIndex","isObject","isIterateeCall$1","type","_isIterateeCall","baseRest","isIterateeCall","createAssigner$1","assigner","sources","guard","_createAssigner","baseMerge","createAssigner","merge","merge_1","dispatch","createEventDispatcher","prevValue","item","$$invalidate","setItem","toggle_class","button","notificationType","icon","Close","iconDescription","size","attributes","labelled","switch_value","kind","ErrorFilled","InformationSquareFilled$1","InformationFilled$1","CheckmarkFilled","WarningFilled","WarningAltFilled","div3","lowContrast","timeout","role","subtitle","caption","closeButtonDescription","hideCloseButton","fullWidth","open","timeoutId","close","closeFromTimeout","selectitem_changes","each_value","theme","persist","persistKey","render","themeKeys","themes","detail","toggle","navClass","isCoursePage","set_store_value","sideBar","$sideBar","globalStore","$globalStore","func_2","goto","coursesPath","avatar_changes","t2_value","a_title_value","current","set_data","t2","name","toggleSidebar","toggleDarkMode","toggleBodyByMode","capitalizeFirstLetter","val","previous_key","safe_not_equal","div_transition","create_bidirectional_transition","div","fly","if_block","create_if_block$7","handleClose","$snackbarStore","autoHideDuration","e","SNACKBAR_SEVERITY","VARIANTS","t1_value","t3_value","vote_props","vote_changes","t1","t3","question","bodyRef","handleMarkAnswered","id","questions","a","b","handleKeyDown","$$self","t5_value","src_url_equal","img","img_src_value","t5","pagenav_changes","textfield_changes","lessonCommentChannel","comments","groupmember","handleSend","comment","$t","$profile","lesson","$lesson","scrollToBottom","insertedComment","payload","data","error","supabase","fetchComments","people","lessonId","person","lessonComment","onMount","handleInsert","onDestroy","isFetched","$group","textfield_props","t4_value","datetime_props","datetime_changes","t4","primarybutton0_changes","primarybutton1_changes","onCancel","poll","$course","handleAddOptions","_","i","finishPoll","onSubmit","option","isCreateDisabled","polls","writable","getSupabase","fetchPolls","courseId","updatePollStatus","pollId","status","snackbar","togglePollSubmission","pollOptionId","groupmemberId","add","isOptionSelectedByCurrentUser","gmember","handleVote","author","optionId","_polls","isSelected","t0_value","t0","add_render_callback","select","select_option","t7_value","t7","each_value_1","set_style","span","calculatePercent","button_class_value","didUserSelect","t_1_value","t_1","options","acc","cur","currentOption","totalVoteOfAllOptions","getTotalVotes","totalVotesOfCurrentOption","userId","user","onSelect","handlePollDelete","currentUserId","selectedOptionToView","prevStatus","click_handler","select_value","click_handler_1","viewResult","isThereAnyVote","chip_props","chip_changes","onCreate","tabs","selectedTab","tab","getPollsData","isStudent","appsPollItem","submission","p","poll_1_props","poll_1_changes","currentGroupMember","pollSubmissionsChannel","activePolls","expiredPolls","setCoursePolls","course","$polls","appsPollOptions","appsPollOptionsError","appsPollOptionsData","newVote","s","createPoll","openCreatePollForm","func_1","APPS_CONSTANTS","fade","create_if_block$4","div4","div4_class_value","null_to_empty","getAppClass","appName","selected","appBarRef","appContentRef","apps","$apps","topPadding","updateTopPadding","durationUnitRegex","range","startAt","color","unit","duration","pause","durationNum","t_value","t","isGettingPin","playQuizStore","$playQuizStore","STEPS","text","claim_text","nodes","div1_intro","create_in_transition","div1","div1_outro","create_out_transition","bgImg","themeImages","$quizStore","showAppsSideBar","path","isPublicRoute","route","PUBLIC_ROUTES","publicRoute","hideNavByRoute","ROUTES_TO_HIDE_NAV","shouldRedirectOnAuth","r","objectToString","isError","wat","isInstanceOf","isBuiltin","className","isErrorEvent$2","isDOMError","isDOMException","isString","isPrimitive","isPlainObject","isEvent","isElement$1","isRegExp","isThenable","isSyntheticEvent","isNaN$1","base","truncate","str","max","safeJoin","input","delimiter","output","isMatchingPattern","pattern","requireExactStringMatch","stringMatchesSomePattern","testString","patterns","applyAggregateErrorsToEvent","exceptionFromErrorImplementation","parser","maxValueLimit","limit","event","hint","originalException","truncateAggregateExceptions","aggregateExceptionsFromError","prevExceptions","exception","exceptionId","newExceptions","applyExceptionGroupFieldsForParentException","newException","newExceptionId","applyExceptionGroupFieldsForChildException","childError","parentId","exceptions","maxValueLength","isGlobalObj","obj","GLOBAL_OBJ","getGlobalObject","getGlobalSingleton","creator","gbl","__SENTRY__","WINDOW$6","DEFAULT_MAX_STRING_LENGTH","htmlTreeAsString","elem","currentElem","MAX_TRAVERSE_HEIGHT","out","height","len","separator","sepLength","nextStr","keyAttrs","maxStringLength","_htmlElementAsString","el","classes","keyAttrPairs","keyAttr","keyAttrPair","allowedAttrs","getLocationHref","PREFIX","CONSOLE_LEVELS","consoleSandbox","callback","originalConsole","wrappedLevels","level","originalWrappedFunc","makeLogger","enabled","logger","DSN_REGEX","isValidProtocol","protocol","dsnToString","dsn","withPassword","host","pass","port","projectId","publicKey","dsnFromString","match","lastPath","split","projectMatch","dsnFromComponents","components","validateDsn","component","makeDsn","from","SentryError","message","logLevel","fill","replacementFactory","original","wrapped","markFunctionWrapped","addNonEnumerableProperty","getOriginalFunction","urlEncode","convertToPlainObject","getOwnProperties","newObj","serializeEventTarget","target","extractedProps","property","extractExceptionKeysForMessage","maxLength","keys","includedKeys","serialized","dropUndefinedKeys","inputValue","_dropUndefinedKeys","memoizationMap","memoVal","returnValue","STACKTRACE_FRAME_LIMIT","WEBPACK_ERROR_REGEXP","createStackParser","parsers","sortedParsers","skipFirst","frames","lines","line","cleanedLine","frame","stripSentryFramesAndReverse","stackParserFromStackParserOptions","stackParser","localStack","lastFrameFunction","firstFrameFunction","defaultFunctionName","getFunctionName","fn","WINDOW$5","supportsFetch","isNativeFetch","supportsNativeFetch","result","doc","sandbox","err","WINDOW$4","supportsHistory","chrome","isChromePackagedApp","hasHistoryApi","WINDOW$3","SENTRY_XHR_DATA_KEY","handlers$1","instrumented","instrument","instrumentConsole","instrumentDOM","instrumentXHR","instrumentFetch","instrumentHistory","instrumentError","instrumentUnhandledRejection","addInstrumentationHandler","triggerHandlers","handler","originalConsoleMethod","originalFetch","method","url","parseFetchArgs","handlerData","response","hasProp","prop","getUrlFromResource","resource","fetchArgs","arg","xhrproto","originalOpen","xhrInfo","onreadystatechangeHandler","readyStateArgs","setRequestHeaderArgs","header","originalSend","sentryXhrData","lastHref","oldOnPopState","to","historyReplacementFunction","originalHistoryFunction","debounceDuration","debounceTimerID","lastCapturedEvent","shouldShortcircuitPreviousDebounce","previous","shouldSkipDOMEvent","makeDOMEventHandler","globalListener","triggerDOMHandler","globalDOMEventHandler","originalAddEventListener","listener","handlers","handlerForType","originalRemoveEventListener","_oldOnErrorHandler","msg","column","_oldOnUnhandledRejectionHandler","memoBuilder","hasWeakSet","inner","memoize","unmemoize","uuid4","crypto","getRandomByte","c","getFirstException","getEventDescription","eventId","firstException","addExceptionTypeValue","values","addExceptionMechanism","newMechanism","defaultMechanism","currentMechanism","mergedData","checkOrSetAlreadyCaught","arrayify","maybeArray","isBrowserBundle","getSDKSource","isNodeEnv","dynamicRequire","mod","request","normalize","depth","maxProperties","visit","normalizeToSize","maxSize","normalized","jsonSize","memo","stringified","stringifyValue","remainingDepth","valueWithToJSON","jsonValue","numAdded","visitable","visitKey","visitValue","objName","getConstructorName","prototype","utf8Length","States","RESOLVED","REJECTED","resolvedSyncPromise","SyncPromise","resolve","rejectedSyncPromise","reason","reject","executor","onfulfilled","onrejected","onfinally","isRejected","state","cachedHandlers","makePromiseBuffer","buffer","isReady","remove","task","taskProducer","drain","counter","capturedSetTimeout","parseUrl","query","fragment","validSeverityLevels","severityLevelFromString","WINDOW$2","dateTimestampSource","getBrowserPerformance","performance","timeOrigin","getNodePerformance","platformPerformance","timestampSource","dateTimestampInSeconds","timestampInSeconds","browserPerformanceTimeOrigin","threshold","performanceNow","dateNow","timeOriginDelta","timeOriginIsReliable","navigationStart","navigationStartDelta","navigationStartIsReliable","createEnvelope","headers","items","addItemToEnvelope","envelope","newItem","forEachEnvelopeItem","envelopeItems","envelopeItem","envelopeItemType","encodeUTF8","textEncoder","serializeEnvelope","envHeaders","parts","append","next","itemHeaders","stringifiedPayload","concatBuffers","buffers","totalLength","buf","merged","offset","createAttachmentEnvelopeItem","attachment","ITEM_TYPE_TO_DATA_CATEGORY_MAP","envelopeItemTypeToDataCategory","getSdkMetadataForEnvelopeHeader","metadataOrEvent","version","createEventEnvelopeHeaders","sdkInfo","tunnel","dynamicSamplingContext","createClientReportEnvelope","discarded_events","timestamp","clientReportItem","DEFAULT_RETRY_AFTER","parseRetryAfterHeader","now","headerDelay","headerDate","disabledUntil","limits","category","isRateLimited","updateRateLimits","statusCode","updatedRateLimits","rateLimitHeader","retryAfterHeader","retryAfter","categories","delay","DEFAULT_ENVIRONMENT","makeSession$1","context","startingTime","session","sessionToJSON","updateSession","closeSession","DEFAULT_MAX_BREADCRUMBS","Scope","generatePropagationContext","scope","newScope","requestSession","tags","extras","extra","fingerprint","captureContext","updatedScope","breadcrumb","maxBreadcrumbs","maxCrumbs","mergedBreadcrumb","transaction","transactionName","getGlobalEventProcessors","newData","processors","processor","final","addGlobalEventProcessor","API_VERSION","DEFAULT_BREADCRUMBS","Hub","client","_version","top","syntheticException","beforeBreadcrumb","finalBreadcrumb","oldHub","makeMain","integration","customSamplingContext","endSession","release","environment","userAgent","currentSession","sentry","getMainCarrier","hub","registry","getHubFromCarrier","setHubOnCarrier","getCurrentHub","getGlobalHub","hasHubOnCarrier","carrier","getDynamicSamplingContextFromClient","trace_id","public_key","user_segment","dsc","captureException","setContext","setUser","withScope","SENTRY_API_VERSION","getBaseApiEndpoint","_getIngestEndpoint","_encodedAuth","getEnvelopeEndpointWithUrlEncodedAuth","tunnelOrOptions","enhanceEventWithSdkInfo","createSessionEnvelope","metadata","envelopeHeaders","createEventEnvelope","eventType","installedIntegrations","filterDuplicates","integrations","integrationsByName","currentInstance","existingInstance","k","getIntegrationsToSetup","defaultIntegrations","userIntegrations","finalIntegrations","debugIndex","findIndex","debugInstance","setupIntegrations","integrationIndex","setupIntegration","arr","prepareEvent","normalizeDepth","normalizeMaxBreadth","prepared","applyClientOptions","applyIntegrationsMetadata","applyDebugIds","finalScope","attachments","evt","applyDebugMeta","normalizeEvent","dist","debugIdStackParserCache","debugIdMap","debugIdStackFramesCache","cachedDebugIdStackFrameCache","filenameDebugIdMap","debugIdStackTrace","parsedStack","cachedParsedStack","stackFrame","images","filename","integrationNames","maxBreadth","ALREADY_SEEN_ERROR","BaseClient","promisedEvent","transport","clientFinished","transportFlushed","integrationId","env","promise","sendResponse","_event","hook","rest","crashed","errored","ex","mechanism","sessionNonTerminal","ticked","tick","interval","propagationContext","spanId","parentSpanId","finalEvent","sentryError","sampleRate","isTransaction","isTransactionEvent$1","isErrorEvent$1","beforeSendLabel","dataCategory","processBeforeSend","_validateBeforeSendResult","processedEvent","transactionInfo","outcomes","beforeSendResult","invalidValueError","beforeSend","beforeSendTransaction","initAndBind","clientClass","DEFAULT_TRANSPORT_BUFFER_SIZE","createTransport","makeRequest","rateLimits","flush","send","filteredEnvelopeItems","envelopeItemDataCategory","getEventForEnvelopeItem","filteredEnvelope","recordEnvelopeLoss","requestTask","SDK_VERSION","originalFunctionToString","FunctionToString","DEFAULT_IGNORE_ERRORS","DEFAULT_IGNORE_TRANSACTIONS","InboundFilters","_options","eventProcess","self","clientOptions","_mergeOptions","_shouldDropEvent$1","internalOptions","_isSentryError","_isIgnoredError","_isIgnoredTransaction","_isDeniedUrl","_getEventFilterUrl","_isAllowedUrl","ignoreErrors","_getPossibleEventMessages","ignoreTransactions","denyUrls","allowUrls","_getLastValidUrl","WINDOW$1","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","wrap","before","wrapper","sentryWrapped","wrappedArguments","exceptionFromError","parseStackFrames","extractMessage","eventFromPlainObject","isUnhandledRejection","getNonErrorObjectExceptionValue","eventFromError","stacktrace","popSize","getPopSize","reactMinifiedRegexp","eventFromException","attachStacktrace","eventFromUnknownInput","eventFromMessage","eventFromString","domException","captureType","getObjectClassName","MAX_ALLOWED_STRING_LENGTH","BREADCRUMB_INTEGRATION_ID","Breadcrumbs","_consoleBreadcrumb","_domBreadcrumb","_xhrBreadcrumb","_fetchBreadcrumb","_historyBreadcrumb","dom","_innerDomBreadcrumb","_isEvent","startTimestamp","endTimestamp","status_code","body","parsedLoc","parsedFrom","parsedTo","createUserFeedbackEnvelope","feedback","createUserFeedbackEnvelopeItem","BrowserClient","sdkSource","breadcrumbIntegration","cachedFetchImpl","getNativeFetchImplementation","document","fetchImpl","contentWindow","clearCachedFetchImplementation","makeFetchTransport","nativeFetch","pendingBodySize","pendingCount","requestSize","requestOptions","XHR_READYSTATE_DONE","makeXHRTransport","xhr","UNKNOWN_FUNCTION","CHROME_PRIORITY","WINJS_PRIORITY","GECKO_PRIORITY","createFrame","lineno","colno","chromeRegex","chromeEvalRegex","subMatch","extractSafariExtensionDetails","chromeStackLineParser","geckoREgex","geckoEvalRegex","gecko","geckoStackLineParser","winjsRegex","winjs","winjsStackLineParser","defaultStackLineParsers","defaultStackParser","isSafariExtension","isSafariWebExtension","GlobalHandlers","_installGlobalOnErrorHandler","_installGlobalOnUnhandledRejectionHandler","installFunc","globalHandlerLog","getHubAndOptions","_eventFromIncompleteOnError","_enhanceEventWithInitialFrame","addMechanismAndCapture","_eventFromRejectionWithPrimitive","ERROR_TYPES_RE","groups","ev","ev0","ev0s","ev0sf","DEFAULT_EVENT_TARGET","TryCatch","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","_wrapEventTarget","originalCallback","wrapOptions","originalFunction","globalObject","eventName","wrappedEventHandler","originalEventHandler","DEFAULT_KEY","DEFAULT_LIMIT","LinkedErrors","HttpContext","referrer","Dedupe","eventProcessor","currentEvent","_shouldDropEvent","previousEvent","_isSameMessageEvent","_isSameExceptionEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","previousException","_getExceptionFromEvent","currentException","currentFrames","_getFramesFromEvent","previousFrames","frameA","frameB","currentFingerprint","previousFingerprint","init","startSessionTracking","startSessionOnHub","WINDOW","REPLAY_SESSION_KEY","REPLAY_EVENT_NAME","UNABLE_TO_SEND_REPLAY","SESSION_IDLE_PAUSE_DURATION","SESSION_IDLE_EXPIRE_DURATION","MAX_SESSION_LIFE","DEFAULT_FLUSH_MIN_DELAY","DEFAULT_FLUSH_MAX_DELAY","BUFFER_CHECKOUT_TIME","RETRY_BASE_INTERVAL","RETRY_MAX_COUNT","NETWORK_BODY_MAX_SIZE","CONSOLE_ARG_MAX_SIZE","SLOW_CLICK_THRESHOLD","SLOW_CLICK_SCROLL_TIMEOUT","REPLAY_MAX_EVENT_BUFFER_SIZE","MIN_REPLAY_DURATION","MIN_REPLAY_DURATION_LIMIT","NodeType$1","NodeType","isElement","n","isShadowRoot","isInputTypeMasked","maskInputOptions","tagName","actualType","hasInputMaskOptions","maskInputSelector","maskInputValue","unmaskInputSelector","maskInputFn","ORIGINAL_ATTRIBUTE_NAME","is2DCanvasBlank","canvas","chunkSize","x","y","getImageData","originalGetImageData","pixel","getInputType","element","getInputValue","_id","tagNameRegex","IGNORED_NODE","defaultMaskFn","genId","getValidTagName","processedTagName","getCssRulesString","rules","getCssRuleString","rule","cssStringified","isCSSImportRule","validateStringifiedCssRule","regex","stringifyStyleSheet","sheet","extractOrigin","origin","canvasService","canvasCtx","URL_IN_CSS_REF","RELATIVE_PATH","DATA_URI","absoluteToStylesheet","cssText","href","quote1","path1","quote2","path2","path3","filePath","maybeQuote","part","SRCSET_NOT_SPACES","SRCSET_COMMAS_OR_SPACES","getAbsoluteSrcsetString","attributeValue","pos","collectCharacters","regEx","chars","absoluteToDoc","descriptorsStr","inParens","isSVGElement","getHref","transformAttribute","_tagName","_name","maskAllText","unmaskTextSelector","maskTextFn","_shouldMaskAttribute","attribute","_isBlockedElement","blockClass","blockSelector","unblockSelector","eIndex","needMaskingText","node","maskTextClass","maskTextSelector","onceIframeLoaded","iframeEl","iframeLoadTimeout","win","fired","readyState","timer","blankUrl","serializeNode","inlineStylesheet","dataURLOptions","inlineImages","recordCanvas","keepIframeSrcFn","rootId","docId","needBlock","skipAttribute","stylesheet","checked","canvasDataURL","blankCanvas","blankCanvasDataURL","image","oldValue","recordInlineImage","width","parentTagName","textContent","isStyle","isScript","lowerIfExists","maybeAttr","slimDOMExcluded","sn","slimDOMOptions","serializeNodeWithId","map","skipChild","onSerialize","onIframeLoad","preserveWhiteSpace","_serializedNode","serializedNode","recordChild","bypassOptions","childN","serializedChildNode","iframeDoc","serializedIframeNode","snapshot","maskAllInputs","slimDOM","idNodeMap","attributeName","EventType","IncrementalSource","MouseInteractions","CanvasContext","MediaInteractions","ReplayerEvents","on","createMirror","child","DEPARTED_MIRROR_ACCESS_WARNING","_mirror","receiver","throttle$1","wait","hookSetter","d","isRevoked","patch","replacement","getWindowHeight","getWindowWidth","isBlocked","needUnblock","isIgnored","isAncestorRemoved","mirror","isTouchEvent","polyfill","isIframeINode","hasShadowRoot","isNodeInLinkedList","DoubleLinkedList","position","moveKey","isINode","MutationBuffer","mutations","adds","addList","getNextId","ns","nextId","pushAdd","_c","_d","_e","shadowHost","rootShadowHost","notInDoc","currentN","iframe","childSn","isParentRemoved","isAncestorInSet","candidate","_node","m","old","styleObj","pname","newPriority","nodeId","deepDelete","targetId","addsSet","removes","parentNode","set","callbackWrapper","cb","mutationBuffers","getEventTarget","initMutationObserver","rootEl","mutationBuffer","mutationObserverCtor","angularZoneSymbol","observer","initMoveObserver","mousemoveCb","sampling","callbackThreshold","positions","timeBaseline","wrappedCb","totalOffset","updatePosition","clientX","clientY","h","initMouseInteractionObserver","mouseInteractionCb","disableMap","getHandler","eventKey","initScrollObserver","scrollCb","scrollEl","initViewportResizeObserver","viewportResizeCb","lastH","lastW","updateDimension","wrapEventWithUserTriggeredFlag","v","enable","INPUT_TAGS","lastInputValueMap","initInputObserver","inputCb","ignoreClass","ignoreSelector","userTriggeredOnInput","eventHandler","userTriggered","isChecked","cbWithDedup","lastInputValue","propertyDescriptor","hookProperties","getNestedCSSRulePositions","recurse","childRule","hasNestedCSSRule","initStyleSheetObserver","styleSheetRuleCb","insertRule","argumentsList","deleteRule","supportedNestedCSSRuleTypes","canMonkeyPatchNestedCSSRule","unmodifiedFunctions","typeKey","initStyleDeclarationObserver","styleDeclarationCb","setProperty","priority","removeProperty","initMediaInteractionObserver","mediaInteractionCb","currentTime","volume","muted","initFontObserver","fontCb","fontMap","originalFontFace","family","descriptors","fontFace","restoreHandler","mergeHooks","o","hooks","mutationCb","canvasMutationCb","initObservers","currentWindow","mutationObserver","mousemoveHandler","mouseInteractionHandler","scrollHandler","viewportResizeHandler","inputHandler","mediaInteractionHandler","styleSheetObserver","styleDeclarationObserver","fontObserver","pluginHandlers","plugin","IframeManager","ShadowDomManager","manager","shadowRoot","iframeElement","restorePatch","__rest","initCanvas2DMutationObserver","props2D","recordArgs","imgd","pix","hookHandler","initCanvasContextObserver","contextType","lookup","encode","arraybuffer","bytes","base64","webGLVarMap","variableListFor","ctor","contextMap","saveWebGLVar","isInstanceOfWebGLObject","list","serializeArg","src","serializeArgs","patchGLPrototype","mutation","initCanvasWebGLMutationObserver","CanvasManager","canvasContextReset","canvas2DReset","canvasWebGL1and2Reset","setLatestRAFTimestamp","valuesWithType","wrapEvent","wrappedEmit","takeFullSnapshot","record","emit","checkoutEveryNms","checkoutEveryNth","_maskInputOptions","_slimDOMOptions","packFn","mousemoveWait","collectFonts","plugins","onMutation","lastFullSnapshotEvent","incrementalSnapshotCount","isCheckout","exceedCount","exceedTime","wrappedMutationEmit","wrappedScrollEmit","wrappedCanvasMutationEmit","iframeManager","canvasManager","shadowDomManager","observe","tag","timestampToMs","timestampToS","addBreadcrumbEvent","replay","INTERACTIVE_SELECTOR","getClickTargetNode","getTargetNode","isEventWithTarget","onWindowOpen","monkeyPatchWindowOpen","originalWindowOpen","handleClick","clickDetector","clickBreadcrumb","ClickDetector","slowClickConfig","_addBreadcrumbEvent","mutationHandler","nowInSeconds","cleanupWindowOpen","clickHandler","obs","ignoreElement","isClickBreadcrumb","newClick","click","timedOutClicks","hadScroll","hadMutation","isSlowClick","clickCount","timeAfterClickMs","endReason","SLOW_CLICK_TAGS","createBreadcrumb","ATTRIBUTES_TO_RECORD","getAttributesToRecord","normalizedKey","handleDomListener","handleDom","isClick","getBaseDomBreadcrumb","isRrwebNode","getDomTarget","handleKeyboardEvent","getKeyboardBreadcrumb","metaKey","shiftKey","ctrlKey","altKey","isInputElement","hasModifierKey","isCharacterKey","baseBreadcrumb","NAVIGATION_ENTRY_KEYS","isNavigationEntryEqual","dedupePerformanceEntries","currentList","newList","existingNavigationEntries","existingLcpEntries","existingEntries","entry","newEntries","newNavigationEntries","newLcpEntry","navigationEntry","setupPerformanceObserver","performanceObserverHandler","newPerformanceEntries","performanceObserver","EventBufferSizeExceededError","EventBufferArray","eventSize","eventsRet","WorkerHandler","worker","EventBufferCompressionWorker","EventBufferProxy","events","addEventPromises","createEventBuffer","useCompression","workerUrl","hasSessionStorage","clearSession","deleteSession","isExpired","initialTime","expiry","targetTime","isSessionExpired","timeouts","isSampled","saveSession","makeSession","started","lastActivity","segmentId","sampled","getSessionSampleType","sessionSampleRate","allowBuffering","createSession","stickySession","fetchSession","sessionStringFromStorage","sessionObj","getSession","isCustomEvent","addEvent","replayOptions","eventAfterPossibleCallback","maybeApplyCallback","isErrorEvent","isTransactionEvent","isReplayEvent","handleAfterSendEvent","enforceStatusCode","isBaseTransportSend","isRrwebError","shouldSampleForBufferEvent","handleGlobalEventListener","includeAfterSendEventHandling","afterSendHandler","createPerformanceSpans","entries","end","handleHistory","handleHistorySpanListener","shouldFilterRequest","_isSentryRequest","addNetworkBreadcrumb","handleFetch","fetchData","handleFetchSpanListener","handleXhr","handleXhrSpanListener","OBJ","OBJ_KEY","OBJ_KEY_STR","OBJ_VAL","OBJ_VAL_STR","OBJ_VAL_COMPLETED","ARR","ARR_VAL","ARR_VAL_STR","ARR_VAL_COMPLETED","ALLOWED_PRIMITIVES","completeJson","incompleteJson","json","lastPos","lastStep","_fixLastStep","_maybeFixIncompleteObjValue","_maybeFixIncompleteArrValue","_findLastArrayDelimiter","char","startPos","evaluateJson","_evaluateJsonPos","curStep","_isEscaped","_handleQuote","_handleObj","_handleArr","_handleColon","_handleComma","_handleObjClose","_handleArrClose","fixJson","getBodySize","formDataStr","_serializeFormData","parseContentLengthHeader","getBodyString","makeNetworkReplayBreadcrumb","buildSkippedNetworkRequestOrResponse","bodySize","buildNetworkRequestOrResponse","info","normalizedBody","warnings","normalizeNetworkBody","getAllowedHeaders","allowedHeaders","filteredHeaders","formData","exceedsSizeLimit","_strIsProbablyJson","first","last","urlMatches","urls","fullUrl","getFullUrl","baseURI","fixedUrl","captureFetchBreadcrumbToReplay","_prepareFetchData","enrichFetchBreadcrumb","_getFetchRequestArgBody","reqSize","resSize","requestBodySize","responseBodySize","captureDetails","_getRequestInfo","_getResponseInfo","networkCaptureBodies","networkRequestHeaders","getRequestHeaders","requestBody","bodyStr","networkResponseHeaders","getAllHeaders","res","bodyText","_parseFetchBody","allHeaders","getHeadersFromOptions","captureXhrBreadcrumbToReplay","_prepareXhrData","enrichXhrBreadcrumb","getResponseHeaders","handleNetworkBreadcrumbs","networkDetailAllowUrls","networkDetailDenyUrls","beforeAddNetworkBreadcrumb","_isXhrBreadcrumb","_isXhrHint","_isFetchBreadcrumb","_isFetchHint","_LAST_BREADCRUMB","isBreadcrumbWithCategory","handleScopeListener","handleScope","newBreadcrumb","normalizeConsoleBreadcrumb","isTruncated","normalizedArgs","normalizedArg","fixedJson","addGlobalListeners","hasHooks","replayId","addMemoryEntry","createMemoryEntry","memoryEntry","jsHeapSizeLimit","totalJSHeapSize","usedJSHeapSize","time","ENTRY_TYPES","createResourceEntry","createPaintEntry","createNavigationEntry","createLargestContentfulPaint","createPerformanceEntries","createPerformanceEntry","getAbsoluteTime","entryType","startTime","decodedBodySize","domComplete","encodedBodySize","domContentLoadedEventStart","domContentLoadedEventEnd","domInteractive","loadEventStart","loadEventEnd","redirectCount","transferSize","initiatorType","responseEnd","responseStatus","startTimeOrNavigationActivation","navEntry","debounce","callbackReturnValue","timerId","maxTimerId","maxWait","invokeFunc","cancelTimers","debounced","getHandleRecordingEmit","hadFirstEvent","_isCheckout","addSettingsEvent","earliestEvent","log","createOptionsEvent","createReplayEnvelope","replayEvent","recordingData","prepareRecordingData","payloadWithSequence","replayHeaders","sequence","prepareReplayEvent","event_id","preparedEvent","sendReplayRequest","segment_id","eventContext","preparedRecordingData","errorIds","traceIds","initialTimestamp","baseEvent","TransportStatusCodeError","sendReplay","replayData","retryConfig","THROTTLED","SKIPPED","throttle","maxCount","durationSeconds","_cleanup","_value","_getTotalCount","isThrottled","wasThrottled","ReplayContainer","recordingOptions","slowClickTimeout","slowClickIgnoreSelectors","errorSampleRate","previousSessionId","continueRecording","activityTime","hasStoppedRecording","cbResult","oldSessionId","urlPath","lastTransaction","currentSessionId","expired","checkout","_lastActivity","eventBuffer","_context","force","mutationLimit","mutationBreadcrumbLimit","overMutationLimit","getOption","selectors","defaultSelectors","deprecatedClassOption","deprecatedSelectorOption","deprecatedSelectors","allSelectors","getPrivacyOptions","mask","unmask","block","unblock","ignore","defaultBlockedElements","maskSelector","unmaskSelector","isBrowser","isElectronNodeRenderer","MEDIA_SELECTORS","DEFAULT_NETWORK_HEADERS","_initialized","Replay","flushMinDelay","flushMaxDelay","minReplayDuration","_experiments","blockAllMedia","maskFn","beforeAddRecordingEvent","_getMergedNetworkHeaders","finalOptions","loadReplayOptionsFromClient","initialOptions","opt","CaptureConsole","initSentry","setSentryUser","subscribeToProduct","axios","PLANS","checkmark_changes","p0","p0_class_value","p1","p1_class_value","p2","p2_class_value","disabledClass","ul","ul_class_value","modal_changes","onLearnMore","orgPlanChannel","plan","planName","$currentOrg","checkoutURL","newPlan","toggleConfetti","onClose","upgraded","$currentOrgPath","toggleIsYearlyPlan","supabase$1","isLoadingPlan","show_if_1","create_if_block_7","orglandingpage_changes","isOrgPage","isCoursesPage","isLMSPage","landingnavigation_changes","orgnavigation_props","orgnavigation_changes","$page","queryParam","setupAnalytics","initPosthog","setAnalyticsUser","identifyPosthogUser","getProfile","authUser","profileData","regexUsernameMatch","isGoogleAuth","newProfileData","error2","$user","handleLocaleChange","data2","error3","currentOrg","memberId","params","ROUTE","profile","orgRes","getOrganizations","isStudentAccount","isEmpty","handleResize","authListener","metaTags","merge$1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,50,51,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120]}