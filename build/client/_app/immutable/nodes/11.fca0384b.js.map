{"version":3,"file":"11.fca0384b.js","sources":["../../../../../../src/routes/courses/[id]/attendance/+page.js","../../../../../../src/lib/utils/services/attendance/index.js","../../../../../../src/lib/utils/store/attendance.ts","../../../../../../src/routes/courses/[id]/attendance/+page.svelte"],"sourcesContent":["export const load = ({ params = { id: '' } }) => {\n  return {\n    courseId: params.id\n  };\n};\n","import { supabase } from '$lib/utils/functions/supabase';\n\nexport async function takeAttendance(update) {\n  return supabase.from('group_attendance').upsert(update).select();\n}\n","import { writable } from 'svelte/store';\n\nexport const attendance = writable<{\n  [key: string]: {\n    [key: string]: {\n      is_present: boolean;\n      id: number;\n    };\n  };\n}>({});\n","<script lang=\"ts\">\n  import {\n    Search,\n    Checkbox,\n    StructuredList,\n    StructuredListBody,\n    StructuredListCell,\n    StructuredListHead,\n    StructuredListRow,\n    Pagination\n  } from 'carbon-components-svelte';\n  import AudioConsoleIcon from 'carbon-icons-svelte/lib/AudioConsole.svelte';\n  import CourseContainer from '$lib/components/CourseContainer/index.svelte';\n  import PageNav from '$lib/components/PageNav/index.svelte';\n  import PageBody from '$lib/components/PageBody/index.svelte';\n  import Box from '$lib/components/Box/index.svelte';\n  import { course, group } from '$lib/components/Course/store';\n  import { getLectureNo } from '$lib/components/Course/function.js';\n  import { lessons } from '$lib/components/Course/components/Lesson/store/lessons';\n  import { ROLE } from '$lib/utils/constants/roles';\n  import { takeAttendance } from '$lib/utils/services/attendance';\n  import { snackbar } from '$lib/components/Snackbar/store';\n  import { attendance } from '$lib/utils/store/attendance';\n  import { profile } from '$lib/utils/store/user';\n  import type { GroupPerson, Lesson } from '$lib/utils/types/index';\n  import { browser } from '$app/environment';\n  import { globalStore } from '$lib/utils/store/app';\n  import { t } from '$lib/utils/functions/translations';\n\n  export let data;\n\n  interface CourseData {\n    attendance: {\n      student_id: string;\n      lesson_id: string;\n      is_present: boolean;\n      id: number;\n    }[];\n  }\n\n  let students: GroupPerson[] = [];\n  let searchValue = '';\n\n  function setAttendance(courseData: CourseData) {\n    for (const attendanceItem of courseData.attendance) {\n      const { student_id, lesson_id, is_present, id } = attendanceItem;\n\n      if (!$attendance[student_id]) {\n        $attendance[student_id] = {\n          [lesson_id]: {\n            id,\n            is_present\n          }\n        };\n      } else {\n        $attendance[student_id] = {\n          ...$attendance[student_id],\n          [lesson_id]: {\n            id,\n            is_present\n          }\n        };\n      }\n    }\n  }\n\n  function handleAttendanceChange(e: any, student: GroupPerson, lesson: Lesson) {\n    if ($globalStore.isStudent) return;\n\n    const attendanceItem = $attendance[student.id]\n      ? $attendance[student.id][lesson.id] || { id: undefined }\n      : { id: undefined };\n\n    /* \n    This validation is useless. We shouldn't assume we already have an attendance item id \n    because it might be a new attendance.\n    if (!attendanceItem.id) {\n      snackbar.error(\"Something isn't right. Please reload and take attendance again\");\n      console.error(`Attendance Id Missing`, courseId, student.id, lesson.id);\n      return;\n    }\n    */\n\n    const _data = {\n      id: attendanceItem.id,\n      student_id: student.id,\n      is_present: e.target.checked,\n      lesson_id: lesson.id,\n      course_id: data.courseId\n    };\n\n    takeAttendance(_data).then((res) => {\n      if (res.error) {\n        console.error(`res.error`, res.error);\n        snackbar.error('snackbar.attendance.error.reload');\n      } else {\n        // console.log('res', JSON.stringify(res));\n        const { id, is_present } = res.data[0];\n        if ($attendance[student.id]) {\n          $attendance[student.id][lesson.id] = {\n            id,\n            is_present\n          };\n        } else {\n          $attendance[student.id] = {\n            [lesson.id]: {\n              id,\n              is_present\n            }\n          };\n        }\n      }\n    });\n  }\n\n  // function for the searchbar\n  function searchStudents(query: string, _students: GroupPerson[]) {\n    const lowercaseQuery = query.toLowerCase();\n    return _students.filter((student) =>\n      student.profile?.fullname?.toLowerCase()?.includes(lowercaseQuery)\n    );\n  }\n\n  async function firstRender(courseId: string) {\n    if (courseId) {\n      if (!Object.keys($attendance).length) {\n        setAttendance($course);\n      }\n      return;\n    }\n  }\n\n  $: students = $globalStore.isStudent\n    ? $group.people.filter((person) => !!person.profile && person.profile.id === $profile.id)\n    : $group.people.filter((person) => !!person.profile && person.role_id === ROLE.STUDENT);\n\n  $: browser && $course.id && firstRender($course.id);\n</script>\n\n<CourseContainer bind:courseId={data.courseId}>\n  <PageNav title={$t('course.navItem.attendance.title')} />\n  <PageBody width=\"w-full max-w-6xl md:w-11/12\">\n    <section class=\"flex items-center mx-2 lg:mx-9 my-5\">\n      <div\n        class=\"flex flex-col lg:flex-row items-start gap-2 lg:items-center justify-between w-full\"\n      >\n        <div class=\"flex\">\n          <p class=\"flex items-center mr-5\">\n            <Checkbox checked disabled />\n            {$t('course.navItem.attendance.present')}\n          </p>\n          <p class=\"flex items-center\">\n            <Checkbox disabled />\n            {$t('course.navItem.attendance.absent')}\n          </p>\n        </div>\n        <div>\n          <Search\n            class=\"dark:text-slate-950\"\n            placeholder={$t('course.navItem.attendance.search_students')}\n            bind:value={searchValue}\n          />\n        </div>\n      </div>\n    </section>\n\n    <section class=\"my-5 mx-2 lg:mx-9\">\n      <StructuredList class=\"m-0 relative\">\n        <!-- Moved the lesson headers outside the students loop -->\n        <StructuredListHead class=\"bg-primary-100\">\n          <StructuredListRow head class=\"mx-7\">\n            <StructuredListCell head class=\"text-primary-600 py-3\"\n              >{$t('course.navItem.attendance.student')}</StructuredListCell\n            >\n            {#each $lessons as lesson, index}\n              <StructuredListCell head class=\"text-primary-600 py-3\"\n                >{$t('course.navItem.attendance.lesson')} 0{getLectureNo(\n                  index + 1\n                )}</StructuredListCell\n              >\n            {/each}\n          </StructuredListRow>\n        </StructuredListHead>\n\n        {#each searchStudents(searchValue, students) as student}\n          <StructuredListBody>\n            <StructuredListRow>\n              <StructuredListCell>\n                <div class=\"w-1/4 flex items-center\">\n                  <p class=\"dark:text-white font-semibold\">\n                    {student.profile.fullname}\n                  </p>\n                </div>\n              </StructuredListCell>\n              {#each $lessons as lesson}\n                <StructuredListCell class=\"\">\n                  <Checkbox\n                    class={$globalStore.isStudent ? 'cursor-not-allowed' : ''}\n                    disabled={$globalStore.isStudent}\n                    checked={$attendance[student.id]\n                      ? $attendance[student.id][lesson.id]\n                        ? $attendance[student.id][lesson.id].is_present\n                        : false\n                      : false}\n                    on:change={(e) => handleAttendanceChange(e, student, lesson)}\n                  />\n                </StructuredListCell>\n              {/each}\n            </StructuredListRow>\n          </StructuredListBody>\n        {/each}\n      </StructuredList>\n      {#if students.length === 0}\n        <Box className=\"h-[300px] w-full\">\n          <AudioConsoleIcon size={32} class=\"carbon-icon w-80\" />\n          <h3 class=\"text-3xl text-gray-500 dark:text-white text-center\">\n            {$t('course.navItem.attendance.no_student')}\n          </h3>\n        </Box>\n      {/if}\n      {#if students.length !== 0}\n        <Pagination totalItems={10} pageSizes={[10, 15, 20]} />\n      {/if}\n    </section>\n  </PageBody>\n</CourseContainer>\n"],"names":["load","params","takeAttendance","update","supabase","attendance","writable","t_1_value","ctx","dirty","set_data","t_1","t0_value","t0","checkbox_changes","t1_value","current","t1","t4_value","t4","search_changes","pagenav_changes","coursecontainer_props","coursecontainer_changes","searchStudents","query","_students","lowercaseQuery","student","_c","_b","_a","data","$$props","students","attendanceItem","courseData","$attendance","student_id","lesson_id","id","is_present","set_store_value","handleAttendanceChange","e","lesson","_data","snackbar","courseId","setAttendance","$course","change_handler","$$self","value","$$invalidate","$globalStore","firstRender"],"mappings":"qjDAAA,MAAAA,GAAA,CAAA,CAAA,OAAAC,EAAA,CAAA,GAAA,EAAA,CAAA,KACA,CACA,SAAAA,EAAA,EACA,yGCDA,eAAAC,GAAAC,EAAA,CACA,OAAAC,GAAA,KAAA,kBAAA,EAAA,OAAAD,CAAA,EAAA,OAAA,CACA,CCFA,MAAAE,GAAAC,GAAA,CAAA,CAAA,oMC0KgB,IAAAC,EAAAC,EAAA,CAAA,EAAA,mCAAA,EAAA,+DAAAC,EAAA,IAAAF,KAAAA,EAAAC,EAAA,CAAA,EAAA,mCAAA,EAAA,KAAAE,EAAAC,EAAAJ,CAAA,iCAIE,IAAAK,EAAAJ,EAAA,CAAA,EAAA,kCAAA,EAAA,4IAAAC,EAAA,IAAAG,KAAAA,EAAAJ,EAAA,CAAA,EAAA,kCAAA,EAAA,KAAAE,EAAAG,EAAAD,CAAA,gmEAqBS,MAAAJ,EAAA,CAAA,EAAA,kCACG,SAAAA,EAAA,CAAA,EAAA,kCAENA,EAAA,CAAA,EAAAA,EAAA,EAAA,EAAA,EAAA,EAAAA,EAAA,EAAA,EAAA,EAAA,gLAHGC,EAAA,IAAAK,EAAA,MAAAN,EAAA,CAAA,EAAA,mCACGC,EAAA,IAAAK,EAAA,SAAAN,EAAA,CAAA,EAAA,4CAENA,EAAA,CAAA,EAAAA,EAAA,EAAA,EAAA,EAAA,EAAAA,EAAA,EAAA,EAAA,EAAA,kuGAgBXO,EAAAP,EAAA,CAAA,EAAA,sCAAA,EAAA,yVAAA,CAAAQ,GAAAP,EAAA,KAAAM,KAAAA,EAAAP,EAAA,CAAA,EAAA,sCAAA,EAAA,KAAAE,EAAAO,EAAAF,CAAA,yIAKmB,MAAA,CAAA,WAAA,GAAA,UAAA,CAAA,GAAA,GAAA,EAAA,CAAA,wLAxEnBA,EAAAP,EAAA,CAAA,EAAA,mCAAA,EAAA,aAIAU,EAAAV,EAAA,CAAA,EAAA,kCAAA,EAAA,+JAMY,YAAAA,EAAA,CAAA,EAAA,2CAAA,s8CAVZ,CAAAQ,GAAAP,EAAA,KAAAM,KAAAA,EAAAP,EAAA,CAAA,EAAA,mCAAA,EAAA,KAAAE,EAAAO,EAAAF,CAAA,GAIA,CAAAC,GAAAP,EAAA,KAAAS,KAAAA,EAAAV,EAAA,CAAA,EAAA,kCAAA,EAAA,KAAAE,EAAAS,EAAAD,CAAA,aAMYT,EAAA,KAAAW,EAAA,YAAAZ,EAAA,CAAA,EAAA,2CAAA,moBAnBP,MAAAA,EAAA,CAAA,EAAA,iCAAA,+PAAAC,EAAA,KAAAY,EAAA,MAAAb,EAAA,CAAA,EAAA,iCAAA,8SADc,OAAAA,EAAA,CAAA,EAAA,WAAA,SAAAc,EAAA,SAAAd,EAAA,CAAA,EAAA,+MAAAe,EAAA,SAAAf,EAAA,CAAA,EAAA,iHAvBrB,SAAAgB,GAAAC,EAAAC,EAAA,CACD,MAAAC,EAAAF,EAAA,YAAA,EACC,OAAAC,EAAA,OAAAE,GAAA,WAAA,OAAAC,GAAAC,GAAAC,EAAAH,EAAA,UAAA,YAAAG,EAAA,WAAA,YAAAD,EAAA,gBAAA,YAAAD,EAAA,SAAAF,GAAA,oLAzFE,GAAA,CAAA,KAAAK,CAAA,EAAAC,EAWPC,EAAA,CAAA,qBAIS,UAAAC,KAAAC,EAAA,WAAA,qDAGJC,EAAAC,CAAA,QAQHD,EAAAC,CAAA,EAAA,CACK,GAAAD,EAAAC,CAAA,EACF,CAAAC,CAAA,EAAA,CAAA,GAAAC,EAAA,WAAAC,CAAA,MATHC,GAAArC,GAAAgC,EAAAC,CAAA,EAAA,CAAA,CAAAC,CAAA,EAAA,CAAA,GAAAC,EAAA,WAAAC,CAAA,CAAA,EAAAJ,CAAA,GAkBG,SAAAM,EAAAC,EAAAhB,EAAAiB,EAAA,uBAiBD,MAAAC,EAAA,CACJ,YAdET,EAAAT,EAAA,EAAA,EAAAiB,EAAA,EAAA,GAAA,CAAA,GAAA,MAAA,eAcF,GACA,WAAAjB,EAAA,GACA,WAAAgB,EAAA,OAAA,QACA,UAAAC,EAAA,GACA,UAAAb,EAAA,uEAMEe,GAAA,MAAA,kCAAA,2CAIIV,EAAAT,EAAA,EAAA,EACFc,GAAArC,GAAAgC,EAAAT,EAAA,EAAA,EAAAiB,EAAA,EAAA,EAAA,CAAA,GAAAL,GAAA,WAAAC,CAAA,EAAAJ,CAAA,EAKAK,GAAArC,GAAAgC,EAAAT,EAAA,EAAA,EAAA,CAAA,CAAAiB,EAAA,EAAA,EAAA,CAAA,GAAAL,GAAA,WAAAC,CAAA,CAAA,EAAAJ,CAAA,yBAoBF,GAAAW,EAAA,wBAEAC,EAAAC,CAAA,mCA8EwB,MAAAC,EAAA,CAAAvB,EAAAiB,EAAAD,IAAAD,EAAAC,EAAAhB,EAAAiB,CAAA,gBAjEAO,EAAA,GAAA,UAAApB,EAAA,SAAAqB,CAAA,IAAArB,EAAA,SAAAqB,0FAP9BC,EAAA,EAAApB,EAAAqB,EAAA,wIAIAL,EAAA,IAAAM,EAAAN,EAAA,EAAA"}