{"version":3,"file":"23.aa24a176.js","sources":["../../../../../../src/routes/invite/t/[hash]/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { goto } from '$app/navigation';\n  import TextField from '$lib/components/Form/TextField.svelte';\n  import PrimaryButton from '$lib/components/PrimaryButton/index.svelte';\n  import { getSupabase } from '$lib/utils/functions/supabase';\n  import {\n    authValidation,\n    getConfirmPasswordError,\n    getDisableSubmit\n  } from '$lib/utils/functions/validator';\n  import { SIGNUP_FIELDS } from '$lib/utils/constants/authentication';\n  import AuthUI from '$lib/components/AuthUI/index.svelte';\n  import { currentOrg, currentOrgPath } from '$lib/utils/store/org';\n  import { setTheme } from '$lib/utils/functions/theme';\n  import type { CurrentOrg } from '$lib/utils/types/org';\n  import { onMount } from 'svelte';\n  import type { Profile } from '$lib/components/Course/components/People/types';\n  import { logout } from '$lib/utils/functions/logout';\n\n  export let data;\n\n  let supabase = getSupabase();\n  let fields = Object.assign({}, SIGNUP_FIELDS);\n  let loading = false;\n\n  let errors: {\n    name?: string;\n    email?: string;\n    password?: string;\n    confirmPassword?: string;\n  } = {};\n\n  let submitError: string;\n  let disableSubmit = false;\n  let formRef: HTMLFormElement;\n\n  async function handleSubmit() {\n    const validationRes = authValidation({\n      ...fields,\n      email: 'test@gmail.com' // validation for this ema\n    });\n    console.log('validationRes', validationRes);\n\n    if (Object.keys(validationRes).length) {\n      errors = Object.assign(errors, validationRes);\n      return;\n    }\n\n    try {\n      loading = true;\n      let profile: Profile | null = data.invite.profile;\n\n      if (!data.invite.profile) {\n        // Signup\n        const { data: signupData, error } = await supabase.auth.signUp({\n          email: data.invite.email,\n          password: fields.password\n        });\n\n        console.log('Signup', signupData);\n        if (error) throw error;\n\n        if (!signupData.user) {\n          throw 'User cannot be created ';\n        }\n\n        // Insert profile\n        const userId = signupData.user.id;\n        const profileRes = await supabase\n          .from('profile')\n          .insert({\n            id: userId,\n            username: fields.name.toLowerCase().replace(' ', '-') + new Date().getTime(),\n            fullname: fields.name,\n            email: data.invite.email\n          })\n          .select();\n\n        console.log('Insert profile', profileRes.data);\n\n        if (profileRes.error) {\n          throw profileRes.error;\n        }\n\n        profile = profileRes.data[0] || {};\n      }\n\n      if (!profile?.id) {\n        throw 'Unable to create profile';\n      }\n\n      const res = await supabase.auth.signInWithPassword({\n        email: profile.email,\n        password: fields.password\n      });\n\n      if (res.error) {\n        throw res.error;\n      }\n\n      // Update member response\n      const updateMemberRes = await supabase\n        .from('organizationmember')\n        .update({\n          verified: true,\n          profile_id: profile.id\n        })\n        .match({ email: profile.email, organization_id: data.invite.currentOrg?.id });\n\n      console.log('Update member response', updateMemberRes);\n\n      formRef?.reset();\n\n      return goto($currentOrgPath);\n    } catch (error) {\n      if (error instanceof Error) {\n        submitError = error.message;\n      } else {\n        submitError = error?.toString() || '';\n      }\n    } finally {\n      loading = false;\n    }\n  }\n\n  function setCurOrg(cOrg: CurrentOrg) {\n    if (!cOrg) return;\n\n    console.log(cOrg);\n    currentOrg.set(cOrg);\n  }\n\n  onMount(async () => {\n    await logout(false);\n\n    setTheme(data.invite.currentOrg?.theme || '');\n\n    setCurOrg(data.invite.currentOrg as CurrentOrg);\n  });\n\n  $: errors.confirmPassword = getConfirmPasswordError(fields);\n  $: disableSubmit = getDisableSubmit(fields);\n\n  $: console.log('data', data.invite);\n\n  $: console.log('org', $currentOrg);\n  $: console.log('path', $currentOrgPath);\n</script>\n\n<svelte:head>\n  <title>Join KinetsHub</title>\n</svelte:head>\n\n<AuthUI {supabase} isLogin={false} {handleSubmit} isLoading={loading} showLogo={true} bind:formRef>\n  <div class=\"mt-4 w-full\">\n    <p class=\"dark:text-white text-lg font-semibold mb-6\">\n      {#if data.invite.profile}\n        Log in to join\n      {:else}\n        Create a free account to join\n      {/if}\n    </p>\n    <TextField\n      label=\"Your Email\"\n      value={data.invite.email}\n      type=\"email\"\n      placeholder=\"you@domain.com\"\n      className=\"mb-6\"\n      inputClassName=\"w-full\"\n      isDisabled={true}\n    />\n    {#if !data.invite.profile}\n      <TextField\n        label=\"Full Name\"\n        bind:value={fields.name}\n        type=\"text\"\n        autoFocus={true}\n        placeholder=\"e.g Joke Silva\"\n        className=\"mb-6\"\n        inputClassName=\"w-full\"\n        isDisabled={loading}\n        errorMessage={errors.name}\n        isRequired\n      />\n    {/if}\n    <TextField\n      label=\"Your Password\"\n      bind:value={fields.password}\n      type=\"password\"\n      placeholder=\"************\"\n      className=\"mb-6\"\n      inputClassName=\"w-full\"\n      isDisabled={loading}\n      errorMessage={errors.password}\n      helperMessage=\"Password must be more than 6 characters\"\n      isRequired\n    />\n    {#if !data.invite.profile}\n      <TextField\n        label=\"Confirm Password\"\n        bind:value={fields.confirmPassword}\n        type=\"password\"\n        placeholder=\"************\"\n        className=\"mb-6\"\n        inputClassName=\"w-full\"\n        isDisabled={loading}\n        errorMessage={errors.confirmPassword}\n        isRequired\n      />\n    {/if}\n    {#if submitError}\n      <p class=\"text-sm text-red-500\">{submitError}</p>\n    {/if}\n  </div>\n\n  <div class=\"my-4 w-full flex justify-end items-center\">\n    <PrimaryButton\n      label=\"Accept Invite\"\n      type=\"submit\"\n      className=\"sm:w-full w-full\"\n      isDisabled={disableSubmit || loading}\n      isLoading={loading}\n    />\n  </div>\n</AuthUI>\n"],"names":["ctx","textfield_props","dirty","textfield_changes","textfield1_props","textfield1_changes","primarybutton_changes","data","$$props","errors","submitError","formRef","handleSubmit","profile","fields","userId","signupData","res","supabase","goto","$currentOrgPath","error","$$invalidate","cOrg","currentOrg","onMount","logout","setTheme","_a","$$self","value"],"mappings":"qjDAqLsB,aAAAA,EAAA,CAAA,EAAA,oBAPF,OAAAA,EAAA,CAAA,EAAA,OAAA,SAAAC,EAAA,MAAAD,EAAA,CAAA,EAAA,qKAOEE,EAAA,IAAAC,EAAA,aAAAH,EAAA,CAAA,EAAA,qBAPFG,EAAA,MAAAH,EAAA,CAAA,EAAA,gSAgCE,aAAAA,EAAA,CAAA,EAAA,+BANF,OAAAA,EAAA,CAAA,EAAA,kBAAA,SAAAC,EAAA,MAAAD,EAAA,CAAA,EAAA,gLAMEE,EAAA,IAAAC,EAAA,aAAAH,EAAA,CAAA,EAAA,gCANFG,EAAA,MAAAH,EAAA,CAAA,EAAA,kzBAPA,aAAAA,EAAA,CAAA,EAAA,gFANFA,EAAA,CAAA,EAAA,WAAA,SAAAI,EAAA,MAAAJ,EAAA,CAAA,EAAA,iMAiCA,WAAAA,EAAA,CAAA,GAAAA,EAAA,CAAA,siCA3BEE,EAAA,IAAAG,EAAA,aAAAL,EAAA,CAAA,EAAA,yBANFK,EAAA,MAAAL,EAAA,CAAA,EAAA,0NAiCAE,EAAA,KAAAI,EAAA,WAAAN,EAAA,CAAA,GAAAA,EAAA,CAAA,m/BAzML,GAAA,CAAA,KAAAO,CAAA,EAAAC,qCAMPC,EAAA,CAAA,EAOAC,OAEAC,EAEW,eAAAC,GAAA,yJAcP,IAAAC,EAAAN,EAAA,OAAA,QAEC,GAAA,CAAAA,EAAA,OAAA,QAAA,4CAGD,MAAAA,EAAA,OAAA,MACA,SAAAO,EAAA,2DAOM,KAAA,0BAIF,MAAAC,EAAAC,EAAA,KAAA,0CAKF,SAAAF,EAAA,KAAA,YAAA,EAAA,QAAA,IAAA,GAAA,EAAA,IAAA,KAAA,EAAA,QAAA,EACA,SAAAA,EAAA,KACA,MAAAP,EAAA,OAAA,KAED,CAAA,EAAA,OAAA,oGAYG,KAAA,2BAGF,MAAAU,EAAA,MAAAC,EAAA,KAAA,mBAAA,CACJ,MAAAL,EAAA,MACA,SAAAC,EAAA,4HAcS,MAAAD,EAAA,oIAMJM,GAAAC,CAAA,CACA,OAAAC,EAAA,oBAELC,EAAA,EAAAZ,EAAAW,EAAA,OAAA,EAEAC,EAAA,EAAAZ,GAAAW,GAAA,YAAAA,EAAA,aAAA,EAAA,mCAQCE,IAEL,QAAA,IAAAA,CAAA,EACAC,EAAA,IAAAD,CAAA,GAGFE,GAAA,SAAA,OACQ,MAAAC,GAAA,EAAA,EAENC,KAAAC,EAAArB,EAAA,OAAA,aAAA,YAAAqB,EAAA,QAAA,EAAA,yCAuCgBC,EAAA,GAAA,UAAAf,EAAA,KAAAgB,CAAA,IAAAhB,EAAA,KAAAgB,wBAaFD,EAAA,GAAA,UAAAf,EAAA,SAAAgB,CAAA,IAAAhB,EAAA,SAAAgB,wBAaED,EAAA,GAAA,UAAAf,EAAA,gBAAAgB,CAAA,IAAAhB,EAAA,gBAAAgB,wLAzDlB,QAAA,IAAA,OAAAvB,EAAA,MAAA"}