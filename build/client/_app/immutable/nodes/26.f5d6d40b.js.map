{"version":3,"file":"26.f5d6d40b.js","sources":["../../../../../../src/routes/lms/community/ask/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { goto } from '$app/navigation';\n  import ArrowLeftIcon from 'carbon-icons-svelte/lib/ArrowLeft.svelte';\n  import { Dropdown } from 'carbon-components-svelte';\n  import { currentOrg } from '$lib/utils/store/org';\n  import PrimaryButton from '$lib/components/PrimaryButton/index.svelte';\n  import { askCommunityValidation } from '$lib/utils/functions/validator';\n  import { supabase } from '$lib/utils/functions/supabase';\n  import { snackbar } from '$lib/components/Snackbar/store';\n  import generateSlug from '$lib/utils/functions/generateSlug';\n  import TextEditor from '$lib/components/TextEditor/index.svelte';\n  import TextField from '$lib/components/Form/TextField.svelte';\n  import { profile } from '$lib/utils/store/user';\n  import { t } from '$lib/utils/functions/translations';\n  import { courses } from '$lib/components/Courses/store';\n  import type { Course } from '$lib/utils/types';\n\n  let errors: {\n    title?: string;\n    courseId?: string;\n  } = {};\n  let fields = {\n    title: '',\n    body: '',\n    courseId: ''\n  };\n\n  let fetchedCourses: Course[] = [];\n\n  async function getCourses(userId: string | null, orgId: string) {\n    if ($courses.length) {\n      fetchedCourses = [...$courses];\n      return;\n    }\n\n    const coursesResults = await fetchCourses(userId, orgId);\n    fetchedCourses = coursesResults?.allCourses || [];\n  }\n\n  async function handleSave() {\n    errors = askCommunityValidation(fields);\n    console.log('handleSave errors', errors);\n\n    if (Object.keys(errors).length) {\n      return;\n    }\n\n    const { data: question, error } = await supabase\n      .from('community_question')\n      .insert({\n        title: fields.title,\n        body: fields.body,\n        course_id: fields.courseId,\n        organization_id: $currentOrg.id,\n        author_profile_id: $profile.id,\n        votes: 0,\n        slug: generateSlug(fields.title)\n      })\n      .select();\n\n    if (error) {\n      console.error('Error: asking question', error);\n      snackbar.error();\n    } else {\n      const slug = question[0]?.slug;\n      console.log('Success: asking question in lms', question, slug);\n      snackbar.success('snackbar.community.success.question_submitted');\n\n      goto(`/lms/community/${slug}`);\n    }\n  }\n\n  $: {\n    if ($profile.id && $currentOrg.id) {\n      getCourses($profile.id, $currentOrg.id);\n    }\n  }\n</script>\n\n<svelte:head>\n  <title>Ask the Community - KinetsHub</title>\n</svelte:head>\n\n<section class=\"w-full max-w-3xl mx-auto\">\n  <div class=\"p-5\">\n    <a class=\"text-gray-500 dark:text-white text-md flex items-center\" href={`/lms/community`}>\n      <ArrowLeftIcon size={24} class=\"carbon-icon dark:text-white\" />\n      {$t('community.ask.go_back')}\n    </a>\n    <div class=\"flex items-center justify-between\">\n      <h1 class=\"dark:text-white text-3xl font-bold\">{$t('community.ask.ask_the')}</h1>\n      <PrimaryButton label={$t('community.ask.publish')} onClick={handleSave} />\n    </div>\n  </div>\n\n  <div class=\"mb-3 p-2 flex gap-x-5 justify-between\">\n    <TextField\n      bind:value={fields.title}\n      placeholder={$t('community.ask.title')}\n      errorMessage={errors.title}\n      className=\"w-[75%]\"\n    />\n    <Dropdown\n      class=\"w-[25%] h-full\"\n      size=\"xl\"\n      label={$t('community.ask.select_course')}\n      invalid={!!errors.courseId}\n      invalidText={errors.courseId}\n      items={fetchedCourses.map((course) => ({ id: course.id, text: course.title }))}\n      bind:selectedId={fields.courseId}\n    />\n  </div>\n\n  <TextEditor\n    bind:value={fields.body}\n    placeholder={$t('community.ask.ask_community')}\n    onChange={(html) => (fields.body = html)}\n  />\n</section>\n"],"names":["t2_value","ctx","t4_value","textfield_props","func","dropdown_props","texteditor_props","current","dirty","set_data","t2","t4","primarybutton_changes","textfield_changes","dropdown_changes","texteditor_changes","errors","fields","fetchedCourses","getCourses","userId","orgId","$$invalidate","$courses","coursesResults","handleSave","askCommunityValidation","question","error","supabase","$currentOrg","$profile","snackbar","goto","slug","$$self","value","func_1","html"],"mappings":"0zCAuFOA,EAAAC,EAAA,CAAA,EAAA,uBAAA,EAAA,WAG+CC,EAAAD,EAAA,CAAA,EAAA,uBAAA,EAAA,gHAC1B,MAAAA,EAAA,CAAA,EAAA,uBAAA,gDAOT,YAAAA,EAAA,CAAA,EAAA,qBAAA,EACC,aAAAA,EAAA,CAAA,EAAA,2BAFFA,EAAA,CAAA,EAAA,QAAA,SAAAE,EAAA,MAAAF,EAAA,CAAA,EAAA,sHAQL,MAAAA,EAAA,CAAA,EAAA,6BAAA,EACI,QAAA,CAAA,CAAAA,EAAA,CAAA,EAAA,SACE,YAAAA,EAAA,CAAA,EAAA,SACN,MAAAA,EAAA,CAAA,EAAA,IAAAG,EAAA,GACUH,EAAA,CAAA,EAAA,WAAA,SAAAI,EAAA,WAAAJ,EAAA,CAAA,EAAA,+FAMN,YAAAA,EAAA,CAAA,EAAA,6BAAA,iBADD,OAAAA,EAAA,CAAA,EAAA,OAAA,SAAAK,GAAA,MAAAL,EAAA,CAAA,EAAA,i1CA3BT,CAAAM,GAAAC,EAAA,IAAAR,KAAAA,EAAAC,EAAA,CAAA,EAAA,uBAAA,EAAA,KAAAQ,GAAAC,EAAAV,CAAA,GAG+C,CAAAO,GAAAC,EAAA,IAAAN,KAAAA,EAAAD,EAAA,CAAA,EAAA,uBAAA,EAAA,KAAAQ,GAAAE,EAAAT,CAAA,aAC1BM,EAAA,IAAAI,EAAA,MAAAX,EAAA,CAAA,EAAA,uBAAA,wBAOTO,EAAA,IAAAK,EAAA,YAAAZ,EAAA,CAAA,EAAA,qBAAA,GACCO,EAAA,IAAAK,EAAA,aAAAZ,EAAA,CAAA,EAAA,sBAFFY,EAAA,MAAAZ,EAAA,CAAA,EAAA,wCAQLO,EAAA,IAAAM,EAAA,MAAAb,EAAA,CAAA,EAAA,6BAAA,GACIO,EAAA,IAAAM,EAAA,QAAA,CAAA,CAAAb,EAAA,CAAA,EAAA,UACEO,EAAA,IAAAM,EAAA,YAAAb,EAAA,CAAA,EAAA,UACNO,EAAA,IAAAM,EAAA,MAAAb,EAAA,CAAA,EAAA,IAAAG,EAAA,kBACUU,EAAA,WAAAb,EAAA,CAAA,EAAA,2CAMNO,EAAA,IAAAO,EAAA,YAAAd,EAAA,CAAA,EAAA,6BAAA,yCADDc,EAAA,MAAAd,EAAA,CAAA,EAAA,0bAjGV,IAAAe,EAAA,CAAA,EAIAC,EAAA,CAAA,MAAA,GAAA,KAAA,GAAA,SAAA,EAAA,EAMAC,EAAA,CAAA,EAEW,eAAAC,EAAAC,EAAAC,EAAA,cAEXC,EAAA,EAAAJ,EAAA,CAAA,GAAAK,CAAA,CAAA,yCAKFD,EAAA,EAAAJ,GAAAM,GAAA,YAAAA,EAAA,aAAA,CAAA,CAAA,EAGa,eAAAC,GAAA,UACbH,EAAA,EAAAN,EAAAU,GAAAT,CAAA,CAAA,kEAOQ,KAAA,CAAA,KAAAU,EAAA,MAAAC,CAAA,EAAA,MAAAC,GAAA,KAAA,oBAAA,EAAA,OAAA,CAGJ,MAAAZ,EAAA,MACA,KAAAA,EAAA,KACA,UAAAA,EAAA,SACA,gBAAAa,EAAA,GACA,kBAAAC,EAAA,2BAID,CAAA,EAAA,OAAA,EAEC,GAAAH,oJAMFI,GAAA,QAAA,+CAAA,EAEAC,GAAA,kBAAAC,CAAA,EAAA,iBA6BYC,EAAA,GAAA,UAAAlB,EAAA,MAAAmB,CAAA,IAAAnB,EAAA,MAAAmB,wBAYKD,EAAA,GAAA,UAAAlB,EAAA,SAAAmB,CAAA,IAAAnB,EAAA,SAAAmB,UAOR,MAAAC,EAAAC,GAAAhB,EAAA,EAAAL,EAAA,KAAAqB,EAAArB,CAAA,gBAFCkB,EAAA,GAAA,UAAAlB,EAAA,KAAAmB,CAAA,IAAAnB,EAAA,KAAAmB,iDAzCRL,EAAA,IAAAD,EAAA"}