{"version":3,"file":"29.be1c4d02.js","sources":["../../../../../../src/routes/lms/explore/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { Search, Dropdown } from 'carbon-components-svelte';\n  import { profile } from '$lib/utils/store/user';\n  import { fetchExploreCourses } from '$lib/utils/services/courses';\n  import Courses from '$lib/components/Courses/index.svelte';\n\n  import { courseMetaDeta } from '$lib/components/Courses/store';\n  import { currentOrg } from '$lib/utils/store/org';\n  import type { Course } from '$lib/utils/types';\n  import { browser } from '$app/environment';\n  import { t } from '$lib/utils/functions/translations';\n\n  import IconButton from '$lib/components/IconButton/index.svelte';\n  import Grid from 'carbon-icons-svelte/lib/Grid.svelte';\n  import List from 'carbon-icons-svelte/lib/List.svelte';\n\n  let searchValue = '';\n  let selectedId: string;\n  let filteredExploreCourses: Course[];\n  let hasFetched = false;\n  let exploreCourseList: Course[] = [];\n\n  async function getCourses(userId: string | null, orgId: string) {\n    if (hasFetched || !userId || !orgId) {\n      return;\n    }\n\n    $courseMetaDeta.isLoading = true;\n\n    const coursesResult = await fetchExploreCourses(userId, orgId);\n\n    $courseMetaDeta.isLoading = false;\n\n    if (!coursesResult) return;\n\n    exploreCourseList = coursesResult.allCourses;\n    hasFetched = true;\n  }\n\n  function filterCourses(searchValue: string, _selectedId: string, courses: Course[]) {\n    if (browser) {\n      if (!selectedId) {\n        selectedId = localStorage.getItem('classroomio_filter_course_key') || '0';\n      } else {\n        localStorage.setItem('classroomio_filter_course_key', _selectedId);\n      }\n    }\n\n    filteredExploreCourses = courses.filter((course) => {\n      if (!searchValue || course.title.toLowerCase().includes(searchValue.toLowerCase())) {\n        return true;\n      }\n\n      return false;\n    });\n\n    if (_selectedId === '0') {\n      filteredExploreCourses = filteredExploreCourses.sort(\n        (a, b) => new Date(a.created_at).getTime() - new Date(b.created_at).getTime()\n      );\n    } else if (_selectedId === '1') {\n      filteredExploreCourses = filteredExploreCourses.sort(\n        (a, b) => b.total_lessons - a.total_lessons\n      );\n    }\n  }\n\n  const setViewPreference = (preference: 'grid' | 'list') => {\n    $courseMetaDeta.view = preference;\n    localStorage.setItem('courseView', preference);\n  };\n\n  onMount(() => {\n    const courseView = localStorage.getItem('courseView') as 'grid' | 'list' | null;\n\n    if (courseView) {\n      $courseMetaDeta.view = courseView;\n    }\n  });\n\n  $: filterCourses(searchValue, selectedId, exploreCourseList);\n\n  $: if (browser && $profile.id && $currentOrg.id) {\n    getCourses($profile.id, $currentOrg.id);\n  }\n</script>\n\n<section class=\"w-full md:max-w-6xl md:mx-auto\">\n  <div class=\"py-2 md:py-10 px-2 md:px-5\">\n    <h1 class=\"dark:text-white text-3xl font-bold\">{$t('explore.heading')}</h1>\n    <div class=\"flex flex-row-reverse\">\n      <div class=\"filter-container flex items-end justify-start\">\n        <Search\n          placeholder={$t('courses.search_placeholder')}\n          bind:value={searchValue}\n          searchClass=\"mr-2\"\n          class=\" bg-gray-100 dark:bg-neutral-800\"\n        />\n        <Dropdown\n          class=\"h-full\"\n          size=\"xl\"\n          bind:selectedId\n          items={[\n            { id: '0', text: $t('courses.course_filter.date_created') },\n            { id: '1', text: $t('courses.course_filter.lessons') }\n          ]}\n        />\n\n        {#if $courseMetaDeta.view === 'list'}\n          <IconButton onClick={() => setViewPreference('grid')}>\n            <Grid size={24} />\n          </IconButton>\n        {:else}\n          <IconButton onClick={() => setViewPreference('list')}>\n            <List size={24} />\n          </IconButton>\n        {/if}\n      </div>\n    </div>\n    <Courses\n      bind:courses={filteredExploreCourses}\n      emptyTitle={$t('explore.empty_heading')}\n      emptyDescription={$t('explore.empty_description')}\n      isExplore={true}\n    />\n  </div>\n</section>\n"],"names":["t0_value","ctx","current","dirty","set_data","t0","search_changes","courses_changes","selectedId","filteredExploreCourses","exploreCourseList","getCourses","userId","orgId","hasFetched","set_store_value","courseMetaDeta","$courseMetaDeta","coursesResult","$$invalidate","filterCourses","searchValue2","_selectedId","courses","course","searchValue","a","b","preference","onMount","courseView","func","setViewPreference","func_1"],"mappings":"ysEA0FoDA,EAAAC,EAAA,CAAA,EAAA,iBAAA,EAAA,gEAI7B,YAAAA,EAAA,CAAA,EAAA,4BAAA,2MAUT,GAAA,sDACA,GAAA,kQAiBI,WAAAA,EAAA,CAAA,EAAA,uBAAA,EACM,iBAAAA,EAAA,CAAA,EAAA,2BAAA,y/BAjC4B,CAAAC,GAAAC,EAAA,KAAAH,KAAAA,EAAAC,EAAA,CAAA,EAAA,iBAAA,EAAA,KAAAG,GAAAC,EAAAL,CAAA,aAI7BG,EAAA,KAAAG,EAAA,YAAAL,EAAA,CAAA,EAAA,4BAAA,kFAUT,GAAA,sDACA,GAAA,0PAiBIE,EAAA,KAAAI,EAAA,WAAAN,EAAA,CAAA,EAAA,uBAAA,GACME,EAAA,KAAAI,EAAA,iBAAAN,EAAA,CAAA,EAAA,2BAAA,8WAzGlBO,EACAC,OAEAC,EAAA,CAAA,EAEW,eAAAC,EAAAC,EAAAC,EAAA,CACT,GAAAC,GAAA,CAAAF,GAAA,CAAAC,SAIJE,EAAAC,EAAAC,EAAA,UAAA,GAAAA,CAAA,wBAIAF,EAAAC,EAAAC,EAAA,UAAA,GAAAA,CAAA,EAEKC,IAELC,EAAA,EAAAT,EAAAQ,EAAA,UAAA,QAIO,SAAAE,EAAAC,EAAAC,EAAAC,EAAA,CAEAf,4HAOPW,EAAA,EAAAV,EAAAc,EAAA,OAAAC,GACOC,IAAAA,GAAAA,EAAAA,MAAAA,YAAAA,EAAAA,SAAAA,EAAAA,YAAAA,CAAAA,aAQLN,EAAA,EAAAV,EAAAA,EAAA,KAAA,CAAAiB,EAAAC,IAAA,IAAA,KAAAD,EAAA,UAAA,EAAA,QAAA,EAAA,IAAA,KAAAC,EAAA,UAAA,EAAA,QAAA,CAAA,CAAA,WAIAR,EAAA,EAAAV,EAAAA,EAAA,KAAA,CAAAiB,EAAAC,IAAAA,EAAA,cAAAD,EAAA,aAAA,CAAA,cAOFX,EAAAC,EAAAC,EAAA,KAAAW,EAAAX,CAAA,wCAIFY,GAAA,IAAA,4CAGMC,GACFf,EAAAC,EAAAC,EAAA,KAAAa,EAAAb,CAAA,sDAiC+B,MAAAc,EAAA,IAAAC,EAAA,MAAA,EAIAC,EAAA,IAAAD,EAAA,MAAA"}