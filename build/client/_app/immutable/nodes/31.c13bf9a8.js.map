{"version":3,"file":"31.c13bf9a8.js","sources":["../../../../../../src/lib/components/LMS/components/Profile.svelte","../../../../../../src/routes/lms/settings/+page.svelte"],"sourcesContent":["<script>\n  import { Grid, Row, Column } from 'carbon-components-svelte';\n  import TextField from '$lib/components/Form/TextField.svelte';\n  import PrimaryButton from '$lib/components/PrimaryButton/index.svelte';\n  import { VARIANTS } from '$lib/components/PrimaryButton/constants';\n  import UploadImage from '$lib/components/UploadImage/index.svelte';\n  import { supabase } from '$lib/utils/functions/supabase';\n  import { profile } from '$lib/utils/store/user';\n  import { snackbar } from '$lib/components/Snackbar/store';\n  import generateUUID from '$lib/utils/functions/generateUUID';\n  import { t } from '$lib/utils/functions/translations';\n  import LanguagePicker from '$lib/components/Org/Settings/LanguagePicker.svelte';\n  import { handleLocaleChange } from '$lib/utils/functions/translations';\n\n  let avatar = '';\n  let loading = false;\n  let hasLangChanged = false;\n  let locale = '';\n\n  async function handleUpdate() {\n    try {\n      loading = true;\n\n      const updates = {\n        fullname: $profile.fullname,\n        username: $profile.username,\n        email: $profile.email,\n        locale\n      };\n\n      if (avatar) {\n        const filename = `user/${generateUUID()}.webp`;\n\n        const { data } = await supabase.storage.from('avatars').upload(filename, avatar, {\n          cacheControl: '3600',\n          upsert: false\n        });\n        if (data) {\n          const { data: response } = await supabase.storage.from('avatars').getPublicUrl(filename);\n\n          updates.avatar_url = response.publicUrl;\n          $profile.avatar_url = response.publicUrl;\n        }\n        avatar = undefined;\n      }\n\n      let { error } = await supabase.from('profile').update(updates).match({ id: $profile.id });\n\n      profile.update((_profile) => ({\n        ..._profile,\n        ...updates\n      }));\n      snackbar.success();\n\n      if (hasLangChanged) {\n        handleLocaleChange(locale);\n      }\n\n      if (error) throw error;\n    } catch (error) {\n      let message = error.message;\n      if (message.includes('profile_username_key')) {\n        message = $t('username already exists');\n      }\n\n      snackbar.error(`snackbar.lms.error.update: ${message}`);\n      loading = false;\n    } finally {\n      loading = false;\n    }\n  }\n\n  $: locale = $profile.locale;\n</script>\n\n<Grid class=\"border-c rounded border-gray-200 dark:border-neutral-600 w-full mt-5\">\n  <Row class=\"flex flex-col lg:flex-row items-center lg:items-start py-7 border-bottom-c \">\n    <Column sm={4} md={8} lg={4} class=\"mt-2 md:mt-0\">\n      <p class=\"dark:text-white font-bold\">{$t('settings.profile.profile_picture.heading')}</p>\n    </Column>\n    <Column sm={2} md={4} lg={8} class=\"mt-2 lg:mt-0\">\n      <UploadImage bind:avatar src={$profile.avatar_url} widthHeight=\"w-16 h-16 lg:w-24 lg:h-24\" />\n    </Column>\n  </Row>\n  <Row class=\"flex flex-col lg:flex-row py-7 border-bottom-c\">\n    <Column sm={4} md={4} lg={4}>\n      <p class=\"dark:text-white font-bold\">{$t('settings.profile.personal_information.heading')}</p>\n    </Column>\n    <Column sm={8} md={8} lg={8} class=\"mt-2 lg:mt-0\">\n      <TextField\n        label={$t('settings.profile.personal_information.full_name')}\n        bind:value={$profile.fullname}\n        className=\"w-full lg:w-60 mb-4\"\n      />\n      <TextField\n        label={$t('settings.profile.personal_information.username')}\n        bind:value={$profile.username}\n        className=\"w-full lg:w-60 mb-4\"\n      />\n      <TextField\n        label={$t('settings.profile.personal_information.email')}\n        bind:value={$profile.email}\n        className=\"w-full lg:w-60 mb-4\"\n      />\n\n      <LanguagePicker\n        bind:hasLangChanged\n        bind:value={$profile.locale}\n        className=\"w-full lg:w-60 mb-4\"\n      />\n    </Column>\n  </Row>\n  <Row class=\"m-5 w-full flex items-center gap-2 lg:justify-center\">\n    <PrimaryButton\n      label={$t('settings.profile.update_profile')}\n      variant={VARIANTS.CONTAINED_DARK}\n      className=\"mr-5\"\n      isLoading={loading}\n      isDisabled={loading}\n      onClick={handleUpdate}\n    />\n  </Row>\n</Grid>\n","<script>\n  import { page } from '$app/stores';\n  import { Tabs, Tab, TabContent } from 'carbon-components-svelte';\n  import Profile from '$lib/components/LMS/components/Profile.svelte';\n  import Integrations from '$lib/components/Org/Settings/Integrations.svelte';\n  import { t } from '$lib/utils/functions/translations';\n\n  let selected = 0;\n  let tabs = [];\n  $: tabs = [\n    {\n      key: 0,\n      label: $t('settings.tabs.profile_tab'),\n      tabKey: '',\n      href: $page.url.pathname\n    },\n    {\n      key: 1,\n      label: $t('settings.tabs.integrations_tab'),\n      tabKey: 'integrations',\n      href: `${$page.url.pathname}?tab=integrations`,\n      disabled: false\n    }\n  ];\n</script>\n\n<section class=\"w-full max-w-6xl mx-auto\">\n  <div class=\"py-10 px-5\">\n    <div class=\"flex items-center justify-between mb-10\">\n      <h1 class=\"dark:text-white text-3xl font-bold\">{$t('settings.heading')}</h1>\n    </div>\n\n    <div class=\"\">\n      <Tabs autoWidth bind:selected>\n        {#each tabs as tab}\n          <Tab label={tab.label} href={tab.href} />\n        {/each}\n        <svelte:fragment slot=\"content\">\n          <TabContent>\n            <Profile />\n          </TabContent>\n          <TabContent>\n            <Integrations />\n          </TabContent>\n        </svelte:fragment>\n      </Tabs>\n    </div>\n  </div>\n</section>\n"],"names":["t_1_value","ctx","dirty","set_data","t_1","uploadimage_changes","textfield0_props","textfield1_props","textfield2_props","languagepicker_props","textfield0_changes","textfield1_changes","textfield2_changes","languagepicker_changes","VARIANTS","primarybutton_changes","avatar","loading","hasLangChanged","locale","$$invalidate","filename","generateUUID","response","supabase","updates","set_store_value","profile","$profile","error","_profile","snackbar","handleLocaleChange","$$self","value","tab_1_changes","t0_value","current","t0","selected","tabs","$page"],"mappings":"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"}