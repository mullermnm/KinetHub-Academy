{"version":3,"file":"34.6869b1b1.js","sources":["../../../../../../src/routes/onboarding/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { env } from '$env/dynamic/public';\n  import { goto } from '$app/navigation';\n  import { Dropdown } from 'carbon-components-svelte';\n  import TextField from '$lib/components/Form/TextField.svelte';\n  import UserProfileIcon from '$lib/components/Icons/UserProfileIcon.svelte';\n  import PrimaryButton from '$lib/components/PrimaryButton/index.svelte';\n  import { VARIANTS } from '$lib/components/PrimaryButton/constants';\n  import { profile } from '$lib/utils/store/user';\n  import { onboardingValidation } from '$lib/utils/functions/validator';\n  import { supabase } from '$lib/utils/functions/supabase';\n  import { blockedSubdomain } from '$lib/utils/constants/app';\n  import { getOrganizations } from '$lib/utils/services/org';\n  import { generateSitename } from '$lib/utils/functions/org';\n  import {\n    triggerSendEmail,\n    NOTIFICATION_NAME\n  } from '$lib/utils/services/notification/notification';\n  import { handleLocaleChange, t } from '$lib/utils/functions/translations';\n  import { LOCALE } from '$lib/utils/types';\n\n  interface OnboardingField {\n    fullname?: string;\n    orgName?: string;\n    siteName?: string;\n\t\tphone?: string;\n    goal?: string;\n    source?: string;\n    locale?: LOCALE;\n    metadata?: {};\n  }\n\n  interface Goal {\n    label: string;\n    value: string;\n  }\n\n  const maxSteps = 2;\n  let fields: OnboardingField = {\n    fullname: '',\n    orgName: '',\n\t\tgoal: 'Learning',\n    siteName: '',\n    locale: LOCALE.EN\n  };\n  let errors: OnboardingField = {};\n  let progress = 50;\n  let step = 1;\n  let loading = false;\n  let isSiteNameTouched = false;\n  let selectedId = 'en';\n\n  let dropdownItems = [\n    { id: 'en', text: 'English' },\n    { id: 'hi', text: 'Hindi' },\n    { id: 'fr', text: 'French' },\n    { id: 'pt', text: 'Portuguese' },\n    { id: 'de', text: 'German' },\n    { id: 'vi', text: 'Vietnamese' },\n    { id: 'ru', text: 'Russian' },\n    { id: 'es', text: 'Spanish' }\n  ];\n\n  const educatorGoals: Goal[] = [\n    {\n      label: $t('onboarding.sell'),\n      value: 'sell-online'\n    },\n    {\n      label: $t('onboarding.teach'),\n      value: 'teach-online'\n    },\n    {\n      label: $t('onboarding.employees'),\n      value: 'employees'\n    },\n    {\n      label: $t('onboarding.customers'),\n      value: 'customers'\n    },\n    {\n      label: $t('onboarding.expanding'),\n      value: 'expanding-platform'\n    }\n  ];\n\n  const sources = [\n    {\n      label: $t('onboarding.articles'),\n      value: 'articles'\n    },\n    {\n      label: $t('onboarding.search'),\n      value: 'search-engine'\n    },\n    {\n      label: $t('onboarding.social'),\n      value: 'social-media'\n    },\n    {\n      label: $t('onboarding.friends'),\n      value: 'friends-family'\n    }\n  ];\n\n  function handleSelect(event) {\n    const newSelectedId = event.detail.selectedId;\n    fields.locale = newSelectedId;\n  }\n\n  async function setMetaData() {\n    if (!env.PUBLIC_IP_REGISTRY_KEY) return;\n\n    const response = await fetch(`https://api.ipregistry.co/?key=${env.PUBLIC_IP_REGISTRY_KEY}`);\n    const payload = await response.json();\n    fields.metadata = payload;\n  }\n\n  function setOrgSiteName(orgName: string | undefined, isTouched: boolean) {\n    if (!orgName || isTouched) return;\n\n    fields.siteName = orgName\n      ?.toLowerCase()\n      ?.replace(/\\s+/g, '-')\n      ?.replace(/[^a-zA-Z0-9-]/g, '');\n  }\n\n  const handleSubmit = async () => {\n    loading = true;\n    // Run validation\n    console.log(fields);\n    errors = onboardingValidation(fields, step);\n    console.log('errors', errors);\n\n    if (Object.keys(errors).length || !$profile.id) {\n      loading = false;\n      return;\n    }\n\n    if (step === 1) {\n      // Validate if domain is among our seculeded subdomains\n      // if (blockedSubdomain.includes(fields.siteName || '')) {\n      //   errors.siteName = 'Sitename already exists.';\n      //   loading = false;\n      //   return;\n      // }\n\n      const { data: org, error } = await supabase\n\t\t\t\t.from('organization')\n\t\t\t\t.select()\n\t\t\t\t.eq('name', 'KinetsHub')\n\t\t\t\t.single();\n\n\t\t\t\tconst { data, error: orgError } = await supabase\n          .from('organizationmember')\n          .insert({\n            organization_id: org.id,\n            profile_id: $profile.id,\n            role_id: 3,\n            verified: true\n          })\n          .select();\n\t\t\t\t// console.log('Create organisation', org);\n\n      if (error) {\n        loading = false;\n        return;\n      }\n\n      // if (Array.isArray(org) && org.length) {\n        // const orgData = org[0];\n\n        // console.log('Create organisation member', data);\n\n        // if (error) {\n        //   console.log('Error: create organisation member', error);\n        //   // errors.siteName = $t('add_org.error_organization');\n\n        //   // Delete organization so it can be recreated.\n        //   // await supabase.from('organization').delete().match({ siteName: fields.siteName });\n        //   loading = false;\n        //   return;\n        // }\n\n        await getOrganizations($profile.id);\n      // }\n\n      // client\n    }\n\n    if (step === maxSteps) {\n      // Submit filled\n\n      // Set extra metadata based off location\n      await setMetaData();\n\n      await supabase\n        .from('profile')\n        .update({\n          ...fields,\n          orgName: undefined,\n          siteName: undefined\n        })\n        .match({ id: $profile.id });\n\n      loading = false;\n\n      if (fields.fullname) {\n        $profile.fullname = fields.fullname;\n      }\n      if (fields.locale) {\n        $profile.locale = fields.locale;\n\n        if (fields.locale !== LOCALE.EN) {\n          handleLocaleChange(fields.locale);\n        }\n      }\n      // triggerSendEmail(NOTIFICATION_NAME.VERIFY_EMAIL, {\n      //   to: $profile.email,\n      //   profileId: $profile.id,\n      //   fullname: $profile.fullname,\n      //   orgSiteName: fields.siteName\n      // });\n\n      const welcomePopup = `true`;\n\n      return goto(`/lms`);\n    }\n\n    // Move to next step\n    step = step + 1;\n    loading = false;\n  };\n\n  $: progress = Math.round((step / maxSteps) * 100);\n  $: fields.siteName = generateSitename(fields.siteName || '');\n  $: setOrgSiteName(fields.orgName, isSiteNameTouched);\n</script>\n\n{#if $profile.id}\n  <div class=\"w-full min-h-screen flex justify-center\">\n    <div class=\"flex justify-center items-center flex-col w-9/12 max-w-md\">\n      <!-- Header With Logo -->\n      <div class=\"flex flex-col items-center\">\n        <div class=\"flex items-center w-full justify-center mb-4\">\n          <img src=\"/logo-192.png\" alt=\"KinetsHub logo\" height=\"50\" width=\"50\" data-atf=\"1\" />\n          <h4 class=\"dark:text-white text-xl\">KinetsHub</h4>\n        </div>\n\n        <!-- Loggedin Email -->\n        <div\n          class=\"w-64 flex items-center justify-center mb-6 py-6 bg-gray-100 dark:bg-neutral-800 rounded-2xl border border-gray-300\"\n        >\n          <UserProfileIcon />\n          <p class=\"dark:text-white text-sm ml-2\">{$profile.email}</p>\n        </div>\n      </div>\n\n      <div class=\"form-container overflow-y-auto w-full px-2\">\n        {#if step === 1}\n          <!-- Name/Organization Question -->\n          <div id=\"role-question\" class=\"flex items-start flex-col mb-6\">\n            <!-- Full name -->\n            <TextField\n              label={$t('onboarding.fullname')}\n              bind:value={fields.fullname}\n              name=\"fullname\"\n              type=\"text\"\n              placeholder=\"e.g Joke Silva\"\n              className=\"mb-5 w-full\"\n              labelClassName=\"text-lg font-normal\"\n              errorMessage={errors.fullname}\n              isRequired\n            />\n\n            <TextField\n              label={$t('onboarding.phone')}\n              bind:value={fields.phone}\n              name=\"Phone\"\n              type=\"text\"\n              placeholder=\"e.g 25198765\"\n              className=\"mb-5 w-full\"\n              labelClassName=\"text-lg font-normal\"\n              errorMessage={errors.phone}\n              isRequired\n            />\n\n\t\t\t\t\t\t<!--\n            <TextField\n              label={$t('onboarding.organisation_sitename')}\n              helperMessage={`https://${fields.siteName || ''}.KinetsHub.com`}\n              bind:value={fields.siteName}\n              name=\"sitename\"\n              type=\"text\"\n              placeholder=\"e.g edforall\"\n              className=\"mb-5 w-full\"\n              labelClassName=\"text-lg font-normal\"\n              errorMessage={errors.siteName}\n              onChange={() => {\n                isSiteNameTouched = true;\n              }}\n              isRequired\n            /> -->\n          </div>\n        {:else}\n          <!-- Goal/Source Question -->\n          <div id=\"goal-question\" class=\"flex items-center flex-col mb-6\">\n            <div class=\"w-10/12\">\n              <!-- Goal Question -->\n              <!-- <div class=\"w-full flex items-start flex-col justify-between mb-10\">\n                <label for=\"text-field\" class=\"dark:text-white m-0 text-lg font-normal mb-3\">\n                  {$t('onboarding.what_brings')}\n                </label>\n\n\n                {#each educatorGoals as goal}\n                  <label class=\"dark:text-white w-full inline-flex items-center mb-1 font-light\">\n                    <input\n                      type=\"radio\"\n                      bind:group={fields.goal}\n                      name=\"goal\"\n                      value={goal.value}\n                      class=\"mr-2\"\n                    />\n                    {goal.label}\n                  </label>\n                {/each}\n\n                {#if errors.goal}\n                  <p class=\"text-sm text-red-500\">\n                    {errors.goal}\n                  </p>\n                {/if}\n              </div> -->\n\n              <!-- Source Question -->\n              <div class=\"w-full flex items-start flex-col justify-between\">\n                <label for=\"text-field\" class=\"dark:text-white m-0 text-lg font-normal mb-3\">\n                  {$t('onboarding.how')}\n                </label>\n\n                <!-- Loop through Goals -->\n                {#each sources as source}\n                  <label class=\"dark:text-white w-full inline-flex items-center mb-1 font-light\">\n                    <input\n                      type=\"radio\"\n                      bind:group={fields.source}\n                      name=\"source\"\n                      value={source.value}\n                      class=\"mr-2\"\n                    />\n                    {source.label}\n                  </label>\n                {/each}\n                <!-- Goal: Error message -->\n                {#if errors.source}\n                  <p class=\"text-sm text-red-500\">\n                    {errors.source}\n                  </p>\n                {/if}\n              </div>\n\n              <!-- Language Picker -->\n              <div class=\"mt-10\">\n                <span>{$t('content.toggle_label')}: </span>\n                <Dropdown\n                  items={dropdownItems}\n                  {selectedId}\n                  on:select={handleSelect}\n                  class=\"w-full\"\n                />\n              </div>\n            </div>\n          </div>\n        {/if}\n      </div>\n\n      <!-- Footer -->\n      <div class=\"flex justify-between items-center mt-8 w-full\">\n        <div class=\"w-24 h-2 bg-gray-300 relative\">\n          <span\n            class=\"progress absolute top-0 left-0 bg-primary-700 h-full\"\n            style=\"width: {progress}%;\"\n          />\n        </div>\n\n        <div class=\"flex\">\n          {#if step > 1}\n            <PrimaryButton\n              label={$t('onboarding.back')}\n              variant={VARIANTS.NONE}\n              className=\"py-3 px-6 mr-2 text-primary-700\"\n              onClick={() => (step = step - 1)}\n            />\n          {/if}\n          <PrimaryButton\n            label={$t('onboarding.continue')}\n            variant={VARIANTS.CONTAINED}\n            type=\"button\"\n            className=\"px-5 py-3\"\n            isLoading={loading}\n            onClick={handleSubmit}\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n{/if}\n\n<style>\n  .form-container {\n    max-height: 66%;\n  }\n</style>\n"],"names":["t4_value","ctx","if_block1","create_if_block_1","VARIANTS","current","dirty","set_data","t4","primarybutton_changes","t0_value","if_block","create_if_block_3","t0","textfield0_props","textfield1_props","textfield0_changes","textfield1_changes","t1_value","input","t_1_value","t_1","create_if_block","fields","LOCALE","errors","dropdownItems","$t","sources","newSelectedId","event","$$invalidate","setMetaData","payload","setOrgSiteName","orgName","isTouched","handleSubmit","$profile","supabase","org","error","getOrganizations","set_store_value","profile","handleLocaleChange","goto","step","$$self","value","progress","maxSteps","generateSitename"],"mappings":"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"}