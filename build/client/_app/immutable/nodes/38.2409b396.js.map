{"version":3,"file":"38.2409b396.js","sources":["../../../../../../src/routes/org/[slug]/community/ask/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { goto } from '$app/navigation';\n  import { Dropdown } from 'carbon-components-svelte';\n  import ArrowLeftIcon from 'carbon-icons-svelte/lib/ArrowLeft.svelte';\n  import { currentOrgPath, currentOrg } from '$lib/utils/store/org';\n  import PrimaryButton from '$lib/components/PrimaryButton/index.svelte';\n  import { VARIANTS } from '$lib/components/PrimaryButton/constants';\n  import { askCommunityValidation } from '$lib/utils/functions/validator';\n  import { supabase } from '$lib/utils/functions/supabase';\n  import { snackbar } from '$lib/components/Snackbar/store';\n  import generateSlug from '$lib/utils/functions/generateSlug';\n  import TextEditor from '$lib/components/TextEditor/index.svelte';\n  import TextField from '$lib/components/Form/TextField.svelte';\n  import { profile } from '$lib/utils/store/user';\n  import { fetchCourses } from '$lib/utils/services/courses';\n  import { t } from '$lib/utils/functions/translations';\n  import { courses } from '$lib/components/Courses/store';\n  import type { Course } from '$lib/utils/types';\n\n  let errors: {\n    title?: string;\n    courseId?: string;\n  } = {};\n  let fields = {\n    title: '',\n    body: '',\n    courseId: ''\n  };\n\n  let fetchedCourses: Course[] = [];\n\n  async function getCourses(userId: string | null, orgId: string) {\n    if ($courses.length) {\n      fetchedCourses = [...$courses];\n      return;\n    }\n\n    const coursesResults = await fetchCourses(userId, orgId);\n    if (!coursesResults) return;\n\n    fetchedCourses = coursesResults.allCourses;\n  }\n\n  async function handleSave() {\n    errors = askCommunityValidation(fields);\n    console.log('handleSave errors', errors);\n\n    if (Object.keys(errors).length) {\n      return;\n    }\n\n    const { data: question, error } = await supabase\n      .from('community_question')\n      .insert({\n        title: fields.title,\n        body: fields.body,\n        organization_id: $currentOrg.id,\n        author_profile_id: $profile.id,\n        votes: 0,\n        slug: generateSlug(fields.title),\n        course_id: fields.courseId\n      })\n      .select();\n\n    if (error) {\n      console.error('Error: asking question', error);\n      snackbar.error('snackbar.community.error.try_again');\n    } else {\n      const slug = question[0]?.slug;\n\n      console.log('Success: asking question', question, slug);\n      snackbar.success('snackbar.community.success.question_submitted');\n      goto(`${$currentOrgPath}/community/${slug}`);\n    }\n  }\n\n  $: {\n    if ($profile.id && $currentOrg.id) {\n      getCourses($profile.id, $currentOrg.id);\n    }\n  }\n</script>\n\n<svelte:head>\n  <title>Ask the Community - KinetsHub</title>\n</svelte:head>\n\n<section class=\"w-full md:max-w-3xl md:mx-auto\">\n  <div class=\"p-5\">\n    <a\n      class=\"text-gray-500 dark:text-white text-md flex items-center\"\n      href={`${$currentOrgPath}/community`}\n    >\n      <ArrowLeftIcon size={24} class=\"carbon-icon dark:text-white\" />\n      {$t('community.ask.go_back')}\n    </a>\n    <div class=\"flex items-center gap-12 justify-between\">\n      <h1 class=\"dark:text-white text-2xl md:text-3xl font-bold\">{$t('community.ask.ask_the')}</h1>\n      <PrimaryButton\n        label={$t('community.ask.publish')}\n        variant={VARIANTS.CONTAINED_DARK}\n        onClick={handleSave}\n      />\n    </div>\n  </div>\n\n  <div class=\"mb-3 p-2 flex gap-x-5 justify-between\">\n    <TextField\n      bind:value={fields.title}\n      placeholder={$t('community.ask.title')}\n      errorMessage={errors.title}\n      className=\"w-[75%]\"\n    />\n    <Dropdown\n      class=\"w-[25%] h-full\"\n      size=\"xl\"\n      label={$t('community.ask.select_course')}\n      invalid={!!errors.courseId}\n      invalidText={errors.courseId}\n      items={fetchedCourses.map((course) => ({ id: course.id, text: course.title }))}\n      bind:selectedId={fields.courseId}\n    />\n  </div>\n  <div class=\"px-2\">\n    <TextEditor\n      bind:value={fields.body}\n      placeholder={$t('community.ask.ask_community')}\n      onChange={(html) => (fields.body = html)}\n    />\n  </div>\n</section>\n"],"names":["t2_value","ctx","t4_value","VARIANTS","textfield_props","func","dropdown_props","texteditor_props","current","dirty","set_data","t2","t4","primarybutton_changes","textfield_changes","dropdown_changes","texteditor_changes","errors","fields","fetchedCourses","getCourses","userId","orgId","$$invalidate","$courses","coursesResults","handleSave","askCommunityValidation","question","error","supabase","$currentOrg","$profile","snackbar","$$self","value","func_1","html"],"mappings":"23CA8FOA,EAAAC,EAAA,CAAA,EAAA,uBAAA,EAAA,aAG2DC,EAAAD,EAAA,CAAA,EAAA,uBAAA,EAAA,kHAEnD,MAAAA,EAAA,CAAA,EAAA,uBAAA,EACE,QAAAE,GAAA,8DASE,YAAAF,EAAA,CAAA,EAAA,qBAAA,EACC,aAAAA,EAAA,CAAA,EAAA,2BAFFA,EAAA,CAAA,EAAA,QAAA,SAAAG,GAAA,MAAAH,EAAA,CAAA,EAAA,wHAQL,MAAAA,EAAA,CAAA,EAAA,6BAAA,EACI,QAAA,CAAA,CAAAA,EAAA,CAAA,EAAA,SACE,YAAAA,EAAA,CAAA,EAAA,SACN,MAAAA,EAAA,CAAA,EAAA,IAAAI,EAAA,GACUJ,EAAA,CAAA,EAAA,WAAA,SAAAK,GAAA,WAAAL,EAAA,CAAA,EAAA,gGAMJ,YAAAA,EAAA,CAAA,EAAA,6BAAA,kBADD,OAAAA,EAAA,CAAA,EAAA,OAAA,SAAAM,GAAA,MAAAN,EAAA,CAAA,EAAA,w8CA/BX,CAAAO,GAAAC,EAAA,KAAAT,KAAAA,EAAAC,EAAA,CAAA,EAAA,uBAAA,EAAA,KAAAS,GAAAC,EAAAX,CAAA,yDAG2D,CAAAQ,GAAAC,EAAA,KAAAP,KAAAA,EAAAD,EAAA,CAAA,EAAA,uBAAA,EAAA,KAAAS,GAAAE,EAAAV,CAAA,aAEnDO,EAAA,KAAAI,EAAA,MAAAZ,EAAA,CAAA,EAAA,uBAAA,wBAUIQ,EAAA,KAAAK,EAAA,YAAAb,EAAA,CAAA,EAAA,qBAAA,GACCQ,EAAA,IAAAK,EAAA,aAAAb,EAAA,CAAA,EAAA,sBAFFa,EAAA,MAAAb,EAAA,CAAA,EAAA,wCAQLQ,EAAA,KAAAM,EAAA,MAAAd,EAAA,CAAA,EAAA,6BAAA,GACIQ,EAAA,IAAAM,EAAA,QAAA,CAAA,CAAAd,EAAA,CAAA,EAAA,UACEQ,EAAA,IAAAM,EAAA,YAAAd,EAAA,CAAA,EAAA,UACNQ,EAAA,IAAAM,EAAA,MAAAd,EAAA,CAAA,EAAA,IAAAI,EAAA,kBACUU,EAAA,WAAAd,EAAA,CAAA,EAAA,2CAMJQ,EAAA,KAAAO,EAAA,YAAAf,EAAA,CAAA,EAAA,6BAAA,0CADDe,EAAA,MAAAf,EAAA,CAAA,EAAA,gdA1GZ,IAAAgB,EAAA,CAAA,EAIAC,EAAA,CAAA,MAAA,GAAA,KAAA,GAAA,SAAA,EAAA,EAMAC,EAAA,CAAA,EAEW,eAAAC,EAAAC,EAAAC,EAAA,cAEXC,EAAA,EAAAJ,EAAA,CAAA,GAAAK,CAAA,CAAA,+BAKGC,GAELF,EAAA,EAAAJ,EAAAM,EAAA,UAAA,EAGa,eAAAC,GAAA,UACbH,EAAA,EAAAN,EAAAU,GAAAT,CAAA,CAAA,kEAOQ,KAAA,CAAA,KAAAU,EAAA,MAAAC,CAAA,EAAA,MAAAC,GAAA,KAAA,oBAAA,EAAA,OAAA,CAGJ,MAAAZ,EAAA,MACA,KAAAA,EAAA,KACA,gBAAAa,EAAA,GACA,kBAAAC,EAAA,4BAGA,UAAAd,EAAA,QAED,CAAA,EAAA,OAAA,EAEC,GAAAW,4CAEFI,GAAA,MAAA,oCAAA,wFAKAA,GAAA,QAAA,+CAAA,2CAqCYC,EAAA,GAAA,UAAAhB,EAAA,MAAAiB,CAAA,IAAAjB,EAAA,MAAAiB,wBAYKD,EAAA,GAAA,UAAAhB,EAAA,SAAAiB,CAAA,IAAAjB,EAAA,SAAAiB,UAON,MAAAC,EAAAC,GAAAd,EAAA,EAAAL,EAAA,KAAAmB,EAAAnB,CAAA,gBAFCgB,EAAA,GAAA,UAAAhB,EAAA,KAAAiB,CAAA,IAAAjB,EAAA,KAAAiB,kDAhDVH,EAAA,IAAAD,EAAA"}