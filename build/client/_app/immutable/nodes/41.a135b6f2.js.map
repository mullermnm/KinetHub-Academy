{"version":3,"file":"41.a135b6f2.js","sources":["../../../../../../../../node_modules/.pnpm/carbon-icons-svelte@12.3.0/node_modules/carbon-icons-svelte/lib/OverflowMenuHorizontal.svelte","../../../../../../src/lib/components/Dropdown/index.svelte","../../../../../../src/lib/utils/services/org/quiz.js","../../../../../../src/lib/components/Org/Quiz/QuizCard.svelte","../../../../../../src/lib/components/Org/Quiz/Quizzes.svelte","../../../../../../src/lib/components/Org/Quiz/NewQuizModal.svelte"],"sourcesContent":["<script>\n  export let size = 16;\n\n  export let title = undefined;\n\n  $: labelled = $$props[\"aria-label\"] || $$props[\"aria-labelledby\"] || title;\n  $: attributes = {\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: Number($$props[\"tabindex\"]) === 0 ? true : undefined\n  };\n</script>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  width={size}\n  height={size}\n  {...attributes}\n  {...$$restProps}>\n  {#if title}<title>{title}</title>{/if}\n  <circle cx=\"8\" cy=\"16\" r=\"2\"></circle><circle cx=\"16\" cy=\"16\" r=\"2\"></circle><circle cx=\"24\" cy=\"16\" r=\"2\"></circle>\n</svg>","<script>\n  export let options = [];\n  export let classNames = 'relative';\n  export let isIcon = false;\n\n  let open = false;\n\n  const notIconClass =\n    'border rounded-lg border-grey p-3 focus:outline-none focus:border-gray-400 focus:bg-gray-200';\n\n  function isOptionLast(index) {\n    return index === options.length - 1;\n  }\n\n  function onClick(option) {\n    return () => {\n      open = !open;\n      if (option && option.onClick) {\n        option.onClick();\n      }\n    };\n  }\n\n  function onBlur() {\n    // In case an option was clicked, let's wait for the on:click of that button before we close\n    setTimeout(() => (open = false), 100);\n  }\n</script>\n\n<div class=\"{classNames} z-10 {!options.length && 'hidden'}\">\n  <button\n    class=\"flex flex-row items-center {!isIcon && notIconClass}\"\n    on:click={(e) => {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n      open = !open;\n    }}\n    on:blur={onBlur}\n  >\n    <slot />\n  </button>\n\n  {#if open}\n    <div\n      class=\"dropdown whitespace-nowrap bg-white dark:bg-black border border-grey rounded-lg mt-2 py-3 absolute\"\n    >\n      {#each options as option, index}\n        <button\n          class=\"block px-4 py-3 text-left hover:bg-primary-100 {!isOptionLast(index) &&\n            'border-b'} w-full dark:text-white dark:hover:text-black\"\n          on:click={onClick(option)}\n        >\n          {option.label}\n        </button>\n      {/each}\n    </div>\n  {/if}\n</div>\n\n<style>\n  .dropdown {\n    box-shadow: 0px 5px 5px -3px rgb(0 0 0 / 20%), 0px 8px 10px 1px rgb(0 0 0 / 14%),\n      0px 3px 14px 2px rgb(0 0 0 / 12%);\n    right: 0px;\n    top: 20px;\n    left: unset;\n  }\n</style>\n","import { createQuizModal, deleteModal } from '$lib/utils/store/org';\n\nexport function onEdit(quiz) {}\n\nexport function onShare(quiz) {}\n\nexport function onReport(quiz) {}\n\nexport function onRename(quiz) {\n  createQuizModal.update((m) => ({\n    ...m,\n    id: quiz.id,\n    title: quiz.title,\n    openEdit: true\n  }));\n}\n\nexport function onMakeCopy(quiz) {}\n\nexport function onDelete(quiz) {\n  deleteModal.update((m) => ({\n    ...m,\n    open: true,\n    id: quiz.id\n  }));\n}\n","<script>\n  import pluralize from 'pluralize';\n  import { ImageLoader } from 'carbon-components-svelte';\n  import OverflowMenuHorizontalIcon from 'carbon-icons-svelte/lib/OverflowMenuHorizontal.svelte';\n  import { currentOrgPath } from '$lib/utils/store/org';\n  import Dropdown from '$lib/components/Dropdown/index.svelte';\n  import PrimaryButton from '$lib/components/PrimaryButton/index.svelte';\n  import { VARIANTS } from '$lib/components/PrimaryButton/constants';\n  import { onRename, onDelete } from '$lib/utils/services/org/quiz';\n  import { themeImages } from '$lib/utils/constants/quiz';\n  import { calDateDiff } from '$lib/utils/functions/date';\n  import { t } from '$lib/utils/functions/translations';\n\n  export let quiz;\n  export let totalQuestions;\n\n  function getOptions() {\n    return [\n      // {\n      //   label: 'Edit',\n      //   onClick: onEdit(quiz),\n      // },\n      // {\n      //   label: 'Share',\n      //   onClick: onShare(quiz),\n      // },\n      // {\n      //   label: 'Report',\n      //   onClick: onReport(quiz),\n      // },\n      {\n        label: $t('components.quiz.rename'),\n        onClick() {\n          onRename(quiz);\n        }\n      },\n      // {\n      //   label: 'Make a copy',\n      //   onClick() {\n      //     onMakeCopy(quiz);\n      //   },\n      // },\n      {\n        label: $t('components.quiz.delete'),\n        onClick() {\n          onDelete(quiz);\n        }\n      }\n    ];\n  }\n\n  function startQuiz() {}\n</script>\n\n{#if quiz}\n  <div\n    class=\"root w-full border hover:shadow-2xl transition ease-in-out rounded-lg bg-gray-100 dark:bg-black mb-5 relative flex flex-col lg:flex-row p-3\"\n  >\n    <ImageLoader\n      src={themeImages[quiz.theme]?.card || themeImages.standard.card}\n      alt=\"quiz-card\"\n      style=\"max-width:300px, min-width: 200px;\"\n    />\n\n    <div class=\"p-2 md:p-5 flex flex-col justify-between w-full\">\n      <div class=\"flex justify-between\">\n        <h4 class=\"dark:text-white title text-md font-bold capitalize\">\n          <a href=\"{$currentOrgPath}/quiz/{quiz.id}\">{quiz.title}</a>\n        </h4>\n\n        <Dropdown options={getOptions()} classNames=\"absolute top-4 right-4\" isIcon={true}>\n          <div class=\"p-1 rounded-full bg-gray-200 dark:bg-gray-600\">\n            <OverflowMenuHorizontalIcon size={20} class=\"carbon-icon active\" />\n          </div>\n        </Dropdown>\n      </div>\n\n      <div class=\"flex md:flex-row flex-col justify-between\">\n        <div>\n          <p class=\"mb-2\">{pluralize('question', totalQuestions, true)}</p>\n          <p class=\"mb-2 md:mb-0\">{$t('components.quiz.updated')} {calDateDiff(quiz.updated_at)}</p>\n        </div>\n\n        <PrimaryButton\n          className=\"px-6 py-3\"\n          variant={VARIANTS.OUTLINED}\n          label={$t('components.quiz.start')}\n          onClick={startQuiz}\n        />\n      </div>\n    </div>\n  </div>\n{/if}\n\n<style>\n  .root {\n    min-height: 180px;\n  }\n</style>\n","<script>\n  import { onMount } from 'svelte';\n  import Box from '$lib/components/Box/index.svelte';\n  import QuizLoader from './Loader.svelte';\n  import QuizCard from './QuizCard.svelte';\n  import CoursesEmptyIcon from '$lib/components/Icons/CoursesEmptyIcon.svelte';\n  import { snackbar } from '$lib/components/Snackbar/store';\n  import { supabase } from '$lib/utils/functions/supabase';\n  import { currentOrg, quizesStore } from '$lib/utils/store/org';\n  import { t } from '$lib/utils/functions/translations';\n\n  let isLoading = false;\n\n  async function fetchQuizes(id) {\n    if (!id) return;\n    isLoading = true;\n\n    const { data, error } = await supabase\n      .from('quiz')\n      .select(`*`)\n      .eq('organization_id', id)\n      .order('updated_at', { ascending: false });\n\n    if (error) {\n      snackbar.error();\n      return;\n    }\n    console.log('data', data);\n    quizesStore.set(data);\n    isLoading = false;\n  }\n\n  $: fetchQuizes($currentOrg.id);\n</script>\n\n<div class=\"flex items-center justify-center lg:justify-start flex-wrap my-4 m-auto\">\n  {#if isLoading}\n    <QuizLoader />\n    <QuizLoader />\n    <QuizLoader />\n  {:else}\n    {#each $quizesStore as quiz}\n      <QuizCard {quiz} totalQuestions={quiz.questions?.length || 0} />\n    {:else}\n      <Box>\n        <CoursesEmptyIcon />\n        <h3 class=\"dark:text-white text-2xl my-5\">{$t('components.quiz.no_quizz')}</h3>\n        <p class=\"dark:text-white w-1/3 text-center\">\n          {$t('components.quiz.interactive')}\n        </p>\n      </Box>\n    {/each}\n  {/if}\n</div>\n","<script>\n  import { goto } from '$app/navigation';\n  import PrimaryButton from '$lib/components/PrimaryButton/index.svelte';\n  import Modal from '$lib/components/Modal/index.svelte';\n  import TextField from '$lib/components/Form/TextField.svelte';\n  import { snackbar } from '$lib/components/Snackbar/store';\n  import { supabase } from '$lib/utils/functions/supabase';\n  import { currentOrg, createQuizModal, currentOrgPath, quizesStore } from '$lib/utils/store/org';\n  import { createQuizValidation } from '$lib/utils/functions/validator';\n  import { t } from '$lib/utils/functions/translations';\n\n  let open = false;\n  let errors = {\n    title: ''\n  };\n  let isLoading = false;\n\n  function handleClose() {\n    $createQuizModal.id = null;\n    $createQuizModal.title = '';\n    $createQuizModal.open = false;\n    $createQuizModal.openEdit = false;\n  }\n\n  function errorNotification() {\n    snackbar.error();\n  }\n\n  async function createQuiz() {\n    errors = createQuizValidation($createQuizModal);\n    console.log('createQuiz|updateQuiz errors', errors);\n\n    if (Object.keys(errors).length) {\n      return;\n    }\n\n    isLoading = true;\n    if ($createQuizModal.openEdit) {\n      const { error } = await supabase\n        .from('quiz')\n        .update({ title: $createQuizModal.title, updated_at: new Date() })\n        .match({ id: $createQuizModal.id });\n\n      isLoading = false;\n\n      if (error) {\n        return errorNotification();\n      } else {\n        $quizesStore = $quizesStore.map((s) => {\n          if (s.id === $createQuizModal.id) {\n            s.title = $createQuizModal.title;\n          }\n          return s;\n        });\n        handleClose();\n      }\n    } else {\n      const { data, error } = await supabase\n        .from('quiz')\n        .insert({\n          title: $createQuizModal.title,\n          organization_id: $currentOrg.id,\n          questions: [\n            {\n              id: 1,\n              label: '',\n              type: 'multichoice',\n              options: [\n                {\n                  id: 'circle',\n                  label: '',\n                  isCorrect: false\n                },\n                {\n                  id: 'triangle',\n                  label: '',\n                  isCorrect: false\n                }\n              ]\n            }\n          ]\n        })\n        .select();\n      isLoading = false;\n\n      if (error) {\n        return errorNotification();\n      } else {\n        $quizesStore = [...$quizesStore, data[0]];\n\n        handleClose();\n        goto(`${$currentOrgPath}/quiz/${data[0].id}`);\n      }\n    }\n  }\n\n  $: open = $createQuizModal.openEdit || $createQuizModal.open;\n</script>\n\n<svelte:head>\n  <title>{$t('components.quiz.title')} - KinetsHub</title>\n</svelte:head>\n\n<Modal\n  onClose={handleClose}\n  bind:open\n  width=\"w-4/5 md:w-2/5\"\n  modalHeading=\"{$createQuizModal.openEdit\n    ? $t('components.quiz.update')\n    : $t('components.quiz.create')} {$t('components.quiz.a_quiz')}\"\n>\n  <form on:submit|preventDefault={createQuiz}>\n    <TextField\n      label={$t('components.quiz.quiz_title')}\n      bind:value={$createQuizModal.title}\n      autofocus={true}\n      placeholder={$t('components.quiz.placehoolder')}\n      className=\"mb-4\"\n      isRequired={true}\n      errorMessage={errors.title}\n      autoComplete={false}\n    />\n\n    <div class=\"mt-5 flex items-center justify-end\">\n      <PrimaryButton\n        className=\"px-6 py-3\"\n        label={$createQuizModal.openEdit\n          ? $t('components.quiz.save')\n          : $t('components.quiz.continue')}\n        type=\"submit\"\n        isDisabled={isLoading}\n        {isLoading}\n      />\n    </div>\n  </form>\n</Modal>\n"],"names":["size","$$props","title","$$invalidate","attributes","labelled","t0_value","ctx","is_function","dirty","set_data","t0","attr","button","button_class_value","notIconClass","div","div_class_value","current","classNames","isIcon","open","isOptionLast","index","options","onClick","option","e","onRename","quiz","createQuizModal","m","onDelete","deleteModal","t1_value","t4_value","pluralize","t6_value","VARIANTS","t1","t4","t6","primarybutton_changes","t3_value","t3","_a","quizcard_changes","isLoading","fetchQuizes","id","snackbar","data","$currentOrg","textfield_props","textfield_changes","title_value","modal_changes","errors","$createQuizModal","error","supabase","$quizesStore","s","set_store_value","quizesStore","goto","$currentOrgPath","$$self","value"],"mappings":"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","x_google_ignoreList":[0]}