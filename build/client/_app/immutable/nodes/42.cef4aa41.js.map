{"version":3,"file":"42.cef4aa41.js","sources":["../../../../../../../../node_modules/.pnpm/carbon-icons-svelte@12.3.0/node_modules/carbon-icons-svelte/lib/WarningFilled.svelte","../../../../../../src/routes/org/[slug]/quiz/[slug]/+page.js","../../../../../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isBoolean.js","../../../../../../src/lib/components/Org/Quiz/QuizQuestion.svelte","../../../../../../src/lib/components/Org/Quiz/Play/Preview.svelte","../../../../../../src/routes/org/[slug]/quiz/[slug]/+page.svelte"],"sourcesContent":["<script>\n  export let size = 16;\n\n  export let title = undefined;\n\n  $: labelled = $$props[\"aria-label\"] || $$props[\"aria-labelledby\"] || title;\n  $: attributes = {\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: Number($$props[\"tabindex\"]) === 0 ? true : undefined\n  };\n</script>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  width={size}\n  height={size}\n  {...attributes}\n  {...$$restProps}>\n  {#if title}<title>{title}</title>{/if}\n  <path d=\"M16,2C8.3,2,2,8.3,2,16s6.3,14,14,14s14-6.3,14-14C30,8.3,23.7,2,16,2z M14.9,8h2.2v11h-2.2V8z M16,25\tc-0.8,0-1.5-0.7-1.5-1.5S15.2,22,16,22c0.8,0,1.5,0.7,1.5,1.5S16.8,25,16,25z\"></path><path fill=\"none\" d=\"M17.5,23.5c0,0.8-0.7,1.5-1.5,1.5c-0.8,0-1.5-0.7-1.5-1.5S15.2,22,16,22\tC16.8,22,17.5,22.7,17.5,23.5z M17.1,8h-2.2v11h2.2V8z\" data-icon-path=\"inner-path\" opacity=\"0\"></path>\n</svg>","export const load = ({ params = { slug: '' } }) => {\n  return {\n    quizId: params.slug\n  };\n};\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && baseGetTag(value) == boolTag);\n}\n\nmodule.exports = isBoolean;\n","<script>\n  import CheckmarkFilledIcon from 'carbon-icons-svelte/lib/CheckmarkFilled.svelte';\n  import CheckmarkOutlineIcon from 'carbon-icons-svelte/lib/CheckmarkOutline.svelte';\n  import { optionImage } from '$lib/utils/constants/quiz';\n  import TextField from '$lib/components/Form/TextField.svelte';\n  import IconButton from '$lib/components/IconButton/index.svelte';\n  import { t } from '$lib/utils/functions/translations';\n\n  export let currentQuestion = {\n    label: ''\n  };\n  export let currentError = {};\n  export let optionHasError = () => false;\n  export let isPreview = false;\n</script>\n\n{#if isPreview}\n  <h1 class=\"text-white mb-5 font-bold\">{currentQuestion.label}</h1>\n{:else}\n  <TextField\n    placeholder={$t('components.quiz.start_typing')}\n    bind:value={currentQuestion.label}\n    className=\"w-full my-4\"\n    errorMessage={currentError.isLabelEmpty && $t('components.quiz.required_field')}\n    isRequired={true}\n    bgColor=\"bg-white\"\n  />\n{/if}\n\n<!-- Options -->\n<div class=\"flex justify-between w-full flex-wrap\">\n  {#each currentQuestion.options || [] as option}\n    <div class=\"w-2/5 bg-white dark:bg-neutral-800 rounded p-5 mb-5 relative\">\n      <img src={optionImage[option.id]} alt={option.id} />\n\n      {#if isPreview}\n        <p class=\"mt-5\">{option.label}</p>\n      {:else}\n        <TextField\n          bind:value={option.label}\n          placeholder={$t('components.quiz.type_answer')}\n          bgColor=\"bg-white\"\n          className=\"mt-3\"\n          isDisabled={currentQuestion.type === 'boolean'}\n          errorMessage={optionHasError(option.id, currentError.options) &&\n            $t('components.quiz.label')}\n        />\n        <div class=\"flex justify-end absolute top-2 right-2\">\n          <IconButton\n            value={option.id}\n            onClick={() => (option.isCorrect = !option.isCorrect)}\n            buttonClassName={option.isCorrect && 'success'}\n          >\n            {#if option.isCorrect}\n              <CheckmarkFilledIcon size={24} class=\"carbon-icon dark:text-white\" />\n            {:else}\n              <CheckmarkOutlineIcon size={24} class=\"carbon-icon dark:text-white\" />\n            {/if}\n          </IconButton>\n        </div>\n      {/if}\n    </div>\n  {/each}\n</div>\n","<script>\n  import { onMount } from 'svelte';\n  import { fly } from 'svelte/transition';\n  import ChevronLeftIcon from 'carbon-icons-svelte/lib/ChevronLeft.svelte';\n  import ChevronRightIcon from 'carbon-icons-svelte/lib/ChevronRight.svelte';\n  import QuizQuestion from '../QuizQuestion.svelte';\n  import PlayContainer from './Container.svelte';\n  import PlayHeader from './Header/index.svelte';\n  import { quizStore } from '$lib/utils/store/org';\n  import { themeImages } from '$lib/utils/constants/quiz';\n  import PrimaryButton from '$lib/components/PrimaryButton/index.svelte';\n  import { VARIANTS } from '$lib/components/PrimaryButton/constants';\n  import IconButton from '$lib/components/IconButton/index.svelte';\n\n  export let exitPreview = () => {};\n\n  let bgImg;\n  let totalQ = $quizStore.questions.length;\n  let curQId = 0;\n  let currentQuestion = $quizStore.questions[0] || {};\n\n  function handlePrev() {\n    const prevQId = curQId - 1;\n    console.log('prevQId', prevQId);\n    const prev = $quizStore.questions[prevQId];\n    console.log('prev', prev);\n    if (prev) {\n      currentQuestion = prev;\n      curQId = prevQId;\n    }\n  }\n\n  function handleNext() {\n    const nextQId = curQId + 1;\n    console.log('nextqid', nextQId);\n    const next = $quizStore.questions[nextQId];\n    console.log('next', next);\n    if (next) {\n      currentQuestion = next;\n      curQId = nextQId;\n    }\n  }\n\n  onMount(() => {\n    bgImg = themeImages[$quizStore.theme].play;\n  });\n</script>\n\n{#if bgImg}\n  <div\n    class=\"absolute inset-0 z-50 bg-white h-screen w-screen\"\n    in:fly={{ y: 500, duration: 500 }}\n    out:fly={{ y: 500, duration: 500 }}\n  >\n    <div\n      class=\"p-5 h-full w-full\"\n      style=\"background: url({bgImg}) no-repeat center center fixed; -webkit-background-size: cover;-moz-background-size: cover;-o-background-size: cover;background-size: cover;min-height: 100vh;height: fit-content;\"\n    >\n      <PlayContainer>\n        <div slot=\"header\">\n          <PlayHeader startCount={true} showCountDown={true} />\n        </div>\n\n        <div slot=\"body\" class=\"quiz-body\">\n          {#if currentQuestion}\n            <QuizQuestion {currentQuestion} isPreview={true} />\n          {:else}\n            <h2>No question added</h2>\n          {/if}\n        </div>\n\n        <div slot=\"footer\" class=\"flex justify-center flex-col\">\n          {#if currentQuestion}\n            <PrimaryButton\n              label=\"Exit Preview\"\n              variant={VARIANTS.TEXT}\n              onClick={exitPreview}\n              className=\"w-fit\"\n            />\n\n            <div class=\"flex justify-center items-center\">\n              <IconButton onClick={handlePrev} size=\"small\">\n                <ChevronLeftIcon size={16} class=\"carbon-icon dark:text-white\" />\n              </IconButton>\n              <p class=\"mx-3\">{curQId + 1} / {totalQ}</p>\n              <IconButton onClick={handleNext} size=\"small\">\n                <ChevronRightIcon size={16} class=\"carbon-icon dark:text-white\" />\n              </IconButton>\n            </div>\n          {/if}\n        </div>\n      </PlayContainer>\n    </div>\n  </div>\n{/if}\n\n<style>\n  .quiz-body {\n    width: 500px;\n    margin: auto;\n  }\n</style>\n","<script>\n  import { onMount } from 'svelte';\n  import { goto } from '$app/navigation';\n  import cloneDeep from 'lodash/cloneDeep';\n  import isBoolean from 'lodash/isBoolean';\n  import ArrowLeftIcon from 'carbon-icons-svelte/lib/ArrowLeft.svelte';\n  import CheckmarkFilledIcon from 'carbon-icons-svelte/lib/CheckmarkFilled.svelte';\n  import WarningFilledIcon from 'carbon-icons-svelte/lib/WarningFilled.svelte';\n\n  import { Select, SelectItem } from 'carbon-components-svelte';\n  import { currentOrgPath, deleteModal } from '$lib/utils/store/org';\n  import PrimaryButton from '$lib/components/PrimaryButton/index.svelte';\n  import { VARIANTS } from '$lib/components/PrimaryButton/constants';\n  import { themeImages, allOptions, booleanOptions, allThemes } from '$lib/utils/constants/quiz';\n  import { quizStore, quizesStore } from '$lib/utils/store/org';\n  import DeleteModal from '$lib/components/Org/Quiz/DeleteModal.svelte';\n  import Preview from '$lib/components/Org/Quiz/Play/Preview.svelte';\n  import QuizQuestion from '$lib/components/Org/Quiz/QuizQuestion.svelte';\n  import { snackbar } from '$lib/components/Snackbar/store';\n  import { supabase } from '$lib/utils/functions/supabase';\n  import { t } from '$lib/utils/functions/translations';\n\n  export let data;\n  const { quizId } = data;\n\n  // Questionnaire State\n  let currentQuestion = $quizStore.questions[0] || {\n    options: []\n  };\n\n  // Behavioural State\n  let openPreview = false;\n  let type = 'multichoice';\n  let errors = [];\n  let currentError = {};\n  let isFocused = false;\n  let selectEl = null;\n\n  function activeClass(q, cq) {\n    if (q.id === cq.id) {\n      return 'bg-gray-200 dark:bg-black';\n    }\n    return '';\n  }\n\n  function addQuestion() {\n    $quizStore.questions = [\n      ...$quizStore.questions,\n      {\n        id: new Date().getTime(),\n        label: '',\n        type: 'multichoice',\n        options: []\n      }\n    ];\n    type = 'multichoice';\n  }\n  function addOption() {\n    const cOptIds = currentQuestion.options.map((o) => o.id);\n    const nextOption = cloneDeep(allOptions).find((o) => !cOptIds.includes(o.id));\n\n    if (!nextOption) return;\n\n    currentQuestion.options = [...currentQuestion.options, nextOption];\n  }\n  function deleteOption() {\n    const opt = cloneDeep(currentQuestion.options);\n    opt.pop();\n    currentQuestion.options = opt;\n  }\n  function handleQuestionTypeChange(type) {\n    const opt =\n      type === 'multichoice'\n        ? cloneDeep(allOptions).filter((o, i) => i < 2)\n        : cloneDeep(booleanOptions);\n\n    currentQuestion.type = type;\n    currentQuestion.options = opt;\n    // $quizStore.questions = $quizStore.questions.map((q) =>\n    //   q.id === currentQuestion.id ? cloneDeep(currentQuestion) : q\n    // );\n  }\n\n  function deleteQuestion() {\n    // Only leave one question\n    if ($quizStore.questions.length === 1) return;\n    $quizStore.questions = $quizStore.questions.filter((q) => q.id !== currentQuestion.id);\n\n    currentQuestion = $quizStore.questions[0];\n  }\n\n  function previewQuiz() {\n    openPreview = !openPreview;\n  }\n  function validateQuiz() {\n    const _errors = [];\n\n    $quizStore.questions.forEach((q) => {\n      const labelError = !!((q.label?.length || 0) < 3);\n      const options = [];\n      let hasOneAnswer = false;\n\n      q.options.forEach((o) => {\n        const valLabelError = !!(o.label.length < 3);\n\n        if (valLabelError) {\n          options.push({\n            id: o.id,\n            error: true\n          });\n        }\n\n        if (o.isCorrect) {\n          hasOneAnswer = true;\n        }\n      });\n\n      _errors.push({\n        isLabelEmpty: labelError,\n        hasOneAnswer,\n        id: q.id,\n        options\n      });\n    });\n\n    errors = _errors;\n\n    currentError = errors.find((e) => e.id === currentQuestion.id) || {};\n\n    return errors;\n  }\n  async function saveQuiz() {\n    const _errors = validateQuiz();\n    if (Array.isArray(_errors) && _errors.length && qHasError(null, _errors)) {\n      console.error('Please fix all errors', errors);\n      return;\n    }\n\n    const { data, error } = await supabase\n      .from('quiz')\n      .update({\n        ...$quizStore,\n        updated_at: new Date()\n      })\n      .match({ id: quizId });\n\n    console.log('data', data);\n    console.log('error', error);\n    if (error) {\n      snackbar.error('snackbar.course_settings.error.not_right');\n      return;\n    } else {\n      snackbar.success('snackbar.course_settings.success.saved');\n    }\n  }\n\n  function qHasError(qId, _errs) {\n    return _errs.some((qe) => {\n      return (\n        (qId ? qe.id === qId : true) && (qe.isLabelEmpty || !qe.hasOneAnswer || !!qe.options.length)\n      );\n    });\n  }\n  function optionHasError(eId, _errs) {\n    if (Array.isArray(_errs) && _errs.length) {\n      return _errs.some((e) => e.id === eId && e.error);\n    }\n\n    return false;\n  }\n\n  onMount(() => {\n    const quiz = $quizesStore.find((q) => q.id === quizId);\n    if (!quiz) {\n      goto(`${$currentOrgPath}/quiz`);\n      return;\n    }\n    quizStore.set(quiz);\n    currentQuestion = quiz.questions[0];\n  });\n</script>\n\n<svelte:head>\n  <title>Quiz</title>\n</svelte:head>\n\n<DeleteModal onDelete={deleteQuestion} />\n\n{#if openPreview}\n  <Preview exitPreview={previewQuiz} />\n{/if}\n\n<section class=\"w-screen h-full flex justify-between\">\n  <!-- Questions list -->\n  <aside class=\"root w-1/5 p-4 bg-gray-100 dark:bg-neutral-800 h-full\">\n    <div class=\"h-full flex flex-col\">\n      <a\n        class=\"text-gray-500 dark:text-white text-md flex items-center\"\n        href={`${$currentOrgPath}/quiz`}\n      >\n        <ArrowLeftIcon size={24} class=\"carbon-icon dark:text-white\" /> Back to Quizzes\n      </a>\n\n      <h3 class=\"my-3\">Quiz</h3>\n\n      <div class=\"mb-3\">\n        {#each $quizStore.questions as question, i}\n          <button\n            class=\"w-full rounded p-3 mb-3 font-bold text-left text-gray-500 dark:text-white flex justify-between {activeClass(\n              question,\n              currentQuestion\n            )}\"\n            on:click={() => {\n              currentQuestion = question;\n              type = question.type;\n            }}\n          >\n            Question {i + 1}\n\n            {#if qHasError(question.id, errors)}\n              <WarningFilledIcon size={20} class=\"carbon-icon error\" />\n            {/if}\n          </button>\n        {/each}\n      </div>\n\n      <div class=\"w-full flex justify-end\">\n        <PrimaryButton label=\"Add Question\" variant={VARIANTS.CONTAINED} onClick={addQuestion} />\n      </div>\n    </div>\n  </aside>\n\n  <div class=\"container w-3/6 h-full\">\n    <div\n      class=\"p-5 h-full\"\n      style=\"background: url({themeImages[$quizStore.theme]\n        ?.editor}) no-repeat center center fixed; -webkit-background-size: cover;-moz-background-size: cover;-o-background-size: cover;background-size: cover;\"\n    >\n      <div class=\"content m-auto\">\n        <h1 class=\"text-white font-bold my-5\">{$quizStore.title}</h1>\n\n        <QuizQuestion {currentQuestion} {optionHasError} {currentError} />\n\n        {#if isBoolean(currentError.hasOneAnswer) && !currentError.hasOneAnswer}\n          <div class=\"mb-5\">\n            <p class=\"text-red-500\">Please select at least one correct answer</p>\n          </div>\n        {/if}\n\n        {#if currentQuestion.type !== 'boolean'}\n          <div class=\"w-full flex justify-center mb-4\">\n            {#if currentQuestion.options.length < allOptions.length}\n              <PrimaryButton\n                label={$t('components.quiz.add_more')}\n                variant={VARIANTS.CONTAINED_WHITE}\n                onClick={addOption}\n                className=\"mr-5\"\n              />\n            {/if}\n            {#if currentQuestion.options.length > 0}\n              <PrimaryButton\n                label={$t('components.quiz.remove_last')}\n                variant={VARIANTS.CONTAINED_WHITE}\n                onClick={deleteOption}\n              />\n            {/if}\n          </div>\n        {/if}\n      </div>\n    </div>\n  </div>\n\n  <!-- Quiz Settings -->\n  <aside class=\"settings w-1/5 p-4 bg-gray-100 dark:bg-neutral-800 h-full\">\n    <div class=\"py-5\">\n      <h5>Quiz settings</h5>\n      <PrimaryButton\n        label=\"Save Changes\"\n        variant={VARIANTS.CONTAINED}\n        onClick={saveQuiz}\n        className=\"my-3\"\n      />\n      <PrimaryButton\n        label=\"Preview Quiz\"\n        variant={VARIANTS.OUTLINED}\n        onClick={previewQuiz}\n        className=\"my-3\"\n      />\n      <PrimaryButton\n        label=\"Delete question\"\n        variant={VARIANTS.TEXT}\n        onClick={() => {\n          if ($quizStore.questions.length === 1) return;\n          $deleteModal.open = true;\n          $deleteModal.isQuestion = true;\n        }}\n        className=\"my-3\"\n      />\n    </div>\n\n    <div class=\"flex flex-col justify-evenly\">\n      <div class=\"my-3\">\n        <!-- Question type -->\n        <Select\n          labelText=\"Question type\"\n          bind:this={selectEl}\n          bind:selected={type}\n          class=\"flex items-center mb-3\"\n          on:focus={() => (isFocused = true)}\n          on:blur={() => (isFocused = false)}\n          on:change={() => {\n            if (!isFocused) return;\n            // Blur after change\n            const onBlur = selectEl?.$$?.callbacks?.blur?.[0];\n            const onFocus = selectEl?.$$?.callbacks?.focus?.[0];\n            setTimeout(() => {\n              onBlur();\n              onFocus();\n            }, 1000);\n\n            handleQuestionTypeChange(type);\n          }}\n        >\n          <SelectItem value=\"multichoice\" text=\"Multi-choice answers\" />\n          <SelectItem value=\"boolean\" text=\"True or False\" />\n        </Select>\n\n        <!--  -->\n        <Select\n          labelText=\"Time limit\"\n          bind:selected={$quizStore.timelimit}\n          class=\"flex items-center mb-3\"\n        >\n          <SelectItem value=\"10 seconds\" text=\"10s\" />\n          <SelectItem value=\"20 seconds\" text=\"20s\" />\n          <SelectItem value=\"30 seconds\" text=\"30s\" />\n          <SelectItem value=\"1 minute\" text=\"1m\" />\n          <SelectItem value=\"2 minute\" text=\"2m\" />\n          <SelectItem value=\"3 minute\" text=\"3m\" />\n        </Select>\n      </div>\n\n      <!-- Theme settings -->\n      <div class=\"my-3\">\n        <p class=\"mb-2\">Choose a theme</p>\n\n        {#each allThemes as _theme}\n          <div\n            class=\"theme rounded-md w-full border cursor-pointer mb-5 relative {$quizStore.theme ===\n              _theme.id && 'border-primary-700'}\"\n          >\n            {#if $quizStore.theme === _theme.id}\n              <CheckmarkFilledIcon\n                size={24}\n                class=\"carbon-icon absolute top-4 right-4\"\n                style=\"fill:white;\"\n              />\n            {/if}\n            <div\n              class=\"w-full rounded-md h-full border flex flex-col-reverse\"\n              style=\"background: url({themeImages[_theme.id]?.card});\"\n              on:click={() => ($quizStore.theme = _theme.id)}\n            >\n              <p class=\"ml-3 mb-3 text-white\">{_theme.label}</p>\n            </div>\n          </div>\n        {/each}\n      </div>\n    </div>\n  </aside>\n</section>\n\n<style>\n  .container {\n    min-width: 696px;\n  }\n  .content {\n    max-width: 550px;\n  }\n  .theme {\n    height: 120px;\n    max-width: 260px;\n  }\n</style>\n"],"names":["size","$$props","title","$$invalidate","attributes","labelled","load","params","baseGetTag","_baseGetTag","isObjectLike","isObjectLike_1","boolTag","isBoolean","value","isBoolean_1","ctx","textfield_props","dirty","textfield_changes","t_1_value","set_data","t_1","iconbutton_changes","attr","img","img_alt_value","current","each_value","ensure_array_like","optionHasError","isPreview","$$self","currentQuestion","option","div1_intro","create_in_transition","div1","fly","div1_outro","create_out_transition","t2_value","VARIANTS","t2","totalQ","$quizStore","curQId","prevQId","prev","nextQId","next","bgImg","themeImages","t1_value","show_if","qHasError","if_block0","allOptions","create_if_block_3","if_block1","create_if_block_2","primarybutton_changes","if_block","create_if_block","set_style","div0","_a","div1_class_value","t9_value","isBoolean$1","each_value_1","select1_props","div4","t9","select1_changes","q","cq","_errs","e","eId","quizId","data","openPreview","type","isFocused","selectEl","nextOption","cloneDeep","o","cOptIds","opt","handleQuestionTypeChange","booleanOptions","set_store_value","quizStore","hasOneAnswer","_errors","labelError","options","errors","currentError","validateQuiz","error","goto","$currentOrgPath","quiz","question","focus_handler","blur_handler","click_handler_1","_theme"],"mappings":"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","x_google_ignoreList":[0,2]}