{"version":3,"file":"47.b303c830.js","sources":["../../../../../../src/routes/org/[slug]/setup/+page.ts","../../../../../../src/routes/org/[slug]/setup/+page.svelte"],"sourcesContent":["import { getSupabase } from '$lib/utils/functions/supabase';\nimport get from 'lodash/get';\n\nconst supabase = getSupabase();\n\nasync function getGenericData(orgSlug: string): Promise<{\n  isCoursePublished: boolean;\n  isCourseCreated: boolean;\n  orgHasAvatarUrl: boolean;\n  courseData: any;\n}> {\n  const { data } = await supabase\n    .from('course')\n    .select(\n      `\n\t    id,\n\t    is_published,\n\t    group:group_id!inner(\n\t      organization!inner(\n\t        avatar_url,\n\t        siteName\n\t      )\n\t    )\n\t  `\n    )\n    .eq('group.organization.siteName', orgSlug);\n\n  const result = data || [];\n\n  console.log('courseData', result);\n\n  return {\n    isCoursePublished: result.some((c) => c.is_published === true),\n    isCourseCreated: result.length > 0,\n    orgHasAvatarUrl: !!get(result[0], 'group.organization.avatar_url', ''),\n    courseData: result\n  };\n}\n\nasync function getIsLessonCreated(\n  orgSlug: string\n): Promise<{ isLessonCreated: boolean; lessonData: any }> {\n  const { data } = await supabase\n    .from('lesson')\n    .select(\n      `\n\t    id,\n\t    course:course_id!inner(\n\t      group:group_id!inner(\n\t        organization!inner(\n\t          siteName\n\t        )\n\t      )\n\t    )\n\t  `\n    )\n    .eq('course.group.organization.siteName', orgSlug);\n  console.log('lessonsData', data);\n\n  return {\n    isLessonCreated: Array.isArray(data) ? data.length > 0 : false,\n    lessonData: data\n  };\n}\n\nasync function getIsExerciseCreated(orgSlug: string): Promise<boolean> {\n  const { data } = await supabase\n    .from('exercise')\n    .select(\n      `\n\t    id,\n\t    lesson:lesson_id!inner(\n\t      course:course_id!inner(\n\t        group:group_id!inner(\n\t          organization!inner(\n\t            siteName\n\t          )\n\t        )\n\t      )\n\t    )\n\t  `\n    )\n    .eq('lesson.course.group.organization.siteName', orgSlug);\n\n  return Array.isArray(data) ? data?.length > 0 : false;\n}\n\nexport const load = async ({ params = { slug: '' } }) => {\n  const { isCourseCreated, isCoursePublished, orgHasAvatarUrl, courseData } = await getGenericData(\n    params.slug\n  );\n  const { isLessonCreated, lessonData } = await getIsLessonCreated(params.slug);\n  const isExerciseCreated = await getIsExerciseCreated(params.slug);\n\n  const data = [\n    {\n      id: 'profile',\n      title: 'setup.personal_profile.title',\n      desc: 'setup.personal_profile.desc',\n      is_completed: false,\n      button_label: 'setup.personal_profile.button_label'\n    },\n    {\n      id: 'organization',\n      title: 'setup.organization_profile.title',\n      desc: 'setup.organization_profile.desc',\n      is_completed: orgHasAvatarUrl,\n      button_label: 'setup.organization_profile.button_label'\n    },\n    {\n      id: 'course',\n      title: 'setup.course.title',\n      desc: 'setup.course.desc',\n      is_completed: isCourseCreated,\n      button_label: 'setup.course.button_label'\n    },\n    {\n      id: 'lesson',\n      title: 'setup.lesson.title',\n      desc: 'setup.lesson.desc',\n      is_completed: isLessonCreated,\n      button_label: 'setup.lesson.button_label'\n    },\n    {\n      id: 'exercise',\n      title: 'setup.exercise.title',\n      desc: 'setup.exercise.desc',\n      is_completed: isExerciseCreated,\n      button_label: 'setup.exercise.button_label'\n    },\n    {\n      id: 'publish',\n      title: 'setup.publish_course.title',\n      desc: 'setup.publish_course.desc',\n      is_completed: isCoursePublished,\n      button_label: 'setup.publish_course.button_label'\n    }\n  ];\n\n  return {\n    orgSiteName: params.slug,\n    setup: data,\n    courses: courseData,\n    lessons: lessonData\n  };\n};\n","<script>\n  import Chip from '$lib/components/Chip/Text.svelte';\n  import PrimaryButton from '$lib/components/PrimaryButton/index.svelte';\n  import { VARIANTS } from '$lib/components/PrimaryButton/constants';\n  import CheckmarkOutline from 'carbon-icons-svelte/lib/CheckmarkOutline.svelte';\n\n  import { currentOrg } from '$lib/utils/store/org';\n  import { goto } from '$app/navigation';\n  import { snackbar } from '$lib/components/Snackbar/store.js';\n  import { profile } from '$lib/utils/store/user';\n  import { t } from '$lib/utils/functions/translations';\n\n  export let data;\n  let setupList = data.setup || [];\n  let completed = 0;\n\n  const StepsEnum = {\n    UPDATE_PROFILE: 'profile',\n    UPDATE_ORG_PROFILE: 'organization',\n    CREATE_COURSE: 'course',\n    CREATE_LESSON: 'lesson',\n    CREATE_EXERCISE: 'exercise',\n    PUBLISH_COURSE: 'publish'\n  };\n\n  const isCompleted = (id) => {\n    return setupList?.find((c) => c.id === id)?.is_completed == true;\n  };\n\n  const handleClick = (id) => {\n    switch (id) {\n      case StepsEnum.CREATE_COURSE:\n        goto(`/org/${$currentOrg.siteName}/courses?create=true`);\n        break;\n\n      case StepsEnum.CREATE_LESSON:\n        if (isCompleted('course')) {\n          const courseId = data?.courses[0].id;\n          goto(`/courses/${courseId}/lessons`);\n        } else {\n          snackbar.info('setup.info_course');\n        }\n        break;\n\n      case StepsEnum.CREATE_EXERCISE:\n        if (isCompleted('lesson')) {\n          const courseId = data?.courses[0].id;\n          const lessonId = data?.lessons[0].id;\n          goto(`/courses/${courseId}/lessons/${lessonId}`);\n        } else {\n          snackbar.info('setup.info_lesson');\n        }\n        break;\n\n      case StepsEnum.PUBLISH_COURSE:\n        if (isCompleted('course')) {\n          const courseId = data?.courses[0].id;\n          goto(`/courses/${courseId}/settings`);\n        } else {\n          snackbar.info('setup.info_course');\n        }\n        break;\n\n      case StepsEnum.UPDATE_PROFILE:\n        goto(`/org/${$currentOrg.siteName}/settings`);\n        break;\n\n      case StepsEnum.UPDATE_ORG_PROFILE:\n        goto(`/org/${$currentOrg.siteName}/settings?tab=org`);\n        break;\n    }\n  };\n\n  $: setupList = setupList.map((item) => {\n    if (item.id === 'profile') {\n      item.is_completed = !$profile.avatar_url.includes('avatars/avatar.png');\n    }\n    return item;\n  });\n\n  $: completed = setupList.filter((list) => list.is_completed).length;\n</script>\n\n<section class=\"w-full md:max-w-4xl mx-auto\">\n  <div class=\"py-2 md:py-10 px-2 md:px-5\">\n    <div class=\"flex items-center gap-2\">\n      <h1 class=\"dark:text-white text-2xl md:text-3xl font-bold\">{$t('setup.get_started')}</h1>\n      <Chip\n        value={`${completed}/${setupList.length}`}\n        className=\"text-[10px] font-semibold px-3 !py-1\"\n        shape=\"rounded-full\"\n      />\n    </div>\n\n    <section class=\"px-4\">\n      {#each setupList as list, i}\n        <div\n          class=\"flex flex-col lg:flex-row lg:items-center justify-between gap-2 w-full py-8 border-b border-gray-300\"\n        >\n          <div class={`space-y-1 flex-1 ${list.is_completed ? 'opacity-50' : ''}  lg:max-w-[50%]`}>\n            <div class=\"flex items-center gap-3\">\n              <Chip\n                value={i + 1}\n                className={`text-[10px] font-semibold !py-1 `}\n                shape=\"rounded-full\"\n              />\n              <p class=\"font-medium text-lg\">{$t(list.title)}</p>\n            </div>\n            <p class={`text-sm`}>\n              {$t(list.desc)}\n            </p>\n          </div>\n          <div class=\"w-full lg:w-[30%]\">\n            <PrimaryButton\n              variant={list.is_completed ? VARIANTS.CONTAINED_DARK : VARIANTS.OUTLINED}\n              className=\"!w-full font-normal text-sm flex items-center gap-2\"\n              onClick={() => handleClick(list.id)}\n              isDisabled={list.is_completed}\n            >\n              {#if list.is_completed}\n                <CheckmarkOutline />\n              {/if}\n              {$t(list.button_label)}\n            </PrimaryButton>\n          </div>\n        </div>\n      {/each}\n    </section>\n  </div>\n</section>\n"],"names":["supabase","getSupabase","getGenericData","orgSlug","data","result","c","get","getIsLessonCreated","getIsExerciseCreated","load","params","isCourseCreated","isCoursePublished","orgHasAvatarUrl","courseData","isLessonCreated","lessonData","isExerciseCreated","if_block","ctx","create_if_block","VARIANTS","attr","div1","div1_class_value","current","dirty","primarybutton_changes","t0_value","set_data","t0","completed","isCompleted","id","_a","setupList","handleClick","StepsEnum","courseId","goto","lessonId","$$invalidate","item","list"],"mappings":"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"}