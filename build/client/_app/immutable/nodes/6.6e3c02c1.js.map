{"version":3,"file":"6.6e3c02c1.js","sources":["../../../../../../../../node_modules/.pnpm/carbon-icons-svelte@12.3.0/node_modules/carbon-icons-svelte/lib/ChevronSort.svelte","../../../../../../../../node_modules/.pnpm/carbon-icons-svelte@12.3.0/node_modules/carbon-icons-svelte/lib/Forum.svelte","../../../../../../../../node_modules/.pnpm/carbon-icons-svelte@12.3.0/node_modules/carbon-icons-svelte/lib/SettingsAdjust.svelte","../../../../../../src/lib/components/Org/AddOrgModal/AddOrgModal.svelte","../../../../../../src/lib/components/OrgSelector/OrgSelectorItem.svelte","../../../../../../src/lib/components/Chip/Plan.svelte","../../../../../../src/lib/components/OrgSelector/OrgSelector.svelte","../../../../../../src/lib/components/Org/SideBar.svelte","../../../../../../src/lib/components/Org/VerifyEmail/VerifyEmailModal.svelte","../../../../../../src/routes/org/[slug]/+layout.svelte"],"sourcesContent":["<script>\n  export let size = 16;\n\n  export let title = undefined;\n\n  $: labelled = $$props[\"aria-label\"] || $$props[\"aria-labelledby\"] || title;\n  $: attributes = {\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: Number($$props[\"tabindex\"]) === 0 ? true : undefined\n  };\n</script>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  width={size}\n  height={size}\n  {...attributes}\n  {...$$restProps}>\n  {#if title}<title>{title}</title>{/if}\n  <path d=\"M16 28L9 21 10.41 19.59 16 25.17 21.59 19.59 23 21 16 28zM16 4L23 11 21.59 12.41 16 6.83 10.41 12.41 9 11 16 4z\"></path>\n</svg>","<script>\n  export let size = 16;\n\n  export let title = undefined;\n\n  $: labelled = $$props[\"aria-label\"] || $$props[\"aria-labelledby\"] || title;\n  $: attributes = {\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: Number($$props[\"tabindex\"]) === 0 ? true : undefined\n  };\n</script>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  width={size}\n  height={size}\n  {...attributes}\n  {...$$restProps}>\n  {#if title}<title>{title}</title>{/if}\n  <path d=\"M28,6H8C6.8,6,6,6.8,6,8v14c0,1.2,0.8,2,2,2h8v-2H8V8h20v14h-7.2L16,28.8l1.6,1.2l4.2-6H28c1.2,0,2-0.8,2-2V8\tC30,6.8,29.2,6,28,6z\"></path><path d=\"M4,18H2V5c0-1.7,1.3-3,3-3h13v2H5C4.4,4,4,4.4,4,5V18z\"></path>\n</svg>","<script>\n  export let size = 16;\n\n  export let title = undefined;\n\n  $: labelled = $$props[\"aria-label\"] || $$props[\"aria-labelledby\"] || title;\n  $: attributes = {\n    \"aria-hidden\": labelled ? undefined : true,\n    role: labelled ? \"img\" : undefined,\n    focusable: Number($$props[\"tabindex\"]) === 0 ? true : undefined\n  };\n</script>\n\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  fill=\"currentColor\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  width={size}\n  height={size}\n  {...attributes}\n  {...$$restProps}>\n  {#if title}<title>{title}</title>{/if}\n  <path d=\"M30 8h-4.1c-.5-2.3-2.5-4-4.9-4s-4.4 1.7-4.9 4H2v2h14.1c.5 2.3 2.5 4 4.9 4s4.4-1.7 4.9-4H30V8zM21 12c-1.7 0-3-1.3-3-3s1.3-3 3-3 3 1.3 3 3S22.7 12 21 12zM2 24h4.1c.5 2.3 2.5 4 4.9 4s4.4-1.7 4.9-4H30v-2H15.9c-.5-2.3-2.5-4-4.9-4s-4.4 1.7-4.9 4H2V24zM11 20c1.7 0 3 1.3 3 3s-1.3 3-3 3-3-1.3-3-3S9.3 20 11 20z\"></path>\n</svg>","<script lang=\"ts\">\n  import Modal from '$lib/components/Modal/index.svelte';\n  import TextField from '$lib/components/Form/TextField.svelte';\n  import PrimaryButton from '$lib/components/PrimaryButton/index.svelte';\n  import { supabase } from '$lib/utils/functions/supabase';\n  import { profile } from '$lib/utils/store/user';\n  import { generateSitename } from '$lib/utils/functions/org';\n  import { getOrganizations } from '$lib/utils/services/org';\n  import { blockedSubdomain } from '$lib/utils/constants/app';\n  import { newOrgModal } from '../store';\n  import { snackbar } from '$lib/components/Snackbar/store';\n  import { createOrgValidation } from '$lib/utils/functions/validator';\n  import { goto } from '$app/navigation';\n  import { t } from '$lib/utils/functions/translations';\n\n  type Error = {\n    orgName: string;\n    siteName: string;\n  };\n  let loading = false;\n  let orgName = '';\n  let siteName = '';\n\n  let errors: Error = {\n    orgName: '',\n    siteName: ''\n  };\n\n  function resetForm() {\n    orgName = '';\n    siteName = '';\n    loading = false;\n\n    errors = {\n      orgName: '',\n      siteName: ''\n    };\n  }\n\n  async function createNewOrg() {\n    errors = createOrgValidation({\n      orgName,\n      siteName\n    }) as Error;\n\n    if (Object.values(errors).length) {\n      loading = false;\n      return;\n    }\n    // Validate if domain is among our seculeded subdomains\n    if (blockedSubdomain.includes(siteName || '')) {\n      errors.siteName = 'Sitename already exists.';\n      loading = false;\n      return;\n    }\n\n    const { data: org, error } = await supabase\n      .from('organization')\n      .insert({\n        name: orgName,\n        siteName: siteName\n      })\n      .select();\n    console.log('Create organisation', org);\n\n    if (error) {\n      console.log('Error: create organisation', error);\n      errors.siteName = 'Sitename already exists.';\n      loading = false;\n      return;\n    }\n\n    if (Array.isArray(org) && org.length) {\n      const orgData = org[0];\n      const { data, error } = await supabase\n        .from('organizationmember')\n        .insert({\n          organization_id: orgData.id,\n          profile_id: $profile.id,\n          role_id: 1\n        })\n        .select();\n\n      console.log('Create organisation member', data);\n\n      if (error) {\n        console.log('Error: create organisation member', error);\n        errors.siteName = $t('add_org.error_organization');\n\n        // Delete organization so it can be recreated.\n        await supabase.from('organization').delete().match({ siteName });\n        loading = false;\n        return;\n      }\n\n      snackbar.success();\n      await getOrganizations($profile.id);\n      goto(`/org/${siteName}`);\n      $newOrgModal.open = false;\n\n      resetForm();\n    }\n  }\n\n  $: siteName = generateSitename(orgName);\n</script>\n\n<Modal\n  onClose={() => ($newOrgModal.open = false)}\n  bind:open={$newOrgModal.open}\n  width=\"w-96\"\n  modalHeading={$t('add_org.create_org')}\n>\n  <form on:submit|preventDefault={createNewOrg} class=\"px-2\">\n    <TextField\n      label={$t('add_org.name')}\n      bind:value={orgName}\n      autoFocus={true}\n      placeholder=\"e.g Pepsi Co\"\n      className=\"mb-4\"\n      isRequired={true}\n      errorMessage={errors.orgName}\n      autoComplete={false}\n    />\n    <!-- Org Site Name -->\n    <TextField\n      label={$t('add_org.org_sitename')}\n      helperMessage={`https://${siteName || ''}.KinetsHub.com`}\n      bind:value={siteName}\n      name=\"sitename\"\n      type=\"text\"\n      placeholder=\"e.g edforall\"\n      className=\"mb-5 w-full\"\n      labelClassName=\"text-lg font-normal\"\n      errorMessage={errors.siteName}\n      isRequired={true}\n    />\n\n    <div class=\"mt-5 flex items-center flex-row-reverse\">\n      <PrimaryButton\n        className=\"px-6 py-3\"\n        label={$t('add_org.create')}\n        type=\"submit\"\n        isLoading={loading}\n      />\n    </div>\n  </form>\n</Modal>\n","<script>\n  import Avatar from '$lib/components/Avatar/index.svelte';\n  import TextChip from '../Chip/Text.svelte';\n  import ComingSoon from '../ComingSoon/index.svelte';\n\n  export let size = '';\n  export let hasDivider = false;\n  export let active = false;\n  export let avatar = '';\n  export let avatarText = '';\n  export let text = '';\n  export let onClick = () => {};\n  export let disabled = false;\n</script>\n\n<div class=\"relative\">\n  <button\n    class=\"w-full {disabled &&\n      'opacity-25'} flex items-center text-start w-[14rem] py-1.5 px-2.5 {hasDivider &&\n      'border-b border-gray-100 dark:border-neutral-600'} {active &&\n      'bg-gray-200 dark:bg-neutral-700 dark:text-white'}\"\n    on:click={disabled ? undefined : onClick}\n  >\n    {#if avatar}\n      <Avatar\n        src={avatar}\n        name={text}\n        shape=\"rounded-md\"\n        width=\"w-[1.2rem]\"\n        height=\"h-[1.2rem]\"\n        className=\"mr-2\"\n      />\n    {:else if avatarText}\n      <TextChip\n        value={avatarText}\n        className=\"mr-2 bg-primary-200 font-medium text-xs dark:text-black\"\n        {size}\n      />\n    {/if}\n    {text}\n  </button>\n  {#if disabled}\n    <div class=\"coming-soon\">\n      <ComingSoon />\n    </div>\n  {/if}\n</div>\n\n<style>\n  button {\n    min-height: 56px;\n  }\n\n  .coming-soon {\n    position: absolute;\n    top: 5px;\n    right: 5px;\n  }\n</style>\n","<script>\n  export let name = '';\n</script>\n\n<p\n  class=\"w-fit text-xs border font-semibold px-1.5 rounded-md text-center text-blue-700 border-blue-700\"\n>\n  {name}\n</p>\n","<script lang=\"ts\">\n  import { Popover, SkeletonText } from 'carbon-components-svelte';\n  import ChevronSort from 'carbon-icons-svelte/lib/ChevronSort.svelte';\n  import OrgSelectorItem from './OrgSelectorItem.svelte';\n  import { currentOrg, orgs, currentOrgPath, currentOrgPlan } from '$lib/utils/store/org';\n  import { goto } from '$app/navigation';\n  import { newOrgModal } from '$lib/components/Org/store';\n  import Avatar from '$lib/components/Avatar/index.svelte';\n  import type { CurrentOrg } from '$lib/utils/types/org';\n  import { setTheme } from '$lib/utils/functions/theme';\n  import TextChip from '$lib/components/Chip/Text.svelte';\n  import Plan from '$lib/components/Chip/Plan.svelte';\n  import { PLAN_NAMES } from 'shared/src/plans/constants';\n  import { t } from '$lib/utils/functions/translations';\n\n  export let canAddOrg = true;\n\n  let open = false;\n\n  function handleAddOrg() {\n    open = false;\n    $newOrgModal.open = true;\n  }\n\n  function onClick(org: CurrentOrg) {\n    localStorage.setItem('classroomio_org_sitename', org.siteName);\n    currentOrg.set(org);\n\n    setTheme(org.theme);\n    goto($currentOrgPath);\n\n    open = false;\n  }\n</script>\n\n<div\n  class=\"org-selector px-4 py-3 border border-l-0 border-r-0 border-t-0 border-gray-200 dark:border-neutral-600 relative\"\n  data-outline\n>\n  {#if $currentOrg.name}\n    <button\n      class=\"flex items-center gap-2 w-full\"\n      on:click={(e) => {\n        e.stopPropagation();\n        open = !open;\n      }}\n    >\n      {#if $currentOrg.avatar_url && $currentOrg.name}\n        <Avatar\n          src={$currentOrg.avatar_url}\n          name={$currentOrg.name}\n          shape=\"rounded-md\"\n          width=\"w-7\"\n          height=\"h-7\"\n        />\n      {:else if $currentOrg.shortName}\n        <TextChip\n          size=\"sm\"\n          value={$currentOrg.shortName}\n          className=\"bg-primary-200 dark:text-black font-medium\"\n        />\n      {/if}\n      <div class=\"flex items-center cursor-pointer max-w-[219px] justify-between w-full\">\n        <div class=\"flex flex-col items-start\">\n          <p class=\"dark:text-white text-sm font-medium whitespace-nowrap truncate mb-1\">\n            {$currentOrg.name}\n          </p>\n\n          <Plan name={$currentOrgPlan ? PLAN_NAMES[$currentOrgPlan.plan_name] : PLAN_NAMES.BASIC} />\n        </div>\n        <ChevronSort size={16} />\n      </div>\n    </button>\n  {:else}\n    <div class=\"w-[219px] h-[30px]\">\n      <SkeletonText style=\"width: 100%; height: 100%;\" />\n    </div>\n  {/if}\n\n  {#if canAddOrg}\n    <Popover class=\"w-[95%] left-[2%] rounded-md\" bind:open closeOnOutsideClick align=\"bottom-left\">\n      {#each $orgs as org}\n        <OrgSelectorItem\n          size=\"sm\"\n          active={$currentOrg.id === org.id}\n          avatar={org.avatar_url}\n          avatarText={org.shortName}\n          text={org.name}\n          hasDivider={true}\n          onClick={() => onClick(org)}\n        />\n      {/each}\n\n      <OrgSelectorItem\n        disabled={true}\n        size=\"\"\n        text={$t('navigation.add_organization')}\n        onClick={handleAddOrg}\n      />\n    </Popover>\n  {/if}\n</div>\n\n<style>\n  :global(.org-selector .bx--popover-contents) {\n    width: 100%;\n  }\n</style>\n","<script lang=\"ts\">\n  import { page } from '$app/stores';\n  import HelpIcon from 'carbon-icons-svelte/lib/Help.svelte';\n  import ForumIcon from 'carbon-icons-svelte/lib/Forum.svelte';\n  import { ChevronRight, SettingsAdjust } from 'carbon-icons-svelte';\n  import PrimaryButton from '$lib/components/PrimaryButton/index.svelte';\n  import OrgSelector from '$lib/components/OrgSelector/OrgSelector.svelte';\n  import HomeIcon from '$lib/components/Icons/HomeIcon.svelte';\n  import CourseIcon from '$lib/components/Icons/CourseIcon.svelte';\n  import QuizIcon from '$lib/components/Icons/QuizIcon.svelte';\n  import SiteSettingsIcon from '$lib/components/Icons/SiteSettingsIcon.svelte';\n  import AudienceIcon from '$lib/components/Icons/AudienceIcon.svelte';\n  import Avatar from '$lib/components/Avatar/index.svelte';\n  import { currentOrgPath, isFreePlan } from '$lib/utils/store/org';\n\n  import { isOrgAdmin } from '$lib/utils/store/org';\n  import { profile } from '$lib/utils/store/user';\n  import { NavClasses } from '$lib/utils/constants/reusableClass';\n  import { sideBar, profileMenu } from './store';\n  import { t } from '$lib/utils/functions/translations';\n  import { goto } from '$app/navigation';\n  import ProfileMenu from '$lib/components/Org/ProfileMenu/index.svelte';\n\n  interface menuItems {\n    label: string;\n    path: string;\n    show: boolean;\n  }\n\n  let menuItems: menuItems[] = [];\n\n  function isActive(pagePath: string, itemPath: string) {\n    const pageLinkItems = pagePath.split('/');\n    const itemLinkItems = itemPath.split('/');\n\n    if (itemLinkItems.length !== pageLinkItems.length) {\n      return false;\n    }\n\n    return pagePath.includes(itemPath);\n  }\n  const toggleSidebar = () => {\n    $sideBar.hidden = !$sideBar.hidden;\n  };\n\n  const openModal = () => {\n    goto(window.location.pathname + '?upgrade=true');\n  };\n\n  $: menuItems = [\n    {\n      path: '',\n      label: $t('org_navigation.dashboard'),\n      show: true\n    },\n    {\n      path: '/courses',\n      label: $t('org_navigation.courses'),\n      show: true\n    },\n    {\n      path: '/community',\n      label: $t('org_navigation.community'),\n      show: true\n    },\n    {\n      path: '/audience',\n      label: $t('org_navigation.audience'),\n      show: true\n    },\n    {\n      path: '/setup',\n      label: $t('org_navigation.setup'),\n      show: $isOrgAdmin\n    }\n  ];\n</script>\n\n<div bind:this={$profileMenu.ref} class=\"static md:relative\">\n  <aside\n    class={`${\n      $sideBar.hidden\n        ? 'absolute z-40 -translate-x-[100%] md:relative md:translate-x-0 top-[48px] md:top-0'\n        : 'absolute z-40 translate-x-0 md:relative top-[48px] md:top-0'\n    } border-r-1 h-[calc(100vh-48px)] w-[250px] min-w-[250px] overflow-y-auto border border-b-0 border-l-0 border-t-0 border-gray-100 dark:border-neutral-600 bg-gray-100 transition dark:bg-neutral-900`}\n  >\n    <div class=\"flex h-full flex-col\">\n      <div class=\"\">\n        <OrgSelector />\n\n        <ul class=\"mt-4 my-2 px-4\">\n          {#each menuItems as menuItem}\n            {#if menuItem.show}\n              <a\n                href=\"{$currentOrgPath}{menuItem.path}\"\n                class=\"text-black no-underline\"\n                on:click={toggleSidebar}\n              >\n                <li\n                  class=\"mb-1 flex items-center gap-2.5 px-2.5 py-2 {NavClasses.item} {isActive(\n                    $page.url.pathname,\n                    `${$currentOrgPath}${menuItem.path}`\n                  )\n                    ? NavClasses.active\n                    : 'dark:text-white'}\"\n                >\n                  {#if menuItem.path === ''}\n                    <HomeIcon />\n                  {:else if menuItem.path === '/courses'}\n                    <CourseIcon />\n                  {:else if menuItem.path === '/site'}\n                    <SiteSettingsIcon />\n                  {:else if menuItem.path === '/community'}\n                    <ForumIcon size={20} class=\"carbon-icon fill-[#000] dark:fill-[#fff]\" />\n                  {:else if menuItem.path === '/quiz'}\n                    <QuizIcon />\n                  {:else if menuItem.path === '/audience'}\n                    <AudienceIcon />\n                  {:else if menuItem.path === '/setup'}\n                    <SettingsAdjust />\n                  {/if}\n                  <p class=\"text-sm font-medium\">{menuItem.label}</p>\n                </li>\n              </a>\n            {/if}\n          {/each}\n        </ul>\n      </div>\n      <span class=\"flex-grow\" />\n\n      {#if $isFreePlan}\n        <div\n          class=\"border-primary-700 mx-4 flex flex-col items-center justify-center gap-4 rounded-md border px-2 py-6 text-center hover:scale-95 transition-all ease-in-out\"\n        >\n          <img src=\"/upgrade.png\" alt=\"upgrade\" class=\"h-16 w-16\" />\n          <span class=\"flex flex-col gap-1\">\n            <p class=\"text-base font-semibold\">{$t('org_navigation.early_adopter')}</p>\n            <p class=\"text-xs\">{$t('org_navigation.unlock')}</p>\n          </span>\n          <PrimaryButton\n            label={$t('org_navigation.upgrade')}\n            onClick={openModal}\n            className=\"font-normal\"\n          />\n        </div>\n      {/if}\n\n      <ul class=\"my-5 px-4 pb-5\">\n        <a href={$currentOrgPath} class=\"text-black no-underline\" on:click={toggleSidebar}>\n          <li class=\"mb-2 flex items-center rounded px-2.5 py-1.5\">\n            <HelpIcon size={20} class=\"carbon-icon dark:text-white\" />\n            <p class=\"ml-2.5 dark:text-white text-sm font-medium\">{$t('org_navigation.help')}</p>\n          </li>\n        </a>\n\n        <button\n          class=\"w-full\"\n          on:click={() => {\n            $profileMenu.open = !$profileMenu.open;\n            $sideBar.hidden = true;\n          }}\n        >\n          <div\n            class=\"text-black no-underline cursor-pointer flex items-center justify-between gap-2.5 px-2.5 py-2 mb-2 {NavClasses.item} {$page.url.pathname.includes(\n              'settings'\n            )\n              ? NavClasses.active\n              : 'dark:text-white'}\"\n          >\n            <div class=\"flex text-start items-center justify-start space-x-1 w-full\">\n              <Avatar\n                src={$profile.avatar_url}\n                name={$profile.username}\n                width=\"w-[1.2rem]\"\n                height=\"h-[1.2rem]\"\n              />\n              <p class=\"text-sm dark:text-white font-medium truncate max-w-full\">\n                {$profile.fullname}\n              </p>\n            </div>\n            <div>\n              <ChevronRight />\n            </div>\n          </div>\n        </button>\n      </ul>\n    </div>\n  </aside>\n\n  <ProfileMenu />\n</div>\n","<script>\n  import Modal from '$lib/components/Modal/index.svelte';\n  import PrimaryButton from '$lib/components/PrimaryButton/index.svelte';\n  import { snackbar } from '$lib/components/Snackbar/store';\n  import { profile } from '$lib/utils/store/user';\n  import {\n    triggerSendEmail,\n    NOTIFICATION_NAME\n  } from '$lib/utils/services/notification/notification';\n  import { currentOrg } from '$lib/utils/store/org';\n  import { t } from '$lib/utils/functions/translations';\n\n  const WAIT_SEC = 120;\n  const WAIT_TIME = WAIT_SEC * 1000;\n\n  let open = false;\n  let loading = false;\n  let isSent = false;\n\n  let interval;\n  let countDown = WAIT_SEC;\n\n  const resendVerificationCode = async () => {\n    loading = true;\n\n    try {\n      // triggerSendEmail(NOTIFICATION_NAME.VERIFY_EMAIL, {\n      //   to: $profile.email,\n      //   profileId: $profile.id,\n      //   fullname: $profile.fullname,\n      //   orgSiteName: $currentOrg.siteName\n      // });\n\n      isSent = true;\n    } catch (error) {\n      snackbar.error('verify_email_modal.snackbar.error');\n    } finally {\n      loading = false;\n    }\n\n    interval = setInterval(() => {\n      countDown = countDown - 1;\n    }, 1000);\n\n    setTimeout(() => {\n      isSent = false;\n\n      clearInterval(interval);\n    }, WAIT_TIME);\n  };\n\n  $: open = false;\n</script>\n\n<Modal {open} isCloseable={false} width=\"w-4/5\" maxWidth=\"w-[500px]\" containerClass=\"p-4\">\n  <div class=\"flex flex-col items-center space-y-6 text-center\">\n    <img src=\"/verify-email.svg\" alt=\"email verification\" />\n    <p class=\"font-bold text-xl\">{$t('verify_email_modal.heading')}</p>\n    <p class=\"text-sm w-[70%] text-gray-700 dark:text-gray-200\">\n      {$t('verify_email_modal.sent_verification')}\n      {$profile.email}\n      {$t('verify_email_modal.to_confirm')}\n    </p>\n\n    <div class=\"flex items-center flex-col\">\n      <PrimaryButton\n        isDisabled={loading || isSent}\n        className=\"font-normal\"\n        onClick={resendVerificationCode}\n      >\n        {#if loading}\n          {$t('verify_email_modal.loading')}\n        {:else}\n          {$t('verify_email_modal.resend')}\n        {/if}\n      </PrimaryButton>\n      {#if isSent}\n        <p class=\"text-xs text-gray-700\">\n          {$t('verify_email_modal.resend_in')}\n          {countDown}\n          {$t('verify_email_modal.seconds')}\n        </p>\n      {/if}\n    </div>\n  </div>\n</Modal>\n","<script>\n  import { page } from '$app/stores';\n  import AddOrgModal from '$lib/components/Org/AddOrgModal/AddOrgModal.svelte';\n  import { isQuizPage } from '$lib/utils/functions/app';\n  import OrgSideBar from '$lib/components/Org/SideBar.svelte';\n  import VerifyEmailModal from '$lib/components/Org/VerifyEmail/VerifyEmailModal.svelte';\n  import Box from '$lib/components/Box/index.svelte';\n  import { currentOrg } from '$lib/utils/store/org';\n  import { goto } from '$app/navigation';\n\n  export let data;\n\n  let ref = null;\n\n  $: if ($currentOrg.id && data.orgName === '*') {\n    const newUrl = $page.url.pathname.replace('*', $currentOrg.siteName);\n    goto(newUrl + $page.url.search);\n  }\n</script>\n\n<AddOrgModal />\n\n<VerifyEmailModal />\n\n<div class=\"org-root w-full flex items-center justify-between\">\n  {#if !isQuizPage($page.url?.pathname)}\n    <OrgSideBar />\n  {/if}\n  <div class=\"org-slot bg-white dark:bg-black w-full\">\n    {#if data.orgName === '*'}\n      <Box>Taking you to your organization...</Box>\n    {:else}\n      <slot />\n    {/if}\n  </div>\n</div>\n"],"names":["size","$$props","title","$$invalidate","attributes","labelled","ctx","dirty","textfield0_changes","textfield1_changes","primarybutton_changes","modal_props","modal_changes","resetForm","createNewOrg","errors","createOrgValidation","orgName","siteName","error","orgData","org","data","error2","supabase","$profile","getOrganizations","goto","set_store_value","newOrgModal","$newOrgModal","$$self","value","hasDivider","active","avatar","avatarText","text","disabled","name","t1_value","PLAN_NAMES","current","set_data","t1","textchip_changes","avatar_changes","orgselectoritem_changes","handleAddOrg","currentOrg","setTheme","$currentOrgPath","e","open","func","onClick","attr","li","li_class_value","NavClasses","isActive","if_block","create_if_block_1$2","t3_value","t3","t5_value","t8_value","aside","aside_class_value","t5","t8","pagePath","itemPath","pageLinkItems","menuItems","toggleSidebar","sideBar","$sideBar","openModal","profileMenu","$profileMenu","$$value","$t","t_1_value","t_1","t0_value","t4_value","t0","t4","t7_value","t7","WAIT_SEC","loading","isSent","countDown","interval","show_if","isQuizPage","_a","newUrl","$page","$currentOrg"],"mappings":"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","x_google_ignoreList":[0,1,2]}