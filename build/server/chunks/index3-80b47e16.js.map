{"version":3,"file":"index3-80b47e16.js","sources":["../../../.svelte-kit/adapter-node/chunks/index3.js"],"sourcesContent":[";\n!function() {\n  try {\n    var e = \"undefined\" != typeof window ? window : \"undefined\" != typeof global ? global : \"undefined\" != typeof self ? self : {}, n = new Error().stack;\n    n && (e._sentryDebugIds = e._sentryDebugIds || {}, e._sentryDebugIds[n] = \"d5aae042-b25f-457e-8780-b61c3d36888f\", e._sentryDebugIdIdentifier = \"sentry-dbid-d5aae042-b25f-457e-8780-b61c3d36888f\");\n  } catch (e2) {\n  }\n}();\nfunction createParser(onParse) {\n  let isFirstChunk;\n  let buffer;\n  let startingPosition;\n  let startingFieldLength;\n  let eventId;\n  let eventName;\n  let data;\n  reset();\n  return {\n    feed,\n    reset\n  };\n  function reset() {\n    isFirstChunk = true;\n    buffer = \"\";\n    startingPosition = 0;\n    startingFieldLength = -1;\n    eventId = void 0;\n    eventName = void 0;\n    data = \"\";\n  }\n  function feed(chunk) {\n    buffer = buffer ? buffer + chunk : chunk;\n    if (isFirstChunk && hasBom(buffer)) {\n      buffer = buffer.slice(BOM.length);\n    }\n    isFirstChunk = false;\n    const length = buffer.length;\n    let position = 0;\n    let discardTrailingNewline = false;\n    while (position < length) {\n      if (discardTrailingNewline) {\n        if (buffer[position] === \"\\n\") {\n          ++position;\n        }\n        discardTrailingNewline = false;\n      }\n      let lineLength = -1;\n      let fieldLength = startingFieldLength;\n      let character;\n      for (let index = startingPosition; lineLength < 0 && index < length; ++index) {\n        character = buffer[index];\n        if (character === \":\" && fieldLength < 0) {\n          fieldLength = index - position;\n        } else if (character === \"\\r\") {\n          discardTrailingNewline = true;\n          lineLength = index - position;\n        } else if (character === \"\\n\") {\n          lineLength = index - position;\n        }\n      }\n      if (lineLength < 0) {\n        startingPosition = length - position;\n        startingFieldLength = fieldLength;\n        break;\n      } else {\n        startingPosition = 0;\n        startingFieldLength = -1;\n      }\n      parseEventStreamLine(buffer, position, fieldLength, lineLength);\n      position += lineLength + 1;\n    }\n    if (position === length) {\n      buffer = \"\";\n    } else if (position > 0) {\n      buffer = buffer.slice(position);\n    }\n  }\n  function parseEventStreamLine(lineBuffer, index, fieldLength, lineLength) {\n    if (lineLength === 0) {\n      if (data.length > 0) {\n        onParse({\n          type: \"event\",\n          id: eventId,\n          event: eventName || void 0,\n          data: data.slice(0, -1)\n          // remove trailing newline\n        });\n        data = \"\";\n        eventId = void 0;\n      }\n      eventName = void 0;\n      return;\n    }\n    const noValue = fieldLength < 0;\n    const field = lineBuffer.slice(index, index + (noValue ? lineLength : fieldLength));\n    let step = 0;\n    if (noValue) {\n      step = lineLength;\n    } else if (lineBuffer[index + fieldLength + 1] === \" \") {\n      step = fieldLength + 2;\n    } else {\n      step = fieldLength + 1;\n    }\n    const position = index + step;\n    const valueLength = lineLength - step;\n    const value = lineBuffer.slice(position, position + valueLength).toString();\n    if (field === \"data\") {\n      data += value ? \"\".concat(value, \"\\n\") : \"\\n\";\n    } else if (field === \"event\") {\n      eventName = value;\n    } else if (field === \"id\" && !value.includes(\"\\0\")) {\n      eventId = value;\n    } else if (field === \"retry\") {\n      const retry = parseInt(value, 10);\n      if (!Number.isNaN(retry)) {\n        onParse({\n          type: \"reconnect-interval\",\n          value: retry\n        });\n      }\n    }\n  }\n}\nconst BOM = [239, 187, 191];\nfunction hasBom(buffer) {\n  return BOM.every((charCode, index) => buffer.charCodeAt(index) === charCode);\n}\nfunction createEventStreamTransformer(customParser) {\n  const textDecoder = new TextDecoder();\n  let eventSourceParser;\n  return new TransformStream({\n    async start(controller) {\n      eventSourceParser = createParser(\n        (event) => {\n          if (\"data\" in event && event.type === \"event\" && event.data === \"[DONE]\" || // Replicate doesn't send [DONE] but does send a 'done' event\n          // @see https://replicate.com/docs/streaming\n          event.event === \"done\") {\n            controller.terminate();\n            return;\n          }\n          if (\"data\" in event) {\n            const parsedMessage = customParser ? customParser(event.data) : event.data;\n            if (parsedMessage)\n              controller.enqueue(parsedMessage);\n          }\n        }\n      );\n    },\n    transform(chunk) {\n      eventSourceParser.feed(textDecoder.decode(chunk));\n    }\n  });\n}\nfunction createCallbacksTransformer(callbacks) {\n  const textEncoder = new TextEncoder();\n  let aggregatedResponse = \"\";\n  const { onStart, onToken, onCompletion } = callbacks || {};\n  return new TransformStream({\n    async start() {\n      if (onStart)\n        await onStart();\n    },\n    async transform(message, controller) {\n      controller.enqueue(textEncoder.encode(message));\n      if (onToken)\n        await onToken(message);\n      if (onCompletion)\n        aggregatedResponse += message;\n    },\n    async flush() {\n      if (onCompletion)\n        await onCompletion(aggregatedResponse);\n    }\n  });\n}\nfunction trimStartOfStreamHelper() {\n  let isStreamStart = true;\n  return (text) => {\n    if (isStreamStart) {\n      text = text.trimStart();\n      if (text)\n        isStreamStart = false;\n    }\n    return text;\n  };\n}\nfunction AIStream(response, customParser, callbacks) {\n  if (!response.ok) {\n    if (response.body) {\n      const reader = response.body.getReader();\n      return new ReadableStream({\n        async start(controller) {\n          const { done, value } = await reader.read();\n          if (!done) {\n            const errorText = new TextDecoder().decode(value);\n            controller.error(new Error(`Response error: ${errorText}`));\n          }\n        }\n      });\n    } else {\n      return new ReadableStream({\n        start(controller) {\n          controller.error(new Error(\"Response error: No response body\"));\n        }\n      });\n    }\n  }\n  const responseBodyStream = response.body || createEmptyReadableStream();\n  return responseBodyStream.pipeThrough(createEventStreamTransformer(customParser)).pipeThrough(createCallbacksTransformer(callbacks));\n}\nfunction createEmptyReadableStream() {\n  return new ReadableStream({\n    start(controller) {\n      controller.close();\n    }\n  });\n}\nfunction readableFromAsyncIterable(iterable) {\n  let it = iterable[Symbol.asyncIterator]();\n  return new ReadableStream({\n    async pull(controller) {\n      const { done, value } = await it.next();\n      if (done)\n        controller.close();\n      else\n        controller.enqueue(value);\n    },\n    async cancel(reason) {\n      var _a;\n      await ((_a = it.return) == null ? void 0 : _a.call(it, reason));\n    }\n  });\n}\nfunction parseOpenAIStream() {\n  const extract = chunkToText();\n  return (data) => {\n    return extract(JSON.parse(data));\n  };\n}\nasync function* streamable(stream) {\n  const extract = chunkToText();\n  for await (const chunk of stream) {\n    const text = extract(chunk);\n    if (text)\n      yield text;\n  }\n}\nfunction chunkToText() {\n  const trimStartOfStream = trimStartOfStreamHelper();\n  let isFunctionStreamingIn;\n  return (json) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o;\n    if ((_c = (_b = (_a = json.choices[0]) == null ? void 0 : _a.delta) == null ? void 0 : _b.function_call) == null ? void 0 : _c.name) {\n      isFunctionStreamingIn = true;\n      return `{\"function_call\": {\"name\": \"${(_e = (_d = json.choices[0]) == null ? void 0 : _d.delta) == null ? void 0 : _e.function_call.name}\", \"arguments\": \"`;\n    } else if ((_h = (_g = (_f = json.choices[0]) == null ? void 0 : _f.delta) == null ? void 0 : _g.function_call) == null ? void 0 : _h.arguments) {\n      const argumentChunk = json.choices[0].delta.function_call.arguments;\n      let escapedPartialJson = argumentChunk.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\//g, \"\\\\/\").replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\").replace(/\\t/g, \"\\\\t\").replace(/\\f/g, \"\\\\f\");\n      return `${escapedPartialJson}`;\n    } else if (isFunctionStreamingIn && (((_i = json.choices[0]) == null ? void 0 : _i.finish_reason) === \"function_call\" || ((_j = json.choices[0]) == null ? void 0 : _j.finish_reason) === \"stop\")) {\n      isFunctionStreamingIn = false;\n      return '\"}}';\n    }\n    const text = trimStartOfStream(\n      (_o = (_n = (_l = (_k = json.choices[0]) == null ? void 0 : _k.delta) == null ? void 0 : _l.content) != null ? _n : (_m = json.choices[0]) == null ? void 0 : _m.text) != null ? _o : \"\"\n    );\n    return text;\n  };\n}\nvar __internal__OpenAIFnMessagesSymbol = Symbol(\"internal_openai_fn_messages\");\nfunction OpenAIStream(res, callbacks) {\n  const cb = callbacks;\n  let stream;\n  if (Symbol.asyncIterator in res) {\n    stream = readableFromAsyncIterable(streamable(res)).pipeThrough(\n      createCallbacksTransformer(cb)\n    );\n  } else {\n    stream = AIStream(res, parseOpenAIStream(), cb);\n  }\n  if (cb && cb.experimental_onFunctionCall) {\n    const functionCallTransformer = createFunctionCallTransformer(cb);\n    return stream.pipeThrough(functionCallTransformer);\n  } else {\n    return stream;\n  }\n}\nfunction createFunctionCallTransformer(callbacks) {\n  const textEncoder = new TextEncoder();\n  let isFirstChunk = true;\n  let aggregatedResponse = \"\";\n  let isFunctionStreamingIn = false;\n  let functionCallMessages = callbacks[__internal__OpenAIFnMessagesSymbol] || [];\n  return new TransformStream({\n    async transform(chunk, controller) {\n      const message = new TextDecoder().decode(chunk);\n      const shouldHandleAsFunction = isFirstChunk && message.startsWith('{\"function_call\":');\n      if (shouldHandleAsFunction) {\n        isFunctionStreamingIn = true;\n        aggregatedResponse += message;\n        isFirstChunk = false;\n        return;\n      }\n      if (!isFunctionStreamingIn) {\n        controller.enqueue(chunk);\n        return;\n      } else {\n        aggregatedResponse += message;\n      }\n    },\n    async flush(controller) {\n      const isEndOfFunction = !isFirstChunk && callbacks.experimental_onFunctionCall && isFunctionStreamingIn;\n      if (isEndOfFunction && callbacks.experimental_onFunctionCall) {\n        isFunctionStreamingIn = false;\n        const payload = JSON.parse(aggregatedResponse);\n        const argumentsPayload = JSON.parse(payload.function_call.arguments);\n        let newFunctionCallMessages = [...functionCallMessages];\n        const functionResponse = await callbacks.experimental_onFunctionCall(\n          {\n            name: payload.function_call.name,\n            arguments: argumentsPayload\n          },\n          (result) => {\n            newFunctionCallMessages = [\n              ...functionCallMessages,\n              {\n                role: \"assistant\",\n                content: \"\",\n                function_call: payload.function_call\n              },\n              {\n                role: \"function\",\n                name: payload.function_call.name,\n                content: JSON.stringify(result)\n              }\n            ];\n            return newFunctionCallMessages;\n          }\n        );\n        if (!functionResponse) {\n          controller.enqueue(textEncoder.encode(aggregatedResponse));\n          return;\n        } else if (typeof functionResponse === \"string\") {\n          controller.enqueue(textEncoder.encode(functionResponse));\n          return;\n        }\n        const filteredCallbacks = {\n          ...callbacks,\n          onStart: void 0,\n          onCompletion: void 0\n        };\n        const openAIStream = OpenAIStream(functionResponse, {\n          ...filteredCallbacks,\n          [__internal__OpenAIFnMessagesSymbol]: newFunctionCallMessages\n        });\n        const reader = openAIStream.getReader();\n        while (true) {\n          const { done, value } = await reader.read();\n          if (done) {\n            break;\n          }\n          controller.enqueue(value);\n        }\n      }\n    }\n  });\n}\nvar StreamingTextResponse = class extends Response {\n  constructor(res, init) {\n    super(res, {\n      ...init,\n      status: 200,\n      headers: {\n        \"Content-Type\": \"text/plain; charset=utf-8\",\n        ...init == null ? void 0 : init.headers\n      }\n    });\n  }\n};\nnew TextDecoder(\"utf-8\");\nexport {\n  OpenAIStream as O,\n  StreamingTextResponse as S\n};\n//# sourceMappingURL=index3.js.map\n"],"names":[],"mappings":"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"}